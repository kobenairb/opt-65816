
.accu 16
.index 16
.16bit
.define __isdigit_locals 0
.define __isxdigit_locals 0
.define __islower_locals 0
.define __toupper_locals 0
.define __isspace_locals 0
.define __isprint_locals 0
.define __tccs___compact_locals 8
.define __free_locals 4
.define __malloc_locals 8
.define __malloc_init_locals 0
.define __compact_locals 0
.define __strtoul_locals 4
.define __strtol_locals 0
.define __strtoull_locals 28
.define __strtoll_locals 0
.define __tccs_skip_atoi_locals 2
.define __tccs_number_locals 162
.define __vsnprintf_locals 48
.define __snprintf_locals 6
.define __vsprintf_locals 0
.define __sprintf_locals 6
.define __vsscanf_locals 104
.define __sscanf_locals 6

.SECTION ".text_0x0" SUPERFREE

isdigit:
; sub sp,#__isdigit_locals
.ifgr __isdigit_locals 0
tsa
sec
sbc #__isdigit_locals
tas
.endif
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isdigit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #48
ldx #1
lda.b tcc__r0
sec
sbc.w #48
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 409 ind 409
; gsym_addr t 0 a 444 ind 444
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 561 ind 561
; cmp op 0x95 inv 1 v 243 r 561
; cmp ne
bne +
; gsym_addr t 0 a 645 ind 645
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 561
; load 0
; type 0 reg 0x1f2 extra 0x231
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isdigit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9e
; cmpcd tcc__r0, #57
ldx #1
lda.b tcc__r0
sec
sbc.w #57
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 561 v 5 r 1029 ind 1029
; gsym_addr t 561 a 1068 ind 1068
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 561 v 243 r 1158 ind 1158
; cmp op 0x95 inv 1 v 243 r 1158
; cmp ne
bne +
__local_0:
; gsym_addr t 561 a 1247 ind 1247
brl __local_1
+
; gtst finished; t 1158
; gtst inv 1 t 0 v 245 r 1321 ind 1321
; VT_jmp r 1321 t 0 ji 1 inv 1 vtop->c.i 1158
; gsym_addr t 0 a 1406 ind 1406
; gtst finished; t 1158
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 0 at 1539
jmp.w __local_2
; gsym_addr t 1577 a 0 ind 1577
; gjmp_addr 0 at 1609
jmp.w __local_3
; gsym_addr t 1647 a 0 ind 1647
__local_1:
; gsym_addr t 1158 a 1679 ind 1679
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 1577 at 1791
jmp.w __local_4
; gsym_addr t 1832 a 1577 ind 1832
__local_3:
; gsym_addr t 1647 a 1867 ind 1867
__local_2:
__local_4:
; gsym_addr t 1832 a 1902 ind 1902
; add sp, #__isdigit_locals
.ifgr __isdigit_locals 0
tsa
clc
adc #__isdigit_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x1" SUPERFREE

isxdigit:
; sub sp,#__isxdigit_locals
.ifgr __isxdigit_locals 0
tsa
sec
sbc #__isxdigit_locals
tas
.endif
; ldpush before load type 0x0 reg 0x1f2
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isxdigit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x0 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 0 t 0 v 0 r 2456 ind 2456
; gsym_addr t 0 a 2493 ind 2493
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 2581 ind 2581
; cmp op 0x95 inv 0 v 243 r 2581
; cmp ne
beq +
; gsym_addr t 0 a 2668 ind 2668
brl __local_5
+
; gtst finished; t 2581
; load 0
; type 0 reg 0x1f2 extra 0x28
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isxdigit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #97
ldx #1
lda.b tcc__r0
sec
sbc.w #97
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 3016 ind 3016
; gsym_addr t 0 a 3053 ind 3053
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 3141 ind 3141
; cmp op 0x95 inv 1 v 243 r 3141
; cmp ne
bne +
; gsym_addr t 0 a 3228 ind 3228
brl __local_6
+
; gtst finished; t 3141
; load 0
; type 0 reg 0x1f2 extra 0xc45
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isxdigit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9e
; cmpcd tcc__r0, #102
ldx #1
lda.b tcc__r0
sec
sbc.w #102
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 3141 v 5 r 3587 ind 3587
; gsym_addr t 3141 a 3627 ind 3627
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 3141 v 243 r 3718 ind 3718
; cmp op 0x95 inv 1 v 243 r 3718
; cmp ne
bne +
__local_6:
; gsym_addr t 3141 a 3808 ind 3808
brl __local_7
+
; gtst finished; t 3718
; gtst inv 0 t 2581 v 245 r 3883 ind 3883
; VT_jmp r 3883 t 2581 ji 1 inv 0 vtop->c.i 3718
; gjmp_addr 2581 at 3974
jmp.w __local_8
; gsym_addr t 4015 a 2581 ind 4015
__local_7:
; gsym_addr t 3718 a 4050 ind 4050
; gtst finished; t 4015
; load 0
; type 0 reg 0x1f2 extra 0x28
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isxdigit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #65
ldx #1
lda.b tcc__r0
sec
sbc.w #65
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 4385 ind 4385
; gsym_addr t 0 a 4422 ind 4422
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 4510 ind 4510
; cmp op 0x95 inv 1 v 243 r 4510
; cmp ne
bne +
; gsym_addr t 0 a 4597 ind 4597
brl __local_9
+
; gtst finished; t 4510
; load 0
; type 0 reg 0x1f2 extra 0x119e
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isxdigit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9e
; cmpcd tcc__r0, #70
ldx #1
lda.b tcc__r0
sec
sbc.w #70
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 4510 v 5 r 4955 ind 4955
; gsym_addr t 4510 a 4995 ind 4995
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 4510 v 243 r 5086 ind 5086
; cmp op 0x95 inv 1 v 243 r 5086
; cmp ne
bne +
__local_9:
; gsym_addr t 4510 a 5176 ind 5176
brl __local_10
+
; gtst finished; t 5086
; gtst inv 0 t 4015 v 245 r 5252 ind 5252
; VT_jmp r 5252 t 4015 ji 1 inv 0 vtop->c.i 5086
; gjmp_addr 4015 at 5343
jmp.w __local_11
; gsym_addr t 5385 a 4015 ind 5385
__local_10:
; gsym_addr t 5086 a 5420 ind 5420
; gtst finished; t 5385
; gtst inv 1 t 0 v 244 r 5479 ind 5479
; VT_jmp r 5479 t 0 ji 0 inv 1 vtop->c.i 5385
; gjmp_addr 0 at 5564
jmp.w __local_12
; gsym_addr t 5603 a 0 ind 5603
__local_5:
__local_8:
__local_11:
; gsym_addr t 5385 a 5635 ind 5635
; gtst finished; t 5603
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 0 at 5771
jmp.w __local_13
; gsym_addr t 5810 a 0 ind 5810
; gjmp_addr 0 at 5842
jmp.w __local_14
; gsym_addr t 5881 a 0 ind 5881
__local_12:
; gsym_addr t 5603 a 5913 ind 5913
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 5810 at 6025
jmp.w __local_15
; gsym_addr t 6067 a 5810 ind 6067
__local_14:
; gsym_addr t 5881 a 6102 ind 6102
__local_13:
__local_15:
; gsym_addr t 6067 a 6137 ind 6137
; add sp, #__isxdigit_locals
.ifgr __isxdigit_locals 0
tsa
clc
adc #__isxdigit_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x2" SUPERFREE

islower:
; sub sp,#__islower_locals
.ifgr __islower_locals 0
tsa
sec
sbc #__islower_locals
tas
.endif
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __islower_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #97
ldx #1
lda.b tcc__r0
sec
sbc.w #97
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 6688 ind 6688
; gsym_addr t 0 a 6725 ind 6725
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 6813 ind 6813
; cmp op 0x95 inv 1 v 243 r 6813
; cmp ne
bne +
; gsym_addr t 0 a 6900 ind 6900
brl __local_16
+
; gtst finished; t 6813
; load 0
; type 0 reg 0x1f2 extra 0x1a9d
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __islower_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9e
; cmpcd tcc__r0, #122
ldx #1
lda.b tcc__r0
sec
sbc.w #122
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 6813 v 5 r 7260 ind 7260
; gsym_addr t 6813 a 7300 ind 7300
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 6813 v 243 r 7391 ind 7391
; cmp op 0x95 inv 1 v 243 r 7391
; cmp ne
bne +
__local_16:
; gsym_addr t 6813 a 7481 ind 7481
brl __local_17
+
; gtst finished; t 7391
; gtst inv 1 t 0 v 245 r 7557 ind 7557
; VT_jmp r 7557 t 0 ji 1 inv 1 vtop->c.i 7391
; gsym_addr t 0 a 7642 ind 7642
; gtst finished; t 7391
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 0 at 7775
jmp.w __local_18
; gsym_addr t 7814 a 0 ind 7814
; gjmp_addr 0 at 7846
jmp.w __local_19
; gsym_addr t 7885 a 0 ind 7885
__local_17:
; gsym_addr t 7391 a 7917 ind 7917
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 7814 at 8029
jmp.w __local_20
; gsym_addr t 8071 a 7814 ind 8071
__local_19:
; gsym_addr t 7885 a 8106 ind 8106
__local_18:
__local_20:
; gsym_addr t 8071 a 8141 ind 8141
; add sp, #__islower_locals
.ifgr __islower_locals 0
tsa
clc
adc #__islower_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x3" SUPERFREE

toupper:
; sub sp,#__toupper_locals
.ifgr __toupper_locals 0
tsa
sec
sbc #__toupper_locals
tas
.endif
; ldpush before load type 0x0 reg 0x1f2
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __toupper_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x0 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l islower
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 8690 ind 8690
; gsym_addr t 0 a 8727 ind 8727
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 8815 ind 8815
; cmp op 0x95 inv 1 v 243 r 8815
; cmp ne
bne +
; gsym_addr t 0 a 8902 ind 8902
brl __local_21
+
; gtst finished; t 8815
; load 0
; type 0 reg 0x1f2 extra 0xffffffff
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __toupper_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 3 r type 0x6)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.w #32
sta.b tcc__r0
; gjmp_addr 0 at 9280
jmp.w __local_22
; gsym_addr t 9319 a 0 ind 9319
; gjmp_addr 0 at 9351
jmp.w __local_23
; gsym_addr t 9390 a 0 ind 9390
__local_21:
; gsym_addr t 8815 a 9422 ind 9422
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __toupper_locals + 1,s
sta.b tcc__r0
; gjmp_addr 9319 at 9595
jmp.w __local_24
; gsym_addr t 9637 a 9319 ind 9637
__local_23:
; gsym_addr t 9390 a 9672 ind 9672
__local_22:
__local_24:
; gsym_addr t 9637 a 9707 ind 9707
; add sp, #__toupper_locals
.ifgr __toupper_locals 0
tsa
clc
adc #__toupper_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x4" SUPERFREE

isspace:
; sub sp,#__isspace_locals
.ifgr __isspace_locals 0
tsa
sec
sbc #__isspace_locals
tas
.endif
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isspace_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #9
ldx #1
lda.b tcc__r0
sec
sbc #9
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 10230 ind 10230
; gsym_addr t 0 a 10269 ind 10269
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 10359 ind 10359
; cmp op 0x95 inv 0 v 243 r 10359
; cmp ne
beq +
; gsym_addr t 0 a 10449 ind 10449
brl __local_25
+
; gtst finished; t 10359
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isspace_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #10
ldx #1
lda.b tcc__r0
sec
sbc #10
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 10359 v 5 r 10776 ind 10776
; gsym_addr t 10359 a 10819 ind 10819
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 10359 v 243 r 10913 ind 10913
; cmp op 0x95 inv 0 v 243 r 10913
; cmp ne
beq +
__local_25:
; gsym_addr t 10359 a 11007 ind 11007
brl __local_26
+
; gtst finished; t 10913
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isspace_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #11
ldx #1
lda.b tcc__r0
sec
sbc #11
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 10913 v 5 r 11338 ind 11338
; gsym_addr t 10913 a 11381 ind 11381
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 10913 v 243 r 11475 ind 11475
; cmp op 0x95 inv 0 v 243 r 11475
; cmp ne
beq +
__local_26:
; gsym_addr t 10913 a 11569 ind 11569
brl __local_27
+
; gtst finished; t 11475
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isspace_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #12
ldx #1
lda.b tcc__r0
sec
sbc #12
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 11475 v 5 r 11900 ind 11900
; gsym_addr t 11475 a 11943 ind 11943
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 11475 v 243 r 12037 ind 12037
; cmp op 0x95 inv 0 v 243 r 12037
; cmp ne
beq +
__local_27:
; gsym_addr t 11475 a 12131 ind 12131
brl __local_28
+
; gtst finished; t 12037
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isspace_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #13
ldx #1
lda.b tcc__r0
sec
sbc #13
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 12037 v 5 r 12462 ind 12462
; gsym_addr t 12037 a 12505 ind 12505
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 12037 v 243 r 12599 ind 12599
; cmp op 0x95 inv 0 v 243 r 12599
; cmp ne
beq +
__local_28:
; gsym_addr t 12037 a 12693 ind 12693
brl __local_29
+
; gtst finished; t 12599
; gtst inv 1 t 0 v 244 r 12773 ind 12773
; VT_jmp r 12773 t 0 ji 0 inv 1 vtop->c.i 12599
; gjmp_addr 0 at 12862
jmp.w __local_30
; gsym_addr t 12902 a 0 ind 12902
__local_29:
; gsym_addr t 12599 a 12936 ind 12936
; gtst finished; t 12902
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 0 at 13076
jmp.w __local_31
; gsym_addr t 13116 a 0 ind 13116
; gjmp_addr 0 at 13150
jmp.w __local_32
; gsym_addr t 13190 a 0 ind 13190
__local_30:
; gsym_addr t 12902 a 13224 ind 13224
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 13116 at 13339
jmp.w __local_33
; gsym_addr t 13383 a 13116 ind 13383
__local_32:
; gsym_addr t 13190 a 13421 ind 13421
__local_31:
__local_33:
; gsym_addr t 13383 a 13459 ind 13459
; add sp, #__isspace_locals
.ifgr __isspace_locals 0
tsa
clc
adc #__isspace_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x5" SUPERFREE

isprint:
; sub sp,#__isprint_locals
.ifgr __isprint_locals 0
tsa
sec
sbc #__isprint_locals
tas
.endif
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isprint_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9d
; cmpcd tcc__r0, #32
ldx #1
lda.b tcc__r0
sec
sbc.w #32
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 14010 ind 14010
; gsym_addr t 0 a 14049 ind 14049
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 14139 ind 14139
; cmp op 0x95 inv 1 v 243 r 14139
; cmp ne
bne +
; gsym_addr t 0 a 14229 ind 14229
brl __local_34
+
; gtst finished; t 14139
; load 0
; type 0 reg 0x1f2 extra 0x373b
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __isprint_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9e
; cmpcd tcc__r0, #126
ldx #1
lda.b tcc__r0
sec
sbc.w #126
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 14139 v 5 r 14592 ind 14592
; gsym_addr t 14139 a 14635 ind 14635
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 14139 v 243 r 14729 ind 14729
; cmp op 0x95 inv 1 v 243 r 14729
; cmp ne
bne +
__local_34:
; gsym_addr t 14139 a 14823 ind 14823
brl __local_35
+
; gtst finished; t 14729
; gtst inv 1 t 0 v 245 r 14903 ind 14903
; VT_jmp r 14903 t 0 ji 1 inv 1 vtop->c.i 14729
; gsym_addr t 0 a 14992 ind 14992
; gtst finished; t 14729
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; gjmp_addr 0 at 15128
jmp.w __local_36
; gsym_addr t 15168 a 0 ind 15168
; gjmp_addr 0 at 15202
jmp.w __local_37
; gsym_addr t 15242 a 0 ind 15242
__local_35:
; gsym_addr t 14729 a 15276 ind 15276
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 15168 at 15391
jmp.w __local_38
; gsym_addr t 15435 a 15168 ind 15435
__local_37:
; gsym_addr t 15242 a 15473 ind 15473
__local_36:
__local_38:
; gsym_addr t 15435 a 15511 ind 15511
; add sp, #__isprint_locals
.ifgr __isprint_locals 0
tsa
clc
adc #__isprint_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x6" SUPERFREE

tccs___compact:
; sub sp,#__tccs___compact_locals
.ifgr __tccs___compact_locals 0
tsa
sec
sbc #__tccs___compact_locals
tas
.endif
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __tccs___compact_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs___compact_locals + 1,s
sta.b tcc__r0h
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff8
; st4 tcc__r0, [sp,-8]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -8 + __tccs___compact_locals + 1,s
lda.b tcc__r0h
sta -6 + __tccs___compact_locals + 1,s
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -2 + __tccs___compact_locals + 1,s
__local_45:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __tccs___compact_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs___compact_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x1f2 ft 0x10 fc 0xfffffffc
; st2 tcc__r1, [sp,-4]
; stack adjust: fc + disp - loc 6
lda.b tcc__r1
sta -4 + __tccs___compact_locals + 1,s
; gtst inv 1 t 0 v 242 r 16905 ind 16905
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 6
lda -4 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; gsym_addr t 0 a 17094 ind 17094
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 17184 ind 17184
; cmp op 0x95 inv 1 v 243 r 17184
; cmp ne
bne +
; gsym_addr t 0 a 17274 ind 17274
brl __local_39
+
; gtst finished; t 17184
; load 0
; type 16 reg 0x1f2 extra 0x26
; ld2 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 6
lda -4 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c -4 r type 0x6)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #1
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 17663 ind 17663
; gsym_addr t 0 a 17702 ind 17702
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 17792 ind 17792
; cmp op 0x95 inv 1 v 243 r 17792
; cmp ne
bne +
; gsym_addr t 0 a 17882 ind 17882
brl __local_40
+
; gtst finished; t 17792
; load 0
; type 16 reg 0x1f2 extra 0x95
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 8
lda -2 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 18217 ind 18217
; gsym_addr t 0 a 18256 ind 18256
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 18346 ind 18346
; cmp op 0x95 inv 1 v 243 r 18346
; cmp ne
bne +
; gsym_addr t 0 a 18436 ind 18436
brl __local_41
+
; gtst finished; t 18346
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 2
lda -8 + __tccs___compact_locals + 1,s
sta.b tcc__r0
lda -6 + __tccs___compact_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc 8
lda -2 + __tccs___compact_locals + 1,s
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0xfffffff8
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 8
lda -2 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 17
lda 7 + __tccs___compact_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 19381 ind 19381
; gsym_addr t 0 a 19420 ind 19420
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 19510 ind 19510
; cmp op 0x95 inv 1 v 243 r 19510
; cmp ne
bne +
; gsym_addr t 0 a 19600 ind 19600
brl __local_42
+
; gtst finished; t 19510
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 2
lda -8 + __tccs___compact_locals + 1,s
sta.b tcc__r0
lda -6 + __tccs___compact_locals + 1,s
sta.b tcc__r0h
; gjmp_addr 0 at 19877
jmp.w __local_43
; gsym_addr t 19917 a 0 ind 19917
__local_42:
; gsym_addr t 19510 a 19951 ind 19951
__local_41:
; gsym_addr t 18346 a 19989 ind 19989
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -2 + __tccs___compact_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0x26
; ld2 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 6
lda -4 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c -4 r type 0x4)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #65534
sta.b tcc__r0
; load 1
; type 4 reg 0x1f2 extra 0x1
; ld4 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 13
lda 3 + __tccs___compact_locals + 1,s
sta.b tcc__r1
lda 5 + __tccs___compact_locals + 1,s
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r1, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r1
sta 3 + __tccs___compact_locals + 1,s
lda.b tcc__r1h
sta 5 + __tccs___compact_locals + 1,s
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xfffffff8
; st4 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -8 + __tccs___compact_locals + 1,s
lda.b tcc__r1h
sta -6 + __tccs___compact_locals + 1,s
; gjmp_addr 0 at 21344
jmp.w __local_44
; gsym_addr t 21384 a 0 ind 21384
__local_40:
; gsym_addr t 17792 a 21418 ind 21418
; load 0
; type 16 reg 0x1f2 extra 0x4def
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 8
lda -2 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x4def
; ld2 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 6
lda -4 + __tccs___compact_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c -2 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -2 + __tccs___compact_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x1
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __tccs___compact_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs___compact_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x4220ca
; ld2 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 6
lda -4 + __tccs___compact_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r0
sta 3 + __tccs___compact_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs___compact_locals + 1,s
__local_44:
; gsym_addr t 21384 a 22790 ind 22790
; gjmp_addr 16456 at 22828
jmp.w __local_45
; gsym_addr t 22872 a 16456 ind 22872
__local_39:
; gsym_addr t 17184 a 22910 ind 22910
; gsym_addr t 0 a 16456 ind 22948
; load 0
; type 16 reg 0x1f2 extra 0x95
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 8
lda -2 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 23241 ind 23241
; gsym_addr t 0 a 23280 ind 23280
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 23370 ind 23370
; cmp op 0x95 inv 1 v 243 r 23370
; cmp ne
bne +
; gsym_addr t 0 a 23460 ind 23460
brl __local_46
+
; gtst finished; t 23370
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 2
lda -8 + __tccs___compact_locals + 1,s
sta.b tcc__r0
lda -6 + __tccs___compact_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc 8
lda -2 + __tccs___compact_locals + 1,s
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0xfffffff8
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 8
lda -2 + __tccs___compact_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 17
lda 7 + __tccs___compact_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 24405 ind 24405
; gsym_addr t 0 a 24444 ind 24444
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 24534 ind 24534
; cmp op 0x95 inv 1 v 243 r 24534
; cmp ne
bne +
; gsym_addr t 0 a 24624 ind 24624
brl __local_47
+
; gtst finished; t 24534
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 2
lda -8 + __tccs___compact_locals + 1,s
sta.b tcc__r0
lda -6 + __tccs___compact_locals + 1,s
sta.b tcc__r0h
; gjmp_addr 19917 at 24901
jmp.w __local_48
; gsym_addr t 24945 a 19917 ind 24945
__local_47:
; gsym_addr t 24534 a 24983 ind 24983
__local_46:
; gsym_addr t 23370 a 25021 ind 25021
; load 0
; type 4 reg 0xf0 extra 0x0
; ld4 #0,tcc__r0
lda.w #0
sta.b tcc__r0
lda.w #0
sta.b tcc__r0h
; gjmp_addr 24945 at 25160
jmp.w __local_49
; gsym_addr t 25204 a 24945 ind 25204
__local_43:
__local_48:
__local_49:
; gsym_addr t 25204 a 25242 ind 25242
; add sp, #__tccs___compact_locals
.ifgr __tccs___compact_locals 0
tsa
clc
adc #__tccs___compact_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x7" SUPERFREE

free:
; sub sp,#__free_locals
.ifgr __free_locals 0
tsa
sec
sbc #__free_locals
tas
.endif
; gtst inv 1 t 0 v 242 r 25528 ind 25528
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __free_locals + 1,s
sta.b tcc__r0
lda 5 + __free_locals + 1,s
sta.b tcc__r0h
; gsym_addr t 0 a 25747 ind 25747
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 25837 ind 25837
; cmp op 0x95 inv 1 v 243 r 25837
; cmp ne
bne +
; gsym_addr t 0 a 25927 ind 25927
brl __local_50
+
; gtst finished; t 25837
; load 0
; type 4 reg 0x1f2 extra 0xd68
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __free_locals + 1,s
sta.b tcc__r0
lda 5 + __free_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
dec.b tcc__r0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -4 + __free_locals + 1,s
lda.b tcc__r0h
sta -2 + __free_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 2
lda -4 + __free_locals + 1,s
sta.b tcc__r0
lda -2 + __free_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x490b40
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x10 c -4 r type 0x10)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r1
and.w #65534
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0xfffffffc
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_50:
; gsym_addr t 25837 a 27069 ind 27069
; gsym_addr t 0 a 27107 ind 27107
; add sp, #__free_locals
.ifgr __free_locals 0
tsa
clc
adc #__free_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x8" SUPERFREE

malloc:
; sub sp,#__malloc_locals
.ifgr __malloc_locals 0
tsa
sec
sbc #__malloc_locals
tas
.endif
; load 0
; type 16 reg 0x1f2 extra 0x94
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 27617 ind 27617
; gsym_addr t 0 a 27656 ind 27656
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 27746 ind 27746
; cmp op 0x95 inv 1 v 243 r 27746
; cmp ne
bne +
; gsym_addr t 0 a 27836 ind 27836
brl __local_51
+
; gtst finished; t 27746
; load 0
; type 4 reg 0xf0 extra 0x0
; ld4 #0,tcc__r0
lda.w #0
sta.b tcc__r0
lda.w #0
sta.b tcc__r0h
; gjmp_addr 0 at 28013
jmp.w __local_52
; gsym_addr t 28053 a 0 ind 28053
__local_51:
; gsym_addr t 27746 a 28087 ind 28087
; load 0
; type 16 reg 0x1f2 extra 0x20
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #5
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0x3
; st2 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r0
sta 3 + __malloc_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0x20
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0xcd
; shr tcc__r0, #2
lsr.b tcc__r0
lsr.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0x3
; st2 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r0
sta 3 + __malloc_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0x20
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #2
asl.b tcc__r0
asl.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0x3
; st2 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r0
sta 3 + __malloc_locals + 1,s
; load 0
; type 16 reg 0x3f0 extra 0x94
; ld2 [tccs_msys + 0], tcc__r0
lda.l tccs_msys + 0
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 29476 ind 29476
; gsym_addr t 0 a 29515 ind 29515
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 29605 ind 29605
; cmp op 0x95 inv 0 v 243 r 29605
; cmp ne
beq +
; gsym_addr t 0 a 29695 ind 29695
brl __local_53
+
; gtst finished; t 29605
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 0], tcc__r0
lda.l tccs_msys + 0
sta.b tcc__r0
lda.l tccs_msys + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x495340
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r1
; load 2
; type 16 reg 0x100 extra 0x495340
; ld2 [tcc__r0,0],tcc__r2
lda.b [tcc__r0]
sta.b tcc__r2
; gen_opi len 2 op 0x97
; ucmpcd tcc__r1, tcc__r2
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r2
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 0 t 29605 v 5 r 30286 ind 30286
; gsym_addr t 29605 a 30329 ind 30329
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 29605 v 243 r 30423 ind 30423
; cmp op 0x95 inv 0 v 243 r 30423
; cmp ne
beq +
__local_53:
; gsym_addr t 29605 a 30517 ind 30517
brl __local_54
+
; gtst finished; t 30423
; gtst inv 1 t 0 v 244 r 30597 ind 30597
; VT_jmp r 30597 t 0 ji 0 inv 1 vtop->c.i 30423
; gjmp_addr 0 at 30686
jmp.w __local_55
; gsym_addr t 30726 a 0 ind 30726
__local_54:
; gsym_addr t 30423 a 30760 ind 30760
; gtst finished; t 30726
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x3f0
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 4], tcc__r0
lda.l tccs_msys + 4
sta.b tcc__r0
lda.l tccs_msys + 4 + 2
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l tccs___compact
; add sp, #6
tsa
clc
adc #6
tas
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [tccs_msys,0]
lda.b tcc__r0
sta.l tccs_msys + 0
lda.b tcc__r0h
sta.l tccs_msys + 0 + 2
; load 0
; type 16 reg 0x3f0 extra 0x94
; ld2 [tccs_msys + 0], tcc__r0
lda.l tccs_msys + 0
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 31725 ind 31725
; gsym_addr t 0 a 31764 ind 31764
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 31854 ind 31854
; cmp op 0x95 inv 1 v 243 r 31854
; cmp ne
bne +
; gsym_addr t 0 a 31944 ind 31944
brl __local_56
+
; gtst finished; t 31854
; load 0
; type 4 reg 0xf0 extra 0x0
; ld4 #0,tcc__r0
lda.w #0
sta.b tcc__r0
lda.w #0
sta.b tcc__r0h
; gjmp_addr 28053 at 32121
jmp.w __local_57
; gsym_addr t 32165 a 28053 ind 32165
__local_56:
; gsym_addr t 31854 a 32203 ind 32203
__local_55:
; gsym_addr t 30726 a 32241 ind 32241
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 0], tcc__r0
lda.l tccs_msys + 0
sta.b tcc__r0
lda.l tccs_msys + 0 + 2
sta.b tcc__r0h
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff8
; st4 tcc__r0, [sp,-8]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -8 + __malloc_locals + 1,s
lda.b tcc__r0h
sta -6 + __malloc_locals + 1,s
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 0], tcc__r0
lda.l tccs_msys + 0
sta.b tcc__r0
lda.l tccs_msys + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x1f2 ft 0x10 fc 0xfffffffe
; st2 tcc__r1, [sp,-2]
; stack adjust: fc + disp - loc 8
lda.b tcc__r1
sta -2 + __malloc_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 3 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
inc.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc 8
lda -2 + __malloc_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r1, tcc__r0
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r0
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33548 ind 33548
; gsym_addr t 0 a 33587 ind 33587
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33677 ind 33677
; cmp op 0x95 inv 1 v 243 r 33677
; cmp ne
bne +
; gsym_addr t 0 a 33767 ind 33767
brl __local_58
+
; gtst finished; t 33677
; load 0
; type 4 reg 0x1f2 extra 0xd68
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 2
lda -8 + __malloc_locals + 1,s
sta.b tcc__r0
lda -6 + __malloc_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c -8 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [tccs_msys,0]
lda.b tcc__r0
sta.l tccs_msys + 0
lda.b tcc__r0h
sta.l tccs_msys + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 0], tcc__r0
lda.l tccs_msys + 0
sta.b tcc__r0
lda.l tccs_msys + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc 8
lda -2 + __malloc_locals + 1,s
sta.b tcc__r1
; load 2
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,3],tcc__r2
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r2
; gen_opi len 2 op -
; sbc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x10 c -2 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 35165
jmp.w __local_59
; gsym_addr t 35205 a 0 ind 35205
__local_58:
; gsym_addr t 33677 a 35239 ind 35239
; load 0
; type 4 reg 0xf0 extra 0x0
; ld4 #0,tcc__r0
lda.w #0
sta.b tcc__r0
lda.w #0
sta.b tcc__r0h
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [tccs_msys,0]
lda.b tcc__r0
sta.l tccs_msys + 0
lda.b tcc__r0h
sta.l tccs_msys + 0 + 2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 8
lda -2 + __malloc_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0x3
; st2 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r0
sta 3 + __malloc_locals + 1,s
__local_59:
; gsym_addr t 35205 a 35796 ind 35796
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 2
lda -8 + __malloc_locals + 1,s
sta.b tcc__r0
lda -6 + __malloc_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 13
lda 3 + __malloc_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x10 c 3 r type 0x10)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r1
ora.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0xfffffff8
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x1f2 extra 0x490b40
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 2
lda -8 + __malloc_locals + 1,s
sta.b tcc__r0
lda -6 + __malloc_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -8 r type 0x6)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
inc.b tcc__r0
; gjmp_addr 32165 at 36761
jmp.w __local_60
; gsym_addr t 36805 a 32165 ind 36805
__local_52:
__local_57:
__local_60:
; gsym_addr t 36805 a 36843 ind 36843
; add sp, #__malloc_locals
.ifgr __malloc_locals 0
tsa
clc
adc #__malloc_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x9" SUPERFREE

malloc_init:
; sub sp,#__malloc_init_locals
.ifgr __malloc_init_locals 0
tsa
sec
sbc #__malloc_init_locals
tas
.endif
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 9
lda 7 + __malloc_init_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0xcd
; shr tcc__r0, #2
lsr.b tcc__r0
lsr.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0x7
; st2 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 9
lda.b tcc__r0
sta 7 + __malloc_init_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 9
lda 7 + __malloc_init_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #2
asl.b tcc__r0
asl.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0x7
; st2 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 9
lda.b tcc__r0
sta 7 + __malloc_init_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __malloc_init_locals + 1,s
sta.b tcc__r0
lda 5 + __malloc_init_locals + 1,s
sta.b tcc__r0h
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x4
; st4 tcc__r0, [tccs_msys,4]
lda.b tcc__r0
sta.l tccs_msys + 4
lda.b tcc__r0h
sta.l tccs_msys + 4 + 2
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [tccs_msys,0]
lda.b tcc__r0
sta.l tccs_msys + 0
lda.b tcc__r0h
sta.l tccs_msys + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 0], tcc__r0
lda.l tccs_msys + 0
sta.b tcc__r0
lda.l tccs_msys + 0 + 2
sta.b tcc__r0h
; load 1
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 4], tcc__r1
lda.l tccs_msys + 4
sta.b tcc__r1
lda.l tccs_msys + 4 + 2
sta.b tcc__r1h
; load 2
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,7],tcc__r2
; stack adjust: fc + disp - loc 9
lda 7 + __malloc_init_locals + 1,s
sta.b tcc__r2
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r2 (0x2) (fr type 0x10 c 7 r type 0x10)
; length xxy 2 vtop->type 0x10
dec.b tcc__r2
dec.b tcc__r2
; store r 0x2 fr 0x101 ft 0x10 fc 0x4
; st2 tcc__r2, [tcc__r1,0]
lda.b tcc__r2
sta.b [tcc__r1]
; store r 0x2 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r2, [tcc__r0,0]
lda.b tcc__r2
sta.b [tcc__r0]
; load 0
; type 4 reg 0x1f2 extra 0x490c3e
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __malloc_init_locals + 1,s
sta.b tcc__r0
lda 5 + __malloc_init_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 9
lda 7 + __malloc_init_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x6)
; length xxy 4 vtop->type 0x4
dec.b tcc__r0
dec.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x3
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gsym_addr t 0 a 39905 ind 39905
; add sp, #__malloc_init_locals
.ifgr __malloc_init_locals 0
tsa
clc
adc #__malloc_init_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0xa" SUPERFREE

compact:
; sub sp,#__compact_locals
.ifgr __compact_locals 0
tsa
sec
sbc #__compact_locals
tas
.endif
; push2 imm r 0xf0
pea.w 65535
; ldpush before load type 0x4 reg 0x3f0
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [tccs_msys + 4], tcc__r0
lda.l tccs_msys + 4
sta.b tcc__r0
lda.l tccs_msys + 4 + 2
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l tccs___compact
; add sp, #6
tsa
clc
adc #6
tas
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [tccs_msys,0]
lda.b tcc__r0
sta.l tccs_msys + 0
lda.b tcc__r0h
sta.l tccs_msys + 0 + 2
; gsym_addr t 0 a 40676 ind 40676
; add sp, #__compact_locals
.ifgr __compact_locals 0
tsa
clc
adc #__compact_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0xb" SUPERFREE

strtoul:
; sub sp,#__strtoul_locals
.ifgr __strtoul_locals 0
tsa
sec
sbc #__strtoul_locals
tas
.endif
; load 0
; type 16 reg 0xf0 extra 0xf0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -2 + __strtoul_locals + 1,s
; gtst inv 1 t 0 v 242 r 41176 ind 41176
; load 0
; type 16 reg 0x1f2 extra 0x79740a0d
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 17
lda 11 + __strtoul_locals + 1,s
sta.b tcc__r0
; gsym_addr t 0 a 41366 ind 41366
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 41456 ind 41456
; cmp op 0x95 inv 1 v 243 r 41456
; cmp ne
bne +
; gsym_addr t 0 a 41546 ind 41546
brl __local_61
+
; gtst finished; t 41456
; gtst inv 1 t 0 v 244 r 41622 ind 41622
; VT_jmp r 41622 t 0 ji 0 inv 1 vtop->c.i 41456
; gjmp_addr 0 at 41711
jmp.w __local_62
; gsym_addr t 41751 a 0 ind 41751
__local_61:
; gsym_addr t 41456 a 41785 ind 41785
; gtst finished; t 41751
; load 0
; type 16 reg 0xf0 extra 0x79740a0d
; ld2 #10,tcc__r0
lda.w #10
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xb
; st2 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 17
lda.b tcc__r0
sta 11 + __strtoul_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #48
ldx #1
lda.b tcc__r1
sec
sbc #48
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 42524 ind 42524
; gsym_addr t 0 a 42563 ind 42563
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 42653 ind 42653
; cmp op 0x95 inv 1 v 243 r 42653
; cmp ne
bne +
; gsym_addr t 0 a 42743 ind 42743
brl __local_63
+
; gtst finished; t 42653
; load 0
; type 16 reg 0xf0 extra 0x79740a0d
; ld2 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xb
; st2 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 17
lda.b tcc__r0
sta 11 + __strtoul_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0xb
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 9
lda.b tcc__r0
sta 3 + __strtoul_locals + 1,s
lda.b tcc__r0h
sta 5 + __strtoul_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #120
ldx #1
lda.b tcc__r1
sec
sbc #120
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 44112 ind 44112
; gsym_addr t 0 a 44151 ind 44151
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 44241 ind 44241
; cmp op 0x95 inv 1 v 243 r 44241
; cmp ne
bne +
; gsym_addr t 0 a 44331 ind 44331
brl __local_64
+
; gtst finished; t 44241
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x6)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isxdigit
; add sp, #2
pla
; gtst inv 1 t 44241 v 0 r 45010 ind 45010
; gsym_addr t 44241 a 45053 ind 45053
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 44241 v 243 r 45147 ind 45147
; cmp op 0x95 inv 1 v 243 r 45147
; cmp ne
bne +
__local_64:
; gsym_addr t 44241 a 45241 ind 45241
brl __local_65
+
; gtst finished; t 45147
; gtst inv 1 t 0 v 245 r 45321 ind 45321
; VT_jmp r 45321 t 0 ji 1 inv 1 vtop->c.i 45147
; gsym_addr t 0 a 45410 ind 45410
; gtst finished; t 45147
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x34490c3e
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 9
lda.b tcc__r0
sta 3 + __strtoul_locals + 1,s
lda.b tcc__r0h
sta 5 + __strtoul_locals + 1,s
; load 0
; type 16 reg 0xf0 extra 0x79740a0d
; ld2 #16,tcc__r0
lda.w #16
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xb
; st2 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 17
lda.b tcc__r0
sta 11 + __strtoul_locals + 1,s
__local_65:
; gsym_addr t 45147 a 46322 ind 46322
__local_63:
; gsym_addr t 42653 a 46360 ind 46360
__local_62:
; gsym_addr t 41751 a 46398 ind 46398
__local_71:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isxdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 46907 ind 46907
; gsym_addr t 0 a 46946 ind 46946
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 47036 ind 47036
; cmp op 0x95 inv 1 v 243 r 47036
; cmp ne
bne +
; gsym_addr t 0 a 47126 ind 47126
brl __local_66
+
; gtst finished; t 47036
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 47672 ind 47672
; gsym_addr t 0 a 47711 ind 47711
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 47801 ind 47801
; cmp op 0x95 inv 1 v 243 r 47801
; cmp ne
bne +
; gsym_addr t 0 a 47891 ind 47891
brl __local_67
+
; gtst finished; t 47801
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 3 r type 0x10)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r1
sbc.w #48
sta.b tcc__r1
; gjmp_addr 0 at 48463
jmp.w __local_68
; gsym_addr t 48503 a 0 ind 48503
__local_67:
; gsym_addr t 47801 a 48537 ind 48537
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l toupper
; add sp, #2
pla
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x10)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.w #65
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x10)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.w #10
sta.b tcc__r0
; gjmp_addr 0 at 49367
jmp.w __local_69
; gsym_addr t 49407 a 0 ind 49407
__local_68:
; gsym_addr t 48503 a 49441 ind 49441
; load 0
; type 0 reg 0x1 extra 0x745ae2e0
; mov tcc__r1, tcc__r0
lda.b tcc__r1
sta.b tcc__r0
lda.b tcc__r1h
sta.b tcc__r0h
__local_69:
; gsym_addr t 49407 a 49603 ind 49603
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xfffffffc
; st2 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -4 + __strtoul_locals + 1,s
; load 1
; type 16 reg 0x1f2 extra 0xb7bc
; ld2 [sp,11],tcc__r1
; stack adjust: fc + disp - loc 17
lda 11 + __strtoul_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 47036 v 5 r 50057 ind 50057
; gsym_addr t 47036 a 50100 ind 50100
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 47036 v 243 r 50194 ind 50194
; cmp op 0x95 inv 1 v 243 r 50194
; cmp ne
bne +
__local_66:
; gsym_addr t 47036 a 50288 ind 50288
brl __local_70
+
; gtst finished; t 50194
; gtst inv 1 t 0 v 245 r 50368 ind 50368
; VT_jmp r 50368 t 0 ji 1 inv 1 vtop->c.i 50194
; gsym_addr t 0 a 50457 ind 50457
; gtst finished; t 50194
; load 0
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 4
lda -2 + __strtoul_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,11],tcc__r1
; stack adjust: fc + disp - loc 17
lda 11 + __strtoul_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op *
; mul tcc__r1,tcc__r0
lda.b tcc__r1
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 2
lda -4 + __strtoul_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c -2 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -2 + __strtoul_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0xfffffffe
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 9
lda.b tcc__r0
sta 3 + __strtoul_locals + 1,s
lda.b tcc__r0h
sta 5 + __strtoul_locals + 1,s
; gjmp_addr 46436 at 52027
jmp.w __local_71
; gsym_addr t 52071 a 46436 ind 52071
__local_70:
; gsym_addr t 50194 a 52109 ind 52109
; gsym_addr t 0 a 46436 ind 52147
; gtst inv 1 t 0 v 242 r 52181 ind 52181
; load 0
; type 4 reg 0x1f2 extra 0x6920746e
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 13
lda 7 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 9 + __strtoul_locals + 1,s
sta.b tcc__r0h
; gsym_addr t 0 a 52414 ind 52414
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 52504 ind 52504
; cmp op 0x95 inv 1 v 243 r 52504
; cmp ne
bne +
; gsym_addr t 0 a 52594 ind 52594
brl __local_72
+
; gtst finished; t 52504
; load 0
; type 4 reg 0x1f2 extra 0x6920746e
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 13
lda 7 + __strtoul_locals + 1,s
sta.b tcc__r0
lda 9 + __strtoul_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 9
lda 3 + __strtoul_locals + 1,s
sta.b tcc__r1
lda 5 + __strtoul_locals + 1,s
sta.b tcc__r1h
; store r 0x1 fr 0x100 ft 0x4 fc 0x7
; st4 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
ldy #0
sta.b [tcc__r0],y
lda.b tcc__r1h
iny
iny
sta.b [tcc__r0],y
__local_72:
; gsym_addr t 52504 a 53190 ind 53190
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 4
lda -2 + __strtoul_locals + 1,s
sta.b tcc__r0
; gjmp_addr 0 at 53369
jmp.w __local_73
; gsym_addr t 53409 a 0 ind 53409
__local_73:
; gsym_addr t 53409 a 53443 ind 53443
; add sp, #__strtoul_locals
.ifgr __strtoul_locals 0
tsa
clc
adc #__strtoul_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0xc" SUPERFREE

strtol:
; sub sp,#__strtol_locals
.ifgr __strtol_locals 0
tsa
sec
sbc #__strtol_locals
tas
.endif
; load 0
; type 4 reg 0x1f2 extra 0x46464944
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __strtol_locals + 1,s
sta.b tcc__r0
lda 5 + __strtol_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #45
ldx #1
lda.b tcc__r1
sec
sbc #45
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 54168 ind 54168
; gsym_addr t 0 a 54207 ind 54207
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 54297 ind 54297
; cmp op 0x95 inv 1 v 243 r 54297
; cmp ne
bne +
; gsym_addr t 0 a 54387 ind 54387
brl __local_74
+
; gtst finished; t 54297
; load 0
; type 4 reg 0x1f2 extra 0x46464944
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __strtol_locals + 1,s
sta.b tcc__r0
lda 5 + __strtol_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x6)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r1
; stack adjust: fc + disp - loc 13
lda 11 + __strtol_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 11
lda 9 + __strtol_locals + 1,s
sta.b tcc__r1
lda 11 + __strtol_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1000
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l strtoul
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 16 reg 0xf0 extra 0x1
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x6)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x1 extra 0x6f6c2067
; mov tcc__r1, tcc__r0
lda.b tcc__r1
sta.b tcc__r0
lda.b tcc__r1h
sta.b tcc__r0h
; gjmp_addr 0 at 55843
jmp.w __local_75
; gsym_addr t 55883 a 0 ind 55883
__local_74:
; gsym_addr t 54297 a 55917 ind 55917
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 13
lda 11 + __strtol_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 11
lda 9 + __strtol_locals + 1,s
sta.b tcc__r0
lda 11 + __strtol_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 11
lda 9 + __strtol_locals + 1,s
sta.b tcc__r0
lda 11 + __strtol_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l strtoul
; add sp, #10
tsa
clc
adc #10
tas
; gjmp_addr 55883 at 56832
jmp.w __local_76
; gsym_addr t 56876 a 55883 ind 56876
__local_75:
__local_76:
; gsym_addr t 56876 a 56914 ind 56914
; add sp, #__strtol_locals
.ifgr __strtol_locals 0
tsa
clc
adc #__strtol_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0xd" SUPERFREE

strtoull:
; sub sp,#__strtoull_locals
.ifgr __strtoull_locals 0
tsa
sec
sbc #__strtoull_locals
tas
.endif
; load 0
; type 28 reg 0xf0 extra 0xf0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x0 fr 0x1f2 ft 0x1c fc 0xfffffffc
; st2 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -4 + __strtoull_locals + 1,s
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xfffffffe
; st2 tcc__r1, [sp,-2]
; stack adjust: fc + disp - loc 4
lda.b tcc__r1
sta -2 + __strtoull_locals + 1,s
; gtst inv 1 t 0 v 242 r 57645 ind 57645
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 21
lda 11 + __strtoull_locals + 1,s
sta.b tcc__r0
; gsym_addr t 0 a 57829 ind 57829
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 57919 ind 57919
; cmp op 0x95 inv 1 v 243 r 57919
; cmp ne
bne +
; gsym_addr t 0 a 58009 ind 58009
brl __local_77
+
; gtst finished; t 57919
; gtst inv 1 t 0 v 244 r 58085 ind 58085
; VT_jmp r 58085 t 0 ji 0 inv 1 vtop->c.i 57919
; gjmp_addr 0 at 58174
jmp.w __local_78
; gsym_addr t 58214 a 0 ind 58214
__local_77:
; gsym_addr t 57919 a 58248 ind 58248
; gtst finished; t 58214
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #10,tcc__r0
lda.w #10
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xb
; st2 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 21
lda.b tcc__r0
sta 11 + __strtoull_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #48
ldx #1
lda.b tcc__r1
sec
sbc #48
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 58991 ind 58991
; gsym_addr t 0 a 59030 ind 59030
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 59120 ind 59120
; cmp op 0x95 inv 1 v 243 r 59120
; cmp ne
bne +
; gsym_addr t 0 a 59210 ind 59210
brl __local_79
+
; gtst finished; t 59120
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xb
; st2 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 21
lda.b tcc__r0
sta 11 + __strtoull_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0xb
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r0
sta 3 + __strtoull_locals + 1,s
lda.b tcc__r0h
sta 5 + __strtoull_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #120
ldx #1
lda.b tcc__r1
sec
sbc #120
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 60589 ind 60589
; gsym_addr t 0 a 60628 ind 60628
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 60718 ind 60718
; cmp op 0x95 inv 1 v 243 r 60718
; cmp ne
bne +
; gsym_addr t 0 a 60808 ind 60808
brl __local_80
+
; gtst finished; t 60718
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x6)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isxdigit
; add sp, #2
pla
; gtst inv 1 t 60718 v 0 r 61497 ind 61497
; gsym_addr t 60718 a 61540 ind 61540
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 60718 v 243 r 61634 ind 61634
; cmp op 0x95 inv 1 v 243 r 61634
; cmp ne
bne +
__local_80:
; gsym_addr t 60718 a 61728 ind 61728
brl __local_81
+
; gtst finished; t 61634
; gtst inv 1 t 0 v 245 r 61808 ind 61808
; VT_jmp r 61808 t 0 ji 1 inv 1 vtop->c.i 61634
; gsym_addr t 0 a 61897 ind 61897
; gtst finished; t 61634
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x36490c3e
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 13
lda.b tcc__r0
sta 3 + __strtoull_locals + 1,s
lda.b tcc__r0h
sta 5 + __strtoull_locals + 1,s
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r0
lda.w #16
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0xb
; st2 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 21
lda.b tcc__r0
sta 11 + __strtoull_locals + 1,s
__local_81:
; gsym_addr t 61634 a 62809 ind 62809
__local_79:
; gsym_addr t 59120 a 62847 ind 62847
__local_78:
; gsym_addr t 58214 a 62885 ind 62885
__local_92:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isxdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 63404 ind 63404
; gsym_addr t 0 a 63443 ind 63443
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 63533 ind 63533
; cmp op 0x95 inv 1 v 243 r 63533
; cmp ne
bne +
; gsym_addr t 0 a 63623 ind 63623
brl __local_82
+
; gtst finished; t 63533
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 64179 ind 64179
; gsym_addr t 0 a 64218 ind 64218
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 64308 ind 64308
; cmp op 0x95 inv 1 v 243 r 64308
; cmp ne
bne +
; gsym_addr t 0 a 64398 ind 64398
brl __local_83
+
; gtst finished; t 64308
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 3 r type 0x1c)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r1
sbc.w #48
sta.b tcc__r1
; gjmp_addr 0 at 64980
jmp.w __local_84
; gsym_addr t 65020 a 0 ind 65020
__local_83:
; gsym_addr t 64308 a 65054 ind 65054
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l islower
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 65572 ind 65572
; gsym_addr t 0 a 65611 ind 65611
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 65701 ind 65701
; cmp op 0x95 inv 1 v 243 r 65701
; cmp ne
bne +
; gsym_addr t 0 a 65791 ind 65791
brl __local_85
+
; gtst finished; t 65701
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l toupper
; add sp, #2
pla
; gjmp_addr 0 at 66347
jmp.w __local_86
; gsym_addr t 66387 a 0 ind 66387
__local_85:
; gsym_addr t 65701 a 66421 ind 66421
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 13
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x2930292a
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gjmp_addr 0 at 66804
jmp.w __local_87
; gsym_addr t 66844 a 0 ind 66844
__local_86:
; gsym_addr t 66387 a 66878 ind 66878
; load 1
; type 0 reg 0x0 extra 0x745adf70
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
__local_87:
; gsym_addr t 66844 a 67040 ind 67040
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 0 r type 0x1c)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r1
sbc.w #65
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 0 r type 0x1c)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r1
adc.w #10
sta.b tcc__r1
; gjmp_addr 0 at 67400
jmp.w __local_88
; gsym_addr t 67440 a 0 ind 67440
__local_84:
; gsym_addr t 65020 a 67474 ind 67474
__local_88:
; gsym_addr t 67440 a 67512 ind 67512
; load 0
; type 0 reg 0x1 extra 0x10770
; mov tcc__r1, tcc__r0
lda.b tcc__r1
sta.b tcc__r0
lda.b tcc__r1h
sta.b tcc__r0h
; gen_opi len 2 op 
; sar tcc__r0, #15
lda.b tcc__r0
ldy.w #15
-
cmp #$8000
ror a
dey
bne -
+
sta.b tcc__r0
; store r 0x1 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -8 + __strtoull_locals + 1,s
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -6 + __strtoull_locals + 1,s
; load 2
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r2
; stack adjust: fc + disp - loc 21
lda 11 + __strtoull_locals + 1,s
sta.b tcc__r2
; load 3
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r3
lda.w #0
sta.b tcc__r3
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r3
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r3
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 68427 ind 68427
; gsym_addr t 0 a 68466 ind 68466
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 68556 ind 68556
; cmp op 0x95 inv 1 v 243 r 68556
; cmp ne
bne +
; gsym_addr t 0 a 68646 ind 68646
brl __local_89
+
; gtst finished; t 68556
; cmpll high order word equal?
tya
bne __local_90
; gen_opi len 2 op 0x92
; ucmpcd tcc__r1, tcc__r2
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r2
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 68556 v 5 r 68895 ind 68895
; gsym_addr t 68556 a 68938 ind 68938
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 68556 v 243 r 69032 ind 69032
; cmp op 0x95 inv 1 v 243 r 69032
; cmp ne
bne +
__local_89:
; gsym_addr t 68556 a 69126 ind 69126
brl __local_91
+
; gtst finished; t 69032
__local_90:
; gsym_addr t 68753 a 69206 ind 69206
; gtst inv 1 t 63533 v 245 r 69244 ind 69244
; VT_jmp r 69244 t 63533 ji 1 inv 1 vtop->c.i 69032
__local_82:
; gsym_addr t 63533 a 69341 ind 69341
; gtst finished; t 69032
; gtst inv 1 t 0 v 245 r 69404 ind 69404
; VT_jmp r 69404 t 0 ji 1 inv 1 vtop->c.i 69032
; gsym_addr t 0 a 69493 ind 69493
; gtst finished; t 69032
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 21
lda 11 + __strtoull_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; saveregging
; store r 0x0 fr 0x1f2 ft 0x1c fc 0xfffffff4
; st2 tcc__r0, [sp,-12]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -12 + __strtoull_locals + 1,s
; store r 0x1 fr 0x1f2 ft 0x1c fc 0xfffffff6
; st2 tcc__r1, [sp,-10]
; stack adjust: fc + disp - loc 4
lda.b tcc__r1
sta -10 + __strtoull_locals + 1,s
; load 2
; type 28 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-4],tcc__r2
; stack adjust: fc + disp - loc 10
lda -4 + __strtoull_locals + 1,s
sta.b tcc__r2
; load 0
; type 0 reg 0x1f2 extra 0x490c3e
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 12
lda -2 + __strtoull_locals + 1,s
sta.b tcc__r0
; saveregging
; store r 0x2 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r2, [sp,-16]
; stack adjust: fc + disp - loc 2
lda.b tcc__r2
sta -16 + __strtoull_locals + 1,s
lda.b tcc__r2h
sta -14 + __strtoull_locals + 1,s
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffec
; st4 tcc__r0, [sp,-20]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -20 + __strtoull_locals + 1,s
lda.b tcc__r0h
sta -18 + __strtoull_locals + 1,s
; load 1
; type 28 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-12],tcc__r1
; stack adjust: fc + disp - loc 10
lda -12 + __strtoull_locals + 1,s
sta.b tcc__r1
; load 0
; type 0 reg 0x1f2 extra 0x490c3e
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 12
lda -10 + __strtoull_locals + 1,s
sta.b tcc__r0
; load 2
; type 16 reg 0x1f2 extra 0x1c
; ld2 [sp,-16],tcc__r2
; stack adjust: fc + disp - loc 6
lda -16 + __strtoull_locals + 1,s
sta.b tcc__r2
; gen_opi len 2 op 0xc2
; umull tcc__r2, tcc__r1 => tcc__r4/tcc__r3
lda.b tcc__r2
sta.b tcc__r9
stz.b tcc__r9h
lda.b tcc__r1
sta.b tcc__r10
stz.b tcc__r10h
jsr.l tcc__mull
stx.b tcc__r3
sty.b tcc__r4
; load 2
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-16],tcc__r2
; stack adjust: fc + disp - loc 6
lda -16 + __strtoull_locals + 1,s
sta.b tcc__r2
; gen_opi len 2 op *
; mul tcc__r0,tcc__r2
lda.b tcc__r0
sta.b tcc__r9
lda.b tcc__r2
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r2
; load 0
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-20],tcc__r0
; stack adjust: fc + disp - loc 2
lda -20 + __strtoull_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op *
; mul tcc__r1,tcc__r0
lda.b tcc__r1
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r2 (0x2) (fr type 0x10 c -16 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r2
adc.b tcc__r0
sta.b tcc__r2
; gen_opi len 2 op +
; adc tcc__r2 (0x2), tcc__r3 (0x3) (fr type 0x10 c -16 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r3
adc.b tcc__r2
sta.b tcc__r3
; saveregging
; store r 0x4 fr 0x1f2 ft 0x4 fc 0xffffffe8
; st4 tcc__r4, [sp,-24]
; stack adjust: fc + disp - loc 2
lda.b tcc__r4
sta -24 + __strtoull_locals + 1,s
lda.b tcc__r4h
sta -22 + __strtoull_locals + 1,s
; saveregging
; store r 0x3 fr 0x1f2 ft 0x4 fc 0xffffffe4
; st4 tcc__r3, [sp,-28]
; stack adjust: fc + disp - loc 2
lda.b tcc__r3
sta -28 + __strtoull_locals + 1,s
lda.b tcc__r3h
sta -26 + __strtoull_locals + 1,s
; load 0
; type 28 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 22
lda -8 + __strtoull_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x490c3e
; ld2 [sp,-6],tcc__r1
; stack adjust: fc + disp - loc 24
lda -6 + __strtoull_locals + 1,s
sta.b tcc__r1
; load 2
; type 16 reg 0x1f2 extra 0x1c
; ld2 [sp,-24],tcc__r2
; stack adjust: fc + disp - loc 6
lda -24 + __strtoull_locals + 1,s
sta.b tcc__r2
; gen_opi len 2 op 0xc3
; adc tcc__r0 (0x0), tcc__r2 (0x2) (fr type 0x10 c -24 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r2
adc.b tcc__r0
sta.b tcc__r2
; load 0
; type 16 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-28],tcc__r0
; stack adjust: fc + disp - loc 2
lda -28 + __strtoull_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0xc4
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c -28 r type 0x10)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x2 fr 0x1f2 ft 0x1c fc 0xfffffffc
; st2 tcc__r2, [sp,-4]
; stack adjust: fc + disp - loc 26
lda.b tcc__r2
sta -4 + __strtoull_locals + 1,s
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 28
lda.b tcc__r0
sta -2 + __strtoull_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 33
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0xfffffffe
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 33
lda.b tcc__r0
sta 3 + __strtoull_locals + 1,s
lda.b tcc__r0h
sta 5 + __strtoull_locals + 1,s
; gjmp_addr 62923 at 74637
jmp.w __local_92
; gsym_addr t 74681 a 62923 ind 74681
__local_91:
; gsym_addr t 69032 a 74719 ind 74719
; gsym_addr t 0 a 62923 ind 74757
; gtst inv 1 t 0 v 242 r 74791 ind 74791
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 37
lda 7 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 9 + __strtoull_locals + 1,s
sta.b tcc__r0h
; gsym_addr t 0 a 75019 ind 75019
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 75109 ind 75109
; cmp op 0x95 inv 1 v 243 r 75109
; cmp ne
bne +
; gsym_addr t 0 a 75199 ind 75199
brl __local_93
+
; gtst finished; t 75109
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 37
lda 7 + __strtoull_locals + 1,s
sta.b tcc__r0
lda 9 + __strtoull_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x66695c00
; ld4 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 33
lda 3 + __strtoull_locals + 1,s
sta.b tcc__r1
lda 5 + __strtoull_locals + 1,s
sta.b tcc__r1h
; store r 0x1 fr 0x100 ft 0x4 fc 0x7
; st4 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
ldy #0
sta.b [tcc__r0],y
lda.b tcc__r1h
iny
iny
sta.b [tcc__r0],y
__local_93:
; gsym_addr t 75109 a 75800 ind 75800
; load 0
; type 28 reg 0x1f2 extra 0x0
; ld2 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 26
lda -4 + __strtoull_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x12818
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc 28
lda -2 + __strtoull_locals + 1,s
sta.b tcc__r1
; gjmp_addr 0 at 76127
jmp.w __local_94
; gsym_addr t 76167 a 0 ind 76167
__local_94:
; gsym_addr t 76167 a 76201 ind 76201
; add sp, #__strtoull_locals
.ifgr __strtoull_locals 0
tsa
clc
adc #__strtoull_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0xe" SUPERFREE

strtoll:
; sub sp,#__strtoll_locals
.ifgr __strtoll_locals 0
tsa
sec
sbc #__strtoll_locals
tas
.endif
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __strtoll_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoll_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #45
ldx #1
lda.b tcc__r1
sec
sbc #45
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 76928 ind 76928
; gsym_addr t 0 a 76967 ind 76967
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 77057 ind 77057
; cmp op 0x95 inv 1 v 243 r 77057
; cmp ne
bne +
; gsym_addr t 0 a 77147 ind 77147
brl __local_95
+
; gtst finished; t 77057
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __strtoll_locals + 1,s
sta.b tcc__r0
lda 5 + __strtoll_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x6)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r1
; stack adjust: fc + disp - loc 13
lda 11 + __strtoll_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 11
lda 9 + __strtoll_locals + 1,s
sta.b tcc__r1
lda 11 + __strtoll_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1000
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l strtoull
; add sp, #10
tsa
clc
adc #10
tas
; load 2
; type 28 reg 0xf0 extra 0x1
; ld2 #0,tcc__r2
lda.w #0
sta.b tcc__r2
; load 3
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r3
lda.w #0
sta.b tcc__r3
; gen_opi len 2 op 0xc5
; sbc tcc__r0 (0x0), tcc__r2 (0x2) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r2
sbc.b tcc__r0
sta.b tcc__r2
; gen_opi len 2 op 0xc6
; sbc tcc__r1 (0x1), tcc__r3 (0x3) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r3
sbc.b tcc__r1
sta.b tcc__r3
; load 0
; type 12 reg 0x2 extra 0x0
; mov tcc__r2, tcc__r0
lda.b tcc__r2
sta.b tcc__r0
lda.b tcc__r2h
sta.b tcc__r0h
; load 1
; type 12 reg 0x3 extra 0x0
; mov tcc__r3, tcc__r1
lda.b tcc__r3
sta.b tcc__r1
lda.b tcc__r3h
sta.b tcc__r1h
; gjmp_addr 0 at 78964
jmp.w __local_96
; gsym_addr t 79004 a 0 ind 79004
__local_95:
; gsym_addr t 77057 a 79038 ind 79038
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 13
lda 11 + __strtoll_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 11
lda 9 + __strtoll_locals + 1,s
sta.b tcc__r0
lda 11 + __strtoll_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x46464944
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 11
lda 9 + __strtoll_locals + 1,s
sta.b tcc__r0
lda 11 + __strtoll_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l strtoull
; add sp, #10
tsa
clc
adc #10
tas
; gjmp_addr 79004 at 79966
jmp.w __local_97
; gsym_addr t 80010 a 79004 ind 80010
__local_96:
__local_97:
; gsym_addr t 80010 a 80048 ind 80048
; add sp, #__strtoll_locals
.ifgr __strtoll_locals 0
tsa
clc
adc #__strtoll_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0xf" SUPERFREE

tccs_skip_atoi:
; sub sp,#__tccs_skip_atoi_locals
.ifgr __tccs_skip_atoi_locals 0
tsa
sec
sbc #__tccs_skip_atoi_locals
tas
.endif
; load 0
; type 0 reg 0xf0 extra 0xf0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -2 + __tccs_skip_atoi_locals + 1,s
__local_99:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 7
lda 3 + __tccs_skip_atoi_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_skip_atoi_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x100 extra 0x0
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; load 0
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r0
; ldpush before load type 0x0 reg 0x0
; ldpush2 (type 0x0 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 81213 ind 81213
; gsym_addr t 0 a 81252 ind 81252
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 81342 ind 81342
; cmp op 0x95 inv 1 v 243 r 81342
; cmp ne
bne +
; gsym_addr t 0 a 81432 ind 81432
brl __local_98
+
; gtst finished; t 81342
; load 0
; type 0 reg 0x1f2 extra 0xffffffff
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 2
lda -2 + __tccs_skip_atoi_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op *
; mul #10, tcc__r0
lda.w #10
sta.b tcc__r9
lda.b tcc__r0
sta.b tcc__r10
jsr.l tcc__mul
sta.b tcc__r0
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 7
lda 3 + __tccs_skip_atoi_locals + 1,s
sta.b tcc__r1
lda 5 + __tccs_skip_atoi_locals + 1,s
sta.b tcc__r1h
; load 2
; type 4 reg 0x101 extra 0x0
; ld4 [tcc__r1,0],tcc__r2
ldy #0
lda.b [tcc__r1],y
sta.b tcc__r2
iny
iny
lda.b [tcc__r1],y
sta.b tcc__r2h
; load 3
; type 0 reg 0x2 extra 0x745addc0
; mov tcc__r2, tcc__r3
lda.b tcc__r2
sta.b tcc__r3
lda.b tcc__r2h
sta.b tcc__r3h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r2 (0x2) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r2
; store r 0x2 fr 0x101 ft 0x4 fc 0x3
; st4 tcc__r2, [tcc__r1,0]
lda.b tcc__r2
ldy #0
sta.b [tcc__r1],y
lda.b tcc__r2h
iny
iny
sta.b [tcc__r1],y
; load 1
; type 1 reg 0x1103 extra 0x0
; ld1 [tcc__r3,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r3]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x0 c -2 r type 0x0)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -2 r type 0x0)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.w #48
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -2 + __tccs_skip_atoi_locals + 1,s
; gjmp_addr 80585 at 83154
jmp.w __local_99
; gsym_addr t 83198 a 80585 ind 83198
__local_98:
; gsym_addr t 81342 a 83236 ind 83236
; gsym_addr t 0 a 80585 ind 83274
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 2
lda -2 + __tccs_skip_atoi_locals + 1,s
sta.b tcc__r0
; gjmp_addr 0 at 83455
jmp.w __local_100
; gsym_addr t 83496 a 0 ind 83496
__local_100:
; gsym_addr t 83496 a 83530 ind 83530
; add sp, #__tccs_skip_atoi_locals
.ifgr __tccs_skip_atoi_locals 0
tsa
clc
adc #__tccs_skip_atoi_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x10" SUPERFREE

tccs_number:
; sub sp,#__tccs_number_locals
.ifgr __tccs_number_locals 0
tsa
sec
sbc #__tccs_number_locals
tas
.endif
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #48,tcc__r0
lda.w #48
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff93
; st1 tcc__r0, [sp,-109]
; stack adjust: fc + disp - loc 2
sep #$20
lda.b tcc__r0
sta -109 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #49,tcc__r0
lda.w #49
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff94
; st1 tcc__r0, [sp,-108]
; stack adjust: fc + disp - loc 3
sep #$20
lda.b tcc__r0
sta -108 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #50,tcc__r0
lda.w #50
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff95
; st1 tcc__r0, [sp,-107]
; stack adjust: fc + disp - loc 4
sep #$20
lda.b tcc__r0
sta -107 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #51,tcc__r0
lda.w #51
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff96
; st1 tcc__r0, [sp,-106]
; stack adjust: fc + disp - loc 5
sep #$20
lda.b tcc__r0
sta -106 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #52,tcc__r0
lda.w #52
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff97
; st1 tcc__r0, [sp,-105]
; stack adjust: fc + disp - loc 6
sep #$20
lda.b tcc__r0
sta -105 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #53,tcc__r0
lda.w #53
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff98
; st1 tcc__r0, [sp,-104]
; stack adjust: fc + disp - loc 7
sep #$20
lda.b tcc__r0
sta -104 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #54,tcc__r0
lda.w #54
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff99
; st1 tcc__r0, [sp,-103]
; stack adjust: fc + disp - loc 8
sep #$20
lda.b tcc__r0
sta -103 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #55,tcc__r0
lda.w #55
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff9a
; st1 tcc__r0, [sp,-102]
; stack adjust: fc + disp - loc 9
sep #$20
lda.b tcc__r0
sta -102 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #56,tcc__r0
lda.w #56
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff9b
; st1 tcc__r0, [sp,-101]
; stack adjust: fc + disp - loc 10
sep #$20
lda.b tcc__r0
sta -101 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #57,tcc__r0
lda.w #57
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff9c
; st1 tcc__r0, [sp,-100]
; stack adjust: fc + disp - loc 11
sep #$20
lda.b tcc__r0
sta -100 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #97,tcc__r0
lda.w #97
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff9d
; st1 tcc__r0, [sp,-99]
; stack adjust: fc + disp - loc 12
sep #$20
lda.b tcc__r0
sta -99 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #98,tcc__r0
lda.w #98
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff9e
; st1 tcc__r0, [sp,-98]
; stack adjust: fc + disp - loc 13
sep #$20
lda.b tcc__r0
sta -98 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #99,tcc__r0
lda.w #99
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff9f
; st1 tcc__r0, [sp,-97]
; stack adjust: fc + disp - loc 14
sep #$20
lda.b tcc__r0
sta -97 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #100,tcc__r0
lda.w #100
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa0
; st1 tcc__r0, [sp,-96]
; stack adjust: fc + disp - loc 15
sep #$20
lda.b tcc__r0
sta -96 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #101,tcc__r0
lda.w #101
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa1
; st1 tcc__r0, [sp,-95]
; stack adjust: fc + disp - loc 16
sep #$20
lda.b tcc__r0
sta -95 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #102,tcc__r0
lda.w #102
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa2
; st1 tcc__r0, [sp,-94]
; stack adjust: fc + disp - loc 17
sep #$20
lda.b tcc__r0
sta -94 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #103,tcc__r0
lda.w #103
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa3
; st1 tcc__r0, [sp,-93]
; stack adjust: fc + disp - loc 18
sep #$20
lda.b tcc__r0
sta -93 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #104,tcc__r0
lda.w #104
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa4
; st1 tcc__r0, [sp,-92]
; stack adjust: fc + disp - loc 19
sep #$20
lda.b tcc__r0
sta -92 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #105,tcc__r0
lda.w #105
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa5
; st1 tcc__r0, [sp,-91]
; stack adjust: fc + disp - loc 20
sep #$20
lda.b tcc__r0
sta -91 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #106,tcc__r0
lda.w #106
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa6
; st1 tcc__r0, [sp,-90]
; stack adjust: fc + disp - loc 21
sep #$20
lda.b tcc__r0
sta -90 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #107,tcc__r0
lda.w #107
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa7
; st1 tcc__r0, [sp,-89]
; stack adjust: fc + disp - loc 22
sep #$20
lda.b tcc__r0
sta -89 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #108,tcc__r0
lda.w #108
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa8
; st1 tcc__r0, [sp,-88]
; stack adjust: fc + disp - loc 23
sep #$20
lda.b tcc__r0
sta -88 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #109,tcc__r0
lda.w #109
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffa9
; st1 tcc__r0, [sp,-87]
; stack adjust: fc + disp - loc 24
sep #$20
lda.b tcc__r0
sta -87 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #110,tcc__r0
lda.w #110
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffaa
; st1 tcc__r0, [sp,-86]
; stack adjust: fc + disp - loc 25
sep #$20
lda.b tcc__r0
sta -86 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #111,tcc__r0
lda.w #111
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffab
; st1 tcc__r0, [sp,-85]
; stack adjust: fc + disp - loc 26
sep #$20
lda.b tcc__r0
sta -85 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #112,tcc__r0
lda.w #112
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffac
; st1 tcc__r0, [sp,-84]
; stack adjust: fc + disp - loc 27
sep #$20
lda.b tcc__r0
sta -84 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #113,tcc__r0
lda.w #113
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffad
; st1 tcc__r0, [sp,-83]
; stack adjust: fc + disp - loc 28
sep #$20
lda.b tcc__r0
sta -83 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #114,tcc__r0
lda.w #114
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffae
; st1 tcc__r0, [sp,-82]
; stack adjust: fc + disp - loc 29
sep #$20
lda.b tcc__r0
sta -82 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #115,tcc__r0
lda.w #115
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffaf
; st1 tcc__r0, [sp,-81]
; stack adjust: fc + disp - loc 30
sep #$20
lda.b tcc__r0
sta -81 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #116,tcc__r0
lda.w #116
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb0
; st1 tcc__r0, [sp,-80]
; stack adjust: fc + disp - loc 31
sep #$20
lda.b tcc__r0
sta -80 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #117,tcc__r0
lda.w #117
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb1
; st1 tcc__r0, [sp,-79]
; stack adjust: fc + disp - loc 32
sep #$20
lda.b tcc__r0
sta -79 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #118,tcc__r0
lda.w #118
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb2
; st1 tcc__r0, [sp,-78]
; stack adjust: fc + disp - loc 33
sep #$20
lda.b tcc__r0
sta -78 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #119,tcc__r0
lda.w #119
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb3
; st1 tcc__r0, [sp,-77]
; stack adjust: fc + disp - loc 34
sep #$20
lda.b tcc__r0
sta -77 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #120,tcc__r0
lda.w #120
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb4
; st1 tcc__r0, [sp,-76]
; stack adjust: fc + disp - loc 35
sep #$20
lda.b tcc__r0
sta -76 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #121,tcc__r0
lda.w #121
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb5
; st1 tcc__r0, [sp,-75]
; stack adjust: fc + disp - loc 36
sep #$20
lda.b tcc__r0
sta -75 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #122,tcc__r0
lda.w #122
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb6
; st1 tcc__r0, [sp,-74]
; stack adjust: fc + disp - loc 37
sep #$20
lda.b tcc__r0
sta -74 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffffb7
; st1 tcc__r0, [sp,-73]
; stack adjust: fc + disp - loc 38
sep #$20
lda.b tcc__r0
sta -73 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #48,tcc__r0
lda.w #48
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff6e
; st1 tcc__r0, [sp,-146]
; stack adjust: fc + disp - loc 2
sep #$20
lda.b tcc__r0
sta -146 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #49,tcc__r0
lda.w #49
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff6f
; st1 tcc__r0, [sp,-145]
; stack adjust: fc + disp - loc 3
sep #$20
lda.b tcc__r0
sta -145 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #50,tcc__r0
lda.w #50
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff70
; st1 tcc__r0, [sp,-144]
; stack adjust: fc + disp - loc 4
sep #$20
lda.b tcc__r0
sta -144 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #51,tcc__r0
lda.w #51
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff71
; st1 tcc__r0, [sp,-143]
; stack adjust: fc + disp - loc 5
sep #$20
lda.b tcc__r0
sta -143 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #52,tcc__r0
lda.w #52
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff72
; st1 tcc__r0, [sp,-142]
; stack adjust: fc + disp - loc 6
sep #$20
lda.b tcc__r0
sta -142 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #53,tcc__r0
lda.w #53
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff73
; st1 tcc__r0, [sp,-141]
; stack adjust: fc + disp - loc 7
sep #$20
lda.b tcc__r0
sta -141 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #54,tcc__r0
lda.w #54
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff74
; st1 tcc__r0, [sp,-140]
; stack adjust: fc + disp - loc 8
sep #$20
lda.b tcc__r0
sta -140 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #55,tcc__r0
lda.w #55
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff75
; st1 tcc__r0, [sp,-139]
; stack adjust: fc + disp - loc 9
sep #$20
lda.b tcc__r0
sta -139 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #56,tcc__r0
lda.w #56
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff76
; st1 tcc__r0, [sp,-138]
; stack adjust: fc + disp - loc 10
sep #$20
lda.b tcc__r0
sta -138 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #57,tcc__r0
lda.w #57
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff77
; st1 tcc__r0, [sp,-137]
; stack adjust: fc + disp - loc 11
sep #$20
lda.b tcc__r0
sta -137 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #65,tcc__r0
lda.w #65
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff78
; st1 tcc__r0, [sp,-136]
; stack adjust: fc + disp - loc 12
sep #$20
lda.b tcc__r0
sta -136 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #66,tcc__r0
lda.w #66
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff79
; st1 tcc__r0, [sp,-135]
; stack adjust: fc + disp - loc 13
sep #$20
lda.b tcc__r0
sta -135 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #67,tcc__r0
lda.w #67
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff7a
; st1 tcc__r0, [sp,-134]
; stack adjust: fc + disp - loc 14
sep #$20
lda.b tcc__r0
sta -134 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #68,tcc__r0
lda.w #68
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff7b
; st1 tcc__r0, [sp,-133]
; stack adjust: fc + disp - loc 15
sep #$20
lda.b tcc__r0
sta -133 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #69,tcc__r0
lda.w #69
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff7c
; st1 tcc__r0, [sp,-132]
; stack adjust: fc + disp - loc 16
sep #$20
lda.b tcc__r0
sta -132 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #70,tcc__r0
lda.w #70
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff7d
; st1 tcc__r0, [sp,-131]
; stack adjust: fc + disp - loc 17
sep #$20
lda.b tcc__r0
sta -131 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #71,tcc__r0
lda.w #71
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff7e
; st1 tcc__r0, [sp,-130]
; stack adjust: fc + disp - loc 18
sep #$20
lda.b tcc__r0
sta -130 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #72,tcc__r0
lda.w #72
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff7f
; st1 tcc__r0, [sp,-129]
; stack adjust: fc + disp - loc 19
sep #$20
lda.b tcc__r0
sta -129 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #73,tcc__r0
lda.w #73
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff80
; st1 tcc__r0, [sp,-128]
; stack adjust: fc + disp - loc 20
sep #$20
lda.b tcc__r0
sta -128 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #74,tcc__r0
lda.w #74
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff81
; st1 tcc__r0, [sp,-127]
; stack adjust: fc + disp - loc 21
sep #$20
lda.b tcc__r0
sta -127 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #75,tcc__r0
lda.w #75
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff82
; st1 tcc__r0, [sp,-126]
; stack adjust: fc + disp - loc 22
sep #$20
lda.b tcc__r0
sta -126 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #76,tcc__r0
lda.w #76
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff83
; st1 tcc__r0, [sp,-125]
; stack adjust: fc + disp - loc 23
sep #$20
lda.b tcc__r0
sta -125 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #77,tcc__r0
lda.w #77
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff84
; st1 tcc__r0, [sp,-124]
; stack adjust: fc + disp - loc 24
sep #$20
lda.b tcc__r0
sta -124 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #78,tcc__r0
lda.w #78
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff85
; st1 tcc__r0, [sp,-123]
; stack adjust: fc + disp - loc 25
sep #$20
lda.b tcc__r0
sta -123 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #79,tcc__r0
lda.w #79
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff86
; st1 tcc__r0, [sp,-122]
; stack adjust: fc + disp - loc 26
sep #$20
lda.b tcc__r0
sta -122 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #80,tcc__r0
lda.w #80
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff87
; st1 tcc__r0, [sp,-121]
; stack adjust: fc + disp - loc 27
sep #$20
lda.b tcc__r0
sta -121 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #81,tcc__r0
lda.w #81
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff88
; st1 tcc__r0, [sp,-120]
; stack adjust: fc + disp - loc 28
sep #$20
lda.b tcc__r0
sta -120 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #82,tcc__r0
lda.w #82
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff89
; st1 tcc__r0, [sp,-119]
; stack adjust: fc + disp - loc 29
sep #$20
lda.b tcc__r0
sta -119 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #83,tcc__r0
lda.w #83
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff8a
; st1 tcc__r0, [sp,-118]
; stack adjust: fc + disp - loc 30
sep #$20
lda.b tcc__r0
sta -118 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #84,tcc__r0
lda.w #84
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff8b
; st1 tcc__r0, [sp,-117]
; stack adjust: fc + disp - loc 31
sep #$20
lda.b tcc__r0
sta -117 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #85,tcc__r0
lda.w #85
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff8c
; st1 tcc__r0, [sp,-116]
; stack adjust: fc + disp - loc 32
sep #$20
lda.b tcc__r0
sta -116 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #86,tcc__r0
lda.w #86
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff8d
; st1 tcc__r0, [sp,-115]
; stack adjust: fc + disp - loc 33
sep #$20
lda.b tcc__r0
sta -115 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #87,tcc__r0
lda.w #87
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff8e
; st1 tcc__r0, [sp,-114]
; stack adjust: fc + disp - loc 34
sep #$20
lda.b tcc__r0
sta -114 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #88,tcc__r0
lda.w #88
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff8f
; st1 tcc__r0, [sp,-113]
; stack adjust: fc + disp - loc 35
sep #$20
lda.b tcc__r0
sta -113 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #89,tcc__r0
lda.w #89
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff90
; st1 tcc__r0, [sp,-112]
; stack adjust: fc + disp - loc 36
sep #$20
lda.b tcc__r0
sta -112 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #90,tcc__r0
lda.w #90
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff91
; st1 tcc__r0, [sp,-111]
; stack adjust: fc + disp - loc 37
sep #$20
lda.b tcc__r0
sta -111 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x1 fc 0xffffff92
; st1 tcc__r0, [sp,-110]
; stack adjust: fc + disp - loc 38
sep #$20
lda.b tcc__r0
sta -110 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 171
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x4)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #64
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 102849 ind 102849
; gsym_addr t 0 a 102890 ind 102890
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 102982 ind 102982
; cmp op 0x95 inv 1 v 243 r 102982
; cmp ne
bne +
; gsym_addr t 0 a 103075 ind 103075
brl __local_101
+
; gtst finished; t 102982
; gjmp_addr 0 at 103155
jmp.w __local_102
; gsym_addr t 103197 a 0 ind 103197
__local_101:
; gsym_addr t 102982 a 103233 ind 103233
; load 0
; type 36 reg 0x10f2 extra 0x0
; ld37 #(sp) + -109,tcc__r0 (fr 0x10f2 ft 0x24 fc 0xffffff93)
stz.b tcc__r0h
tsa
clc
adc #(-109 + __tccs_number_locals + 1)
sta.b tcc__r0
; gjmp_addr 0 at 103452
jmp.w __local_103
; gsym_addr t 103494 a 0 ind 103494
__local_102:
; gsym_addr t 103197 a 103530 ind 103530
; load 0
; type 36 reg 0x10f2 extra 0x0
; ld37 #(sp) + -146,tcc__r0 (fr 0x10f2 ft 0x24 fc 0xffffff6e)
stz.b tcc__r0h
tsa
clc
adc #(-146 + __tccs_number_locals + 1)
sta.b tcc__r0
__local_103:
; gsym_addr t 103494 a 103749 ind 103749
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffb8
; st4 tcc__r0, [sp,-72]
; stack adjust: fc + disp - loc 78
lda.b tcc__r0
sta -72 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta -70 + __tccs_number_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 171
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #16
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 104306 ind 104306
; gsym_addr t 0 a 104347 ind 104347
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 104439 ind 104439
; cmp op 0x95 inv 1 v 243 r 104439
; cmp ne
bne +
; gsym_addr t 0 a 104532 ind 104532
brl __local_104
+
; gtst finished; t 104439
; load 0
; type 0 reg 0x1f2 extra 0x490c3e
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 171
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #65534
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x15
; st2 tcc__r0, [sp,21]
; stack adjust: fc + disp - loc 171
lda.b tcc__r0
sta 21 + __tccs_number_locals + 1,s
__local_104:
; gsym_addr t 104439 a 105076 ind 105076
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 165
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc.w #2
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 105397 ind 105397
; gsym_addr t 0 a 105438 ind 105438
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 105530 ind 105530
; cmp op 0x95 inv 0 v 243 r 105530
; cmp ne
beq +
; gsym_addr t 0 a 105623 ind 105623
brl __local_105
+
; gtst finished; t 105530
; load 0
; type 0 reg 0x1f2 extra 0x495340
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 165
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #36
ldx #1
lda.b tcc__r0
sec
sbc.w #36
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 0 t 105530 v 5 r 105997 ind 105997
; gsym_addr t 105530 a 106043 ind 106043
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 105530 v 243 r 106140 ind 106140
; cmp op 0x95 inv 0 v 243 r 106140
; cmp ne
beq +
__local_105:
; gsym_addr t 105530 a 106238 ind 106238
brl __local_106
+
; gtst finished; t 106140
; gtst inv 1 t 0 v 244 r 106323 ind 106323
; VT_jmp r 106323 t 0 ji 0 inv 1 vtop->c.i 106140
; gjmp_addr 0 at 106416
jmp.w __local_107
; gsym_addr t 106458 a 0 ind 106458
__local_106:
; gsym_addr t 106140 a 106494 ind 106494
; gtst finished; t 106458
; load 0
; type 4 reg 0xf0 extra 0x0
; ld4 #0,tcc__r0
lda.w #0
sta.b tcc__r0
lda.w #0
sta.b tcc__r0h
; gjmp_addr 0 at 106662
jmp.w __local_108
; gsym_addr t 106704 a 0 ind 106704
__local_107:
; gsym_addr t 106458 a 106740 ind 106740
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 171
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x1)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #1
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 107090 ind 107090
; gsym_addr t 0 a 107131 ind 107131
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 107223 ind 107223
; cmp op 0x95 inv 1 v 243 r 107223
; cmp ne
bne +
; gsym_addr t 0 a 107316 ind 107316
brl __local_109
+
; gtst finished; t 107223
; gjmp_addr 0 at 107396
jmp.w __local_110
; gsym_addr t 107438 a 0 ind 107438
__local_109:
; gsym_addr t 107223 a 107474 ind 107474
; load 0
; type 0 reg 0xf0 extra 0x490c3e
; ld2 #32,tcc__r0
lda.w #32
sta.b tcc__r0
; gjmp_addr 0 at 107599
jmp.w __local_111
; gsym_addr t 107641 a 0 ind 107641
__local_110:
; gsym_addr t 107438 a 107677 ind 107677
; load 0
; type 0 reg 0xf0 extra 0x490c3e
; ld2 #48,tcc__r0
lda.w #48
sta.b tcc__r0
__local_111:
; gsym_addr t 107641 a 107802 ind 107802
; store r 0x0 fr 0x11f2 ft 0x1 fc 0xffffffff
; st1 tcc__r0, [sp,-1]
; stack adjust: fc + disp - loc 149
sep #$20
lda.b tcc__r0
sta -1 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x11f2 ft 0x1 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 148
sep #$20
lda.b tcc__r0
sta -2 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 171
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #2
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 108573 ind 108573
; gsym_addr t 0 a 108614 ind 108614
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 108706 ind 108706
; cmp op 0x95 inv 1 v 243 r 108706
; cmp ne
bne +
; gsym_addr t 0 a 108799 ind 108799
brl __local_112
+
; gtst finished; t 108706
; load 0
; type 12 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 161
lda 11 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x745ae0a0
; ld2 [sp,13],tcc__r1
; stack adjust: fc + disp - loc 163
lda 13 + __tccs_number_locals + 1,s
sta.b tcc__r1
; load 2
; type 12 reg 0xf0 extra 0x0
; ld2 #0,tcc__r2
lda.w #0
sta.b tcc__r2
; load 3
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r3
lda.w #0
sta.b tcc__r3
; gen_opi len 2 op 0x9e
; cmpcd tcc__r1, tcc__r3
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r3
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 109486 ind 109486
; gsym_addr t 0 a 109527 ind 109527
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 109619 ind 109619
; cmp op 0x95 inv 1 v 243 r 109619
; cmp ne
bne +
; gsym_addr t 0 a 109712 ind 109712
brl __local_113
+
; gtst finished; t 109619
; cmpll high order word equal?
tya
bne __local_114
; gen_opi len 2 op 0x92
; ucmpcd tcc__r0, tcc__r2
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r2
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 109619 v 5 r 109966 ind 109966
; gsym_addr t 109619 a 110012 ind 110012
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 109619 v 243 r 110109 ind 110109
; cmp op 0x95 inv 1 v 243 r 110109
; cmp ne
bne +
__local_113:
; gsym_addr t 109619 a 110207 ind 110207
brl __local_115
+
; gtst finished; t 110109
__local_114:
; gsym_addr t 109823 a 110292 ind 110292
; gtst inv 1 t 0 v 245 r 110333 ind 110333
; VT_jmp r 110333 t 0 ji 1 inv 1 vtop->c.i 110109
; gsym_addr t 0 a 110426 ind 110426
; gtst finished; t 110109
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #45,tcc__r0
lda.w #45
sta.b tcc__r0
; store r 0x0 fr 0x11f2 ft 0x1 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 148
sep #$20
lda.b tcc__r0
sta -2 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 12 reg 0xf0 extra 0x20
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffff68
; st4 tcc__r0, [sp,-152]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -152 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta -150 + __tccs_number_locals + 1,s
; saveregging
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffff64
; st4 tcc__r1, [sp,-156]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -156 + __tccs_number_locals + 1,s
lda.b tcc__r1h
sta -154 + __tccs_number_locals + 1,s
; load 2
; type 12 reg 0x1f2 extra 0x20
; ld2 [sp,11],tcc__r2
; stack adjust: fc + disp - loc 169
lda 11 + __tccs_number_locals + 1,s
sta.b tcc__r2
; load 0
; type 0 reg 0x1f2 extra 0xfbad8001
; ld2 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 171
lda 13 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0xc
; ld2 [sp,-152],tcc__r1
; stack adjust: fc + disp - loc 6
lda -152 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0xc5
; sbc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x0 c -152 r type 0x0)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
; load 2
; type 0 reg 0x1f2 extra 0x20
; ld2 [sp,-156],tcc__r2
; stack adjust: fc + disp - loc 2
lda -156 + __tccs_number_locals + 1,s
sta.b tcc__r2
; gen_opi len 2 op 0xc6
; sbc tcc__r0 (0x0), tcc__r2 (0x2) (fr type 0x0 c -156 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r2
sbc.b tcc__r0
sta.b tcc__r2
; store r 0x1 fr 0x1f2 ft 0xc fc 0xb
; st2 tcc__r1, [sp,11]
; stack adjust: fc + disp - loc 169
lda.b tcc__r1
sta 11 + __tccs_number_locals + 1,s
; store r 0x2 fr 0x1f2 ft 0x0 fc 0xd
; st2 tcc__r2, [sp,13]
; stack adjust: fc + disp - loc 171
lda.b tcc__r2
sta 13 + __tccs_number_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 175
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0xd
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 175
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
; gjmp_addr 0 at 113108
jmp.w __local_116
; gsym_addr t 113150 a 0 ind 113150
__local_115:
; gsym_addr t 110109 a 113186 ind 113186
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 179
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #4
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 113536 ind 113536
; gsym_addr t 0 a 113577 ind 113577
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 113669 ind 113669
; cmp op 0x95 inv 1 v 243 r 113669
; cmp ne
bne +
; gsym_addr t 0 a 113762 ind 113762
brl __local_117
+
; gtst finished; t 113669
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #43,tcc__r0
lda.w #43
sta.b tcc__r0
; store r 0x0 fr 0x11f2 ft 0x1 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 156
sep #$20
lda.b tcc__r0
sta -2 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 175
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0xfffffffe
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 175
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
; gjmp_addr 0 at 114643
jmp.w __local_118
; gsym_addr t 114685 a 0 ind 114685
__local_117:
; gsym_addr t 113669 a 114721 ind 114721
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 179
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #8
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 115071 ind 115071
; gsym_addr t 0 a 115112 ind 115112
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 115204 ind 115204
; cmp op 0x95 inv 1 v 243 r 115204
; cmp ne
bne +
; gsym_addr t 0 a 115297 ind 115297
brl __local_119
+
; gtst finished; t 115204
; load 0
; type 1 reg 0xf0 extra 0x0
; ld1 #32,tcc__r0
lda.w #32
sta.b tcc__r0
; store r 0x0 fr 0x11f2 ft 0x1 fc 0xfffffffe
; st1 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 156
sep #$20
lda.b tcc__r0
sta -2 + __tccs_number_locals + 1,s
rep #$20
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 175
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0xfffffffe
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 175
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
__local_119:
; gsym_addr t 115204 a 116178 ind 116178
__local_118:
; gsym_addr t 114685 a 116219 ind 116219
__local_116:
; gsym_addr t 113150 a 116260 ind 116260
__local_112:
; gsym_addr t 108706 a 116301 ind 116301
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 179
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #32
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 116652 ind 116652
; gsym_addr t 0 a 116693 ind 116693
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 116785 ind 116785
; cmp op 0x95 inv 1 v 243 r 116785
; cmp ne
bne +
; gsym_addr t 0 a 116878 ind 116878
brl __local_120
+
; gtst finished; t 116785
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 173
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #16
ldx #1
lda.b tcc__r0
sec
sbc #16
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 117217 ind 117217
; gsym_addr t 0 a 117258 ind 117258
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 117350 ind 117350
; cmp op 0x95 inv 1 v 243 r 117350
; cmp ne
bne +
; gsym_addr t 0 a 117443 ind 117443
brl __local_121
+
; gtst finished; t 117350
; load 0
; type 0 reg 0x1f2 extra 0x490c3e
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 175
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 175
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
; gjmp_addr 0 at 117968
jmp.w __local_122
; gsym_addr t 118010 a 0 ind 118010
__local_121:
; gsym_addr t 117350 a 118046 ind 118046
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 173
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #8
ldx #1
lda.b tcc__r0
sec
sbc #8
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 118344 ind 118344
; gsym_addr t 0 a 118385 ind 118385
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 118477 ind 118477
; cmp op 0x95 inv 1 v 243 r 118477
; cmp ne
bne +
; gsym_addr t 0 a 118570 ind 118570
brl __local_123
+
; gtst finished; t 118477
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 175
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0xfffffff8
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 175
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
__local_123:
; gsym_addr t 118477 a 119200 ind 119200
__local_122:
; gsym_addr t 118010 a 119241 ind 119241
__local_120:
; gsym_addr t 116785 a 119282 ind 119282
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffff6c
; st2 tcc__r0, [sp,-148]
; stack adjust: fc + disp - loc 10
lda.b tcc__r0
sta -148 + __tccs_number_locals + 1,s
; load 0
; type 12 reg 0x1f2 extra 0x94
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 169
lda 11 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,13],tcc__r1
; stack adjust: fc + disp - loc 171
lda 13 + __tccs_number_locals + 1,s
sta.b tcc__r1
; load 2
; type 12 reg 0xf0 extra 0x94
; ld2 #0,tcc__r2
lda.w #0
sta.b tcc__r2
; load 3
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r3
lda.w #0
sta.b tcc__r3
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, tcc__r3
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 120128 ind 120128
; gsym_addr t 0 a 120169 ind 120169
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 120261 ind 120261
; cmp op 0x95 inv 1 v 243 r 120261
; cmp ne
bne +
; gsym_addr t 0 a 120354 ind 120354
brl __local_124
+
; gtst finished; t 120261
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, tcc__r2
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 120261 v 5 r 120556 ind 120556
; gsym_addr t 120261 a 120602 ind 120602
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 120261 v 243 r 120699 ind 120699
; cmp op 0x95 inv 1 v 243 r 120699
; cmp ne
bne +
__local_124:
; gsym_addr t 120261 a 120797 ind 120797
brl __local_125
+
; gtst finished; t 120699
; gsym_addr t 0 a 120882 ind 120882
; gtst inv 1 t 0 v 245 r 120918 ind 120918
; VT_jmp r 120918 t 0 ji 1 inv 1 vtop->c.i 120699
; gsym_addr t 0 a 121011 ind 121011
; gtst finished; t 120699
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-148],tcc__r0
; stack adjust: fc + disp - loc 10
lda -148 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0xa4a930
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -148 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffff6c
; st2 tcc__r0, [sp,-148]
; stack adjust: fc + disp - loc 10
lda.b tcc__r0
sta -148 + __tccs_number_locals + 1,s
; load 0
; type 36 reg 0xf2 extra 0x0
; ld66 #(sp) + -68,tcc__r0 (fr 0xf2 ft 0x24 fc 0xffffffbc)
stz.b tcc__r0h
tsa
clc
adc #(-68 + __tccs_number_locals + 1)
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x24 c -68 r type 0x6)
; length xxy 66 vtop->type 0x24
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #48,tcc__r1
lda.w #48
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xffffffbc
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; gjmp_addr 0 at 122172
jmp.w __local_126
; gsym_addr t 122214 a 0 ind 122214
__local_125:
; gsym_addr t 120699 a 122250 ind 122250
__local_129:
; load 0
; type 12 reg 0x1f2 extra 0x95
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 169
lda 11 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,13],tcc__r1
; stack adjust: fc + disp - loc 171
lda 13 + __tccs_number_locals + 1,s
sta.b tcc__r1
; load 2
; type 12 reg 0xf0 extra 0x95
; ld2 #0,tcc__r2
lda.w #0
sta.b tcc__r2
; load 3
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r3
lda.w #0
sta.b tcc__r3
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, tcc__r3
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r3
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 122863 ind 122863
; gsym_addr t 0 a 122904 ind 122904
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 122996 ind 122996
; cmp op 0x95 inv 0 v 243 r 122996
; cmp ne
beq +
; gsym_addr t 0 a 123089 ind 123089
brl __local_127
+
; gtst finished; t 122996
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, tcc__r2
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r2
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 123291 ind 123291
; gsym_addr t 0 a 123332 ind 123332
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 123424 ind 123424
; cmp op 0x95 inv 1 v 243 r 123424
; cmp ne
bne +
; gsym_addr t 0 a 123517 ind 123517
brl __local_128
+
; gtst finished; t 123424
__local_127:
; gsym_addr t 122996 a 123597 ind 123597
; gtst inv 1 t 0 v 245 r 123638 ind 123638
; VT_jmp r 123638 t 0 ji 1 inv 1 vtop->c.i 123424
; gsym_addr t 0 a 123731 ind 123731
; gtst finished; t 123424
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-148],tcc__r0
; stack adjust: fc + disp - loc 10
lda -148 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0xa4a930
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -148 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffff6c
; st2 tcc__r0, [sp,-148]
; stack adjust: fc + disp - loc 10
lda.b tcc__r0
sta -148 + __tccs_number_locals + 1,s
; load 0
; type 36 reg 0xf2 extra 0x0
; ld66 #(sp) + -68,tcc__r0 (fr 0xf2 ft 0x24 fc 0xffffffbc)
stz.b tcc__r0h
tsa
clc
adc #(-68 + __tccs_number_locals + 1)
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x24 c -68 r type 0x6)
; length xxy 66 vtop->type 0x24
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffff60
; st4 tcc__r0, [sp,-160]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -160 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta -158 + __tccs_number_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 179
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; ldpush before load type 0x1c reg 0x0
; ldpush4 (type 0x1c reg 0x0) tcc__r0
pei (tcc__r1)
pei (tcc__r0)
; ldpush before load type 0x1c reg 0x1f2
; load 0
; type 28 reg 0x1f2 extra 0xffffffff
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 179
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,13],tcc__r1
; stack adjust: fc + disp - loc 181
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r1
; ldpush4 (type 0x1c reg 0x0) tcc__r0
pei (tcc__r1)
pei (tcc__r0)
; call r 0x2f0
jsr.l tcc__umoddi3
; add sp, #8
tsa
clc
adc #8
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffff5e
; st2 tcc__r0, [sp,-162]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -162 + __tccs_number_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0xffffff5e
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 179
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; ldpush before load type 0x1c reg 0x0
; ldpush4 (type 0x1c reg 0x0) tcc__r0
pei (tcc__r1)
pei (tcc__r0)
; ldpush before load type 0x1c reg 0x1f2
; load 0
; type 28 reg 0x1f2 extra 0xffffffff
; ld2 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 179
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,13],tcc__r1
; stack adjust: fc + disp - loc 181
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r1
; ldpush4 (type 0x1c reg 0x0) tcc__r0
pei (tcc__r1)
pei (tcc__r0)
; call r 0x2f0
jsr.l tcc__udivdi3
; add sp, #8
tsa
clc
adc #8
tas
; store r 0x0 fr 0x1f2 ft 0xc fc 0xb
; st2 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 175
lda.b tcc__r0
sta 11 + __tccs_number_locals + 1,s
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xd
; st2 tcc__r1, [sp,13]
; stack adjust: fc + disp - loc 177
lda.b tcc__r1
sta 13 + __tccs_number_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-72],tcc__r0
; stack adjust: fc + disp - loc 92
lda -72 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda -70 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x1f2 extra 0xffffff6c
; ld2 [sp,-162],tcc__r1
; stack adjust: fc + disp - loc 2
lda -162 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c -72 r type 0x1)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; load 0
; type 4 reg 0x1f2 extra 0x745ae490
; ld4 [sp,-160],tcc__r0
; stack adjust: fc + disp - loc 4
lda -160 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda -158 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; store r 0x1 fr 0x100 ft 0x1 fc 0xffffff60
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; gjmp_addr 122291 at 127968
jmp.w __local_129
; gsym_addr t 128015 a 122291 ind 128015
__local_128:
; gsym_addr t 123424 a 128056 ind 128056
; gsym_addr t 0 a 122291 ind 128097
__local_126:
; gsym_addr t 122214 a 128133 ind 128133
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-148],tcc__r0
; stack adjust: fc + disp - loc 16
lda -148 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,19],tcc__r1
; stack adjust: fc + disp - loc 183
lda 19 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 128620 ind 128620
; gsym_addr t 0 a 128661 ind 128661
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 128753 ind 128753
; cmp op 0x95 inv 1 v 243 r 128753
; cmp ne
bne +
; gsym_addr t 0 a 128846 ind 128846
brl __local_130
+
; gtst finished; t 128753
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-148],tcc__r0
; stack adjust: fc + disp - loc 16
lda -148 + __tccs_number_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x13
; st2 tcc__r0, [sp,19]
; stack adjust: fc + disp - loc 183
lda.b tcc__r0
sta 19 + __tccs_number_locals + 1,s
__local_130:
; gsym_addr t 128753 a 129222 ind 129222
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 181
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,19],tcc__r1
; stack adjust: fc + disp - loc 183
lda 19 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 181
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 185
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #17
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 130174 ind 130174
; gsym_addr t 0 a 130215 ind 130215
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 130307 ind 130307
; cmp op 0x95 inv 1 v 243 r 130307
; cmp ne
bne +
; gsym_addr t 0 a 130400 ind 130400
brl __local_131
+
; gtst finished; t 130307
; gtst inv 1 t 0 v 244 r 130480 ind 130480
; VT_jmp r 130480 t 0 ji 0 inv 1 vtop->c.i 130307
; gjmp_addr 0 at 130573
jmp.w __local_132
; gsym_addr t 130615 a 0 ind 130615
__local_131:
; gsym_addr t 130307 a 130651 ind 130651
; gtst finished; t 130615
__local_135:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 181
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 181
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
; gen_opi len 2 op 0x9f
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 131402 ind 131402
; gsym_addr t 0 a 131443 ind 131443
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 131535 ind 131535
; cmp op 0x95 inv 1 v 243 r 131535
; cmp ne
bne +
; gsym_addr t 0 a 131628 ind 131628
brl __local_133
+
; gtst finished; t 131535
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 132128 ind 132128
; gsym_addr t 0 a 132169 ind 132169
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 132261 ind 132261
; cmp op 0x95 inv 1 v 243 r 132261
; cmp ne
bne +
; gsym_addr t 0 a 132354 ind 132354
brl __local_134
+
; gtst finished; t 132261
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #32,tcc__r1
lda.w #32
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_134:
; gsym_addr t 132261 a 132820 ind 132820
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
; gjmp_addr 130718 at 133381
jmp.w __local_135
; gsym_addr t 133428 a 130718 ind 133428
__local_133:
; gsym_addr t 131535 a 133469 ind 133469
; gsym_addr t 0 a 130718 ind 133510
__local_132:
; gsym_addr t 130615 a 133546 ind 133546
; gtst inv 1 t 0 v 242 r 133587 ind 133587
; load 0
; type 1 reg 0x11f2 extra 0x0
; ld1 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 162
lda.w #0
sep #$20
lda -2 + __tccs_number_locals + 1,s
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r0
; gsym_addr t 0 a 133833 ind 133833
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 133925 ind 133925
; cmp op 0x95 inv 1 v 243 r 133925
; cmp ne
bne +
; gsym_addr t 0 a 134018 ind 134018
brl __local_136
+
; gtst finished; t 133925
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 134518 ind 134518
; gsym_addr t 0 a 134559 ind 134559
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 134651 ind 134651
; cmp op 0x95 inv 1 v 243 r 134651
; cmp ne
bne +
; gsym_addr t 0 a 134744 ind 134744
brl __local_137
+
; gtst finished; t 134651
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x11f2 extra 0x0
; ld1 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc 162
lda.w #0
sep #$20
lda -2 + __tccs_number_locals + 1,s
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_137:
; gsym_addr t 134651 a 135334 ind 135334
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
__local_136:
; gsym_addr t 133925 a 135895 ind 135895
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 185
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #32
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 136246 ind 136246
; gsym_addr t 0 a 136287 ind 136287
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 136379 ind 136379
; cmp op 0x95 inv 1 v 243 r 136379
; cmp ne
bne +
; gsym_addr t 0 a 136472 ind 136472
brl __local_138
+
; gtst finished; t 136379
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 179
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #8
ldx #1
lda.b tcc__r0
sec
sbc #8
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 136809 ind 136809
; gsym_addr t 0 a 136850 ind 136850
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 136942 ind 136942
; cmp op 0x95 inv 1 v 243 r 136942
; cmp ne
bne +
; gsym_addr t 0 a 137035 ind 137035
brl __local_139
+
; gtst finished; t 136942
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 137535 ind 137535
; gsym_addr t 0 a 137576 ind 137576
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 137668 ind 137668
; cmp op 0x95 inv 1 v 243 r 137668
; cmp ne
bne +
; gsym_addr t 0 a 137761 ind 137761
brl __local_140
+
; gtst finished; t 137668
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #48,tcc__r1
lda.w #48
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_140:
; gsym_addr t 137668 a 138227 ind 138227
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
; gjmp_addr 0 at 138788
jmp.w __local_141
; gsym_addr t 138830 a 0 ind 138830
__local_139:
; gsym_addr t 136942 a 138866 ind 138866
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,15],tcc__r0
; stack adjust: fc + disp - loc 179
lda 15 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #16
ldx #1
lda.b tcc__r0
sec
sbc #16
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 139166 ind 139166
; gsym_addr t 0 a 139207 ind 139207
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 139299 ind 139299
; cmp op 0x95 inv 1 v 243 r 139299
; cmp ne
bne +
; gsym_addr t 0 a 139392 ind 139392
brl __local_142
+
; gtst finished; t 139299
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 139892 ind 139892
; gsym_addr t 0 a 139933 ind 139933
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 140025 ind 140025
; cmp op 0x95 inv 1 v 243 r 140025
; cmp ne
bne +
; gsym_addr t 0 a 140118 ind 140118
brl __local_143
+
; gtst finished; t 140025
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #48,tcc__r1
lda.w #48
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_143:
; gsym_addr t 140025 a 140584 ind 140584
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 141565 ind 141565
; gsym_addr t 0 a 141606 ind 141606
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 141698 ind 141698
; cmp op 0x95 inv 1 v 243 r 141698
; cmp ne
bne +
; gsym_addr t 0 a 141791 ind 141791
brl __local_144
+
; gtst finished; t 141698
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-72],tcc__r1
; stack adjust: fc + disp - loc 92
lda -72 + __tccs_number_locals + 1,s
sta.b tcc__r1
lda -70 + __tccs_number_locals + 1,s
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c -72 r type 0x1)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #33
sta.b tcc__r1
; load 2
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r2
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r2
; store r 0x2 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r2, [tcc__r0,0]
sep #$20
lda.b tcc__r2
sta.b [tcc__r0]
rep #$20
__local_144:
; gsym_addr t 141698 a 142690 ind 142690
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
__local_142:
; gsym_addr t 139299 a 143251 ind 143251
__local_141:
; gsym_addr t 138830 a 143292 ind 143292
__local_138:
; gsym_addr t 136379 a 143333 ind 143333
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,21],tcc__r0
; stack adjust: fc + disp - loc 185
lda 21 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 21 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #16
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 143684 ind 143684
; gsym_addr t 0 a 143725 ind 143725
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 143817 ind 143817
; cmp op 0x95 inv 1 v 243 r 143817
; cmp ne
bne +
; gsym_addr t 0 a 143910 ind 143910
brl __local_145
+
; gtst finished; t 143817
; gtst inv 1 t 0 v 244 r 143990 ind 143990
; VT_jmp r 143990 t 0 ji 0 inv 1 vtop->c.i 143817
; gjmp_addr 0 at 144083
jmp.w __local_146
; gsym_addr t 144125 a 0 ind 144125
__local_145:
; gsym_addr t 143817 a 144161 ind 144161
; gtst finished; t 144125
__local_149:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 181
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 181
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
; gen_opi len 2 op 0x9f
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 144912 ind 144912
; gsym_addr t 0 a 144953 ind 144953
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 145045 ind 145045
; cmp op 0x95 inv 1 v 243 r 145045
; cmp ne
bne +
; gsym_addr t 0 a 145138 ind 145138
brl __local_147
+
; gtst finished; t 145045
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 145638 ind 145638
; gsym_addr t 0 a 145679 ind 145679
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 145771 ind 145771
; cmp op 0x95 inv 1 v 243 r 145771
; cmp ne
bne +
; gsym_addr t 0 a 145864 ind 145864
brl __local_148
+
; gtst finished; t 145771
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x11f2 extra 0x0
; ld1 [sp,-1],tcc__r1
; stack adjust: fc + disp - loc 163
lda.w #0
sep #$20
lda -1 + __tccs_number_locals + 1,s
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_148:
; gsym_addr t 145771 a 146454 ind 146454
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
; gjmp_addr 144228 at 147015
jmp.w __local_149
; gsym_addr t 147062 a 144228 ind 147062
__local_147:
; gsym_addr t 145045 a 147103 ind 147103
; gsym_addr t 0 a 144228 ind 147144
__local_146:
; gsym_addr t 144125 a 147180 ind 147180
__local_152:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,19],tcc__r0
; stack adjust: fc + disp - loc 183
lda 19 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 19 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x13
; st2 tcc__r0, [sp,19]
; stack adjust: fc + disp - loc 183
lda.b tcc__r0
sta 19 + __tccs_number_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x23f15
; ld2 [sp,-148],tcc__r0
; stack adjust: fc + disp - loc 16
lda -148 + __tccs_number_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 148061 ind 148061
; gsym_addr t 0 a 148102 ind 148102
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 148194 ind 148194
; cmp op 0x95 inv 1 v 243 r 148194
; cmp ne
bne +
; gsym_addr t 0 a 148287 ind 148287
brl __local_150
+
; gtst finished; t 148194
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 148787 ind 148787
; gsym_addr t 0 a 148828 ind 148828
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 148920 ind 148920
; cmp op 0x95 inv 1 v 243 r 148920
; cmp ne
bne +
; gsym_addr t 0 a 149013 ind 149013
brl __local_151
+
; gtst finished; t 148920
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #48,tcc__r1
lda.w #48
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_151:
; gsym_addr t 148920 a 149479 ind 149479
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
; gjmp_addr 147221 at 150040
jmp.w __local_152
; gsym_addr t 150087 a 147221 ind 150087
__local_150:
; gsym_addr t 148194 a 150128 ind 150128
; gsym_addr t 0 a 147221 ind 150169
__local_155:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-148],tcc__r0
; stack adjust: fc + disp - loc 16
lda -148 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -148 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffff6c
; st2 tcc__r0, [sp,-148]
; stack adjust: fc + disp - loc 16
lda.b tcc__r0
sta -148 + __tccs_number_locals + 1,s
; gen_opi len 2 op 0x9f
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 150903 ind 150903
; gsym_addr t 0 a 150944 ind 150944
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 151036 ind 151036
; cmp op 0x95 inv 1 v 243 r 151036
; cmp ne
bne +
; gsym_addr t 0 a 151129 ind 151129
brl __local_153
+
; gtst finished; t 151036
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 151629 ind 151629
; gsym_addr t 0 a 151670 ind 151670
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 151762 ind 151762
; cmp op 0x95 inv 1 v 243 r 151762
; cmp ne
bne +
; gsym_addr t 0 a 151855 ind 151855
brl __local_154
+
; gtst finished; t 151762
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 36 reg 0xf2 extra 0x0
; ld66 #(sp) + -68,tcc__r1 (fr 0xf2 ft 0x24 fc 0xffffffbc)
stz.b tcc__r1h
tsa
clc
adc #(-68 + __tccs_number_locals + 1)
sta.b tcc__r1
; load 2
; type 0 reg 0x1f2 extra 0x745adec0
; ld2 [sp,-148],tcc__r2
; stack adjust: fc + disp - loc 16
lda -148 + __tccs_number_locals + 1,s
sta.b tcc__r2
; gen_opi len 2 op +
; adc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x24 c -68 r type 0x1)
; length xxy 66 vtop->type 0x24
clc
lda.b tcc__r1
adc.b tcc__r2
sta.b tcc__r1
; load 2
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r2
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r2
; store r 0x2 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r2, [tcc__r0,0]
sep #$20
lda.b tcc__r2
sta.b [tcc__r0]
rep #$20
__local_154:
; gsym_addr t 151762 a 152887 ind 152887
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
; gjmp_addr 150205 at 153448
jmp.w __local_155
; gsym_addr t 153495 a 150205 ind 153495
__local_153:
; gsym_addr t 151036 a 153536 ind 153536
; gsym_addr t 0 a 150205 ind 153577
__local_158:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,17],tcc__r0
; stack adjust: fc + disp - loc 181
lda 17 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 17 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0x11
; st2 tcc__r0, [sp,17]
; stack adjust: fc + disp - loc 181
lda.b tcc__r0
sta 17 + __tccs_number_locals + 1,s
; gen_opi len 2 op 0x9f
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 154297 ind 154297
; gsym_addr t 0 a 154338 ind 154338
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 154430 ind 154430
; cmp op 0x95 inv 1 v 243 r 154430
; cmp ne
bne +
; gsym_addr t 0 a 154523 ind 154523
brl __local_156
+
; gtst finished; t 154430
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 171
lda 7 + __tccs_number_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 155023 ind 155023
; gsym_addr t 0 a 155064 ind 155064
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 155156 ind 155156
; cmp op 0x95 inv 1 v 243 r 155156
; cmp ne
bne +
; gsym_addr t 0 a 155249 ind 155249
brl __local_157
+
; gtst finished; t 155156
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #32,tcc__r1
lda.w #32
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0x3
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_157:
; gsym_addr t 155156 a 155715 ind 155715
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x3
; st4 tcc__r0, [sp,3]
; stack adjust: fc + disp - loc 167
lda.b tcc__r0
sta 3 + __tccs_number_locals + 1,s
lda.b tcc__r0h
sta 5 + __tccs_number_locals + 1,s
; gjmp_addr 153613 at 156276
jmp.w __local_158
; gsym_addr t 156323 a 153613 ind 156323
__local_156:
; gsym_addr t 154430 a 156364 ind 156364
; gsym_addr t 0 a 153613 ind 156405
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 167
lda 3 + __tccs_number_locals + 1,s
sta.b tcc__r0
lda 5 + __tccs_number_locals + 1,s
sta.b tcc__r0h
; gjmp_addr 106704 at 156635
jmp.w __local_159
; gsym_addr t 156682 a 106704 ind 156682
__local_108:
__local_159:
; gsym_addr t 156682 a 156723 ind 156723
; add sp, #__tccs_number_locals
.ifgr __tccs_number_locals 0
tsa
clc
adc #__tccs_number_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x11" SUPERFREE

vsnprintf:
; sub sp,#__vsnprintf_locals
.ifgr __vsnprintf_locals 0
tsa
sec
sbc #__vsnprintf_locals
tas
.endif
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 41
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 41
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 16 reg 0x1f2 extra 0x745ae1b0
; ld2 [sp,7],tcc__r1
; stack adjust: fc + disp - loc 45
lda 7 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffec
; st4 tcc__r0, [sp,-20]
; stack adjust: fc + disp - loc 18
lda.b tcc__r0
sta -20 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -18 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 41
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 3 r type 0x4)
; length xxy 4 vtop->type 0x4
dec.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x92
; ucmpcd tcc__r1, tcc__r0
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r0
tay
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 158838 ind 158838
; gsym_addr t 0 a 158879 ind 158879
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 158971 ind 158971
; cmp op 0x95 inv 1 v 243 r 158971
; cmp ne
bne +
; gsym_addr t 0 a 159064 ind 159064
brl __local_160
+
; gtst finished; t 158971
; load 0
; type 4 reg 0x10f0 extra 0x0
; ld4 #-1,tcc__r0
lda.w #65535
sta.b tcc__r0
lda.w #65535
sta.b tcc__r0h
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffec
; st4 tcc__r0, [sp,-20]
; stack adjust: fc + disp - loc 18
lda.b tcc__r0
sta -20 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -18 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-20],tcc__r0
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -18 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 41
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; gen_opi len 4 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c -20 r type 0x10)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -20 r type 0x10)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x10 fc 0x7
; st2 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 45
lda.b tcc__r0
sta 7 + __vsnprintf_locals + 1,s
__local_160:
; gsym_addr t 158971 a 160283 ind 160283
__local_163:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 160514 ind 160514
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 160706 ind 160706
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 160798 ind 160798
; cmp op 0x95 inv 1 v 243 r 160798
; cmp ne
bne +
; gsym_addr t 0 a 160891 ind 160891
brl __local_161
+
; gtst finished; t 160798
; gjmp_addr 0 at 160971
jmp.w __local_162
; gsym_addr t 161013 a 0 ind 161013
__local_166:
__local_211:
__local_229:
__local_233:
__local_240:
__local_244:
__local_264:
__local_276:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 47
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
; gjmp_addr 160324 at 161561
jmp.w __local_163
; gsym_addr t 161608 a 160324 ind 161608
__local_162:
; gsym_addr t 161013 a 161649 ind 161649
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #37
ldx #1
lda.b tcc__r1
sec
sbc #37
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 162143 ind 162143
; gsym_addr t 0 a 162184 ind 162184
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 162276 ind 162276
; cmp op 0x95 inv 1 v 243 r 162276
; cmp ne
bne +
; gsym_addr t 0 a 162369 ind 162369
brl __local_164
+
; gtst finished; t 162276
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 162871 ind 162871
; gsym_addr t 0 a 162912 ind 162912
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 163004 ind 163004
; cmp op 0x95 inv 1 v 243 r 163004
; cmp ne
bne +
; gsym_addr t 0 a 163097 ind 163097
brl __local_165
+
; gtst finished; t 163004
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r1
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; load 2
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r2
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r2
; store r 0x2 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r2, [tcc__r0,0]
sep #$20
lda.b tcc__r2
sta.b [tcc__r0]
rep #$20
__local_165:
; gsym_addr t 163004 a 163833 ind 163833
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 164405
jmp.w __local_166
; gsym_addr t 164447 a 0 ind 164447
__local_164:
; gsym_addr t 162276 a 164483 ind 164483
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
tccs_repeat:
; gsym_addr t 0 a 164752 ind 164752
__local_170:
__local_173:
__local_176:
__local_179:
__local_182:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 47
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gjmp_addr 0 at 165641
jmp.w __local_167
; gsym_addr t 165683 a 0 ind 165683
; gjmp_addr 0 at 165719
jmp.w __local_168
; gsym_addr t 165761 a 0 ind 165761
__local_167:
; gsym_addr t 165683 a 165797 ind 165797
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #45
ldx #1
lda.b tcc__r1
sec
sbc #45
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 165950 ind 165950
; gsym_addr t 0 a 165991 ind 165991
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 166083 ind 166083
; cmp op 0x95 inv 1 v 243 r 166083
; cmp ne
bne +
; gsym_addr t 0 a 166176 ind 166176
brl __local_169
+
; gtst finished; t 166083
__local_168:
; gsym_addr t 165761 a 166256 ind 166256
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #16
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
; gjmp_addr 164788 at 166756
jmp.w __local_170
; gsym_addr t 166803 a 164788 ind 166803
; gjmp_addr 0 at 166844
jmp.w __local_171
; gsym_addr t 166886 a 0 ind 166886
__local_169:
; gsym_addr t 166083 a 166922 ind 166922
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #43
ldx #1
lda.b tcc__r1
sec
sbc #43
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 167075 ind 167075
; gsym_addr t 0 a 167116 ind 167116
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 167208 ind 167208
; cmp op 0x95 inv 1 v 243 r 167208
; cmp ne
bne +
; gsym_addr t 0 a 167301 ind 167301
brl __local_172
+
; gtst finished; t 167208
__local_171:
; gsym_addr t 166886 a 167381 ind 167381
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
; gjmp_addr 164788 at 167880
jmp.w __local_173
; gsym_addr t 167927 a 164788 ind 167927
; gjmp_addr 0 at 167968
jmp.w __local_174
; gsym_addr t 168010 a 0 ind 168010
__local_172:
; gsym_addr t 167208 a 168046 ind 168046
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #32
ldx #1
lda.b tcc__r1
sec
sbc #32
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 168199 ind 168199
; gsym_addr t 0 a 168240 ind 168240
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 168332 ind 168332
; cmp op 0x95 inv 1 v 243 r 168332
; cmp ne
bne +
; gsym_addr t 0 a 168425 ind 168425
brl __local_175
+
; gtst finished; t 168332
__local_174:
; gsym_addr t 168010 a 168505 ind 168505
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #8
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
; gjmp_addr 164788 at 169004
jmp.w __local_176
; gsym_addr t 169051 a 164788 ind 169051
; gjmp_addr 0 at 169092
jmp.w __local_177
; gsym_addr t 169134 a 0 ind 169134
__local_175:
; gsym_addr t 168332 a 169170 ind 169170
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #35
ldx #1
lda.b tcc__r1
sec
sbc #35
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 169323 ind 169323
; gsym_addr t 0 a 169364 ind 169364
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 169456 ind 169456
; cmp op 0x95 inv 1 v 243 r 169456
; cmp ne
bne +
; gsym_addr t 0 a 169549 ind 169549
brl __local_178
+
; gtst finished; t 169456
__local_177:
; gsym_addr t 169134 a 169629 ind 169629
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #32
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
; gjmp_addr 164788 at 170129
jmp.w __local_179
; gsym_addr t 170176 a 164788 ind 170176
; gjmp_addr 0 at 170217
jmp.w __local_180
; gsym_addr t 170259 a 0 ind 170259
__local_178:
; gsym_addr t 169456 a 170295 ind 170295
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #48
ldx #1
lda.b tcc__r1
sec
sbc #48
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 170448 ind 170448
; gsym_addr t 0 a 170489 ind 170489
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 170581 ind 170581
; cmp op 0x95 inv 1 v 243 r 170581
; cmp ne
bne +
; gsym_addr t 0 a 170674 ind 170674
brl __local_181
+
; gtst finished; t 170581
__local_180:
; gsym_addr t 170259 a 170754 ind 170754
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
; gjmp_addr 164788 at 171253
jmp.w __local_182
; gsym_addr t 171300 a 164788 ind 171300
__local_181:
; gsym_addr t 170581 a 171341 ind 171341
; gsym_addr t 0 a 171382 ind 171382
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #-1,tcc__r0
lda.w #65535
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 172127 ind 172127
; gsym_addr t 0 a 172168 ind 172168
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 172260 ind 172260
; cmp op 0x95 inv 1 v 243 r 172260
; cmp ne
bne +
; gsym_addr t 0 a 172353 ind 172353
brl __local_183
+
; gtst finished; t 172260
; ldpush before load type 0x4 reg 0xf2
; load 0
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + 9,tcc__r0 (fr 0xf2 ft 0x4 fc 0x9)
stz.b tcc__r0h
tsa
clc
adc #(9 + __vsnprintf_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l tccs_skip_atoi
; add sp, #4
tsa
clc
adc #4
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 172913
jmp.w __local_184
; gsym_addr t 172955 a 0 ind 172955
__local_183:
; gsym_addr t 172260 a 172991 ind 172991
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #42
ldx #1
lda.b tcc__r1
sec
sbc #42
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 173485 ind 173485
; gsym_addr t 0 a 173526 ind 173526
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 173618 ind 173618
; cmp op 0x95 inv 1 v 243 r 173618
; cmp ne
bne +
; gsym_addr t 0 a 173711 ind 173711
brl __local_185
+
; gtst finished; t 173618
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 47
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 51
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x0)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r1, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r1
sta -32 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 175722 ind 175722
; gsym_addr t 0 a 175763 ind 175763
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 175855 ind 175855
; cmp op 0x95 inv 1 v 243 r 175855
; cmp ne
bne +
; gsym_addr t 0 a 175948 ind 175948
brl __local_186
+
; gtst finished; t 175855
; load 0
; type 0 reg 0xf0 extra 0x490b40
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x490b40
; ld2 [sp,-32],tcc__r1
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x0)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #16
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
__local_186:
; gsym_addr t 175855 a 177030 ind 177030
__local_185:
; gsym_addr t 173618 a 177071 ind 177071
__local_184:
; gsym_addr t 172955 a 177112 ind 177112
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #-1,tcc__r0
lda.w #65535
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -34 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #46
ldx #1
lda.b tcc__r1
sec
sbc #46
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 177839 ind 177839
; gsym_addr t 0 a 177880 ind 177880
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 177972 ind 177972
; cmp op 0x95 inv 1 v 243 r 177972
; cmp ne
bne +
; gsym_addr t 0 a 178065 ind 178065
brl __local_187
+
; gtst finished; t 177972
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 47
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 179133 ind 179133
; gsym_addr t 0 a 179174 ind 179174
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 179266 ind 179266
; cmp op 0x95 inv 1 v 243 r 179266
; cmp ne
bne +
; gsym_addr t 0 a 179359 ind 179359
brl __local_188
+
; gtst finished; t 179266
; ldpush before load type 0x4 reg 0xf2
; load 0
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + 9,tcc__r0 (fr 0xf2 ft 0x4 fc 0x9)
stz.b tcc__r0h
tsa
clc
adc #(9 + __vsnprintf_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l tccs_skip_atoi
; add sp, #4
tsa
clc
adc #4
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -34 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 179919
jmp.w __local_189
; gsym_addr t 179961 a 0 ind 179961
__local_188:
; gsym_addr t 179266 a 179997 ind 179997
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #42
ldx #1
lda.b tcc__r1
sec
sbc #42
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 180491 ind 180491
; gsym_addr t 0 a 180532 ind 180532
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 180624 ind 180624
; cmp op 0x95 inv 1 v 243 r 180624
; cmp ne
bne +
; gsym_addr t 0 a 180717 ind 180717
brl __local_190
+
; gtst finished; t 180624
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 47
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 51
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x0)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r1, [sp,-34]
; stack adjust: fc + disp - loc 4
lda.b tcc__r1
sta -34 + __vsnprintf_locals + 1,s
__local_190:
; gsym_addr t 180624 a 182450 ind 182450
__local_189:
; gsym_addr t 179961 a 182491 ind 182491
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc 4
lda -34 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 182810 ind 182810
; gsym_addr t 0 a 182851 ind 182851
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 182943 ind 182943
; cmp op 0x95 inv 1 v 243 r 182943
; cmp ne
bne +
; gsym_addr t 0 a 183036 ind 183036
brl __local_191
+
; gtst finished; t 182943
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffde
; st2 tcc__r0, [sp,-34]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -34 + __vsnprintf_locals + 1,s
__local_191:
; gsym_addr t 182943 a 183344 ind 183344
__local_187:
; gsym_addr t 177972 a 183385 ind 183385
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #-1,tcc__r0
lda.w #65535
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffdc
; st2 tcc__r0, [sp,-36]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -36 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #104
ldx #1
lda.b tcc__r1
sec
sbc #104
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 184114 ind 184114
; gsym_addr t 0 a 184155 ind 184155
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 184247 ind 184247
; cmp op 0x95 inv 0 v 243 r 184247
; cmp ne
beq +
; gsym_addr t 0 a 184340 ind 184340
brl __local_192
+
; gtst finished; t 184247
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #108
ldx #1
lda.b tcc__r1
sec
sbc #108
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 184247 v 5 r 184875 ind 184875
; gsym_addr t 184247 a 184921 ind 184921
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 184247 v 243 r 185018 ind 185018
; cmp op 0x95 inv 0 v 243 r 185018
; cmp ne
beq +
__local_192:
; gsym_addr t 184247 a 185116 ind 185116
brl __local_193
+
; gtst finished; t 185018
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #76
ldx #1
lda.b tcc__r1
sec
sbc #76
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 185018 v 5 r 185654 ind 185654
; gsym_addr t 185018 a 185700 ind 185700
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 185018 v 243 r 185797 ind 185797
; cmp op 0x95 inv 0 v 243 r 185797
; cmp ne
beq +
__local_193:
; gsym_addr t 185018 a 185895 ind 185895
brl __local_194
+
; gtst finished; t 185797
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #90
ldx #1
lda.b tcc__r1
sec
sbc #90
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 185797 v 5 r 186433 ind 186433
; gsym_addr t 185797 a 186479 ind 186479
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 185797 v 243 r 186576 ind 186576
; cmp op 0x95 inv 0 v 243 r 186576
; cmp ne
beq +
__local_194:
; gsym_addr t 185797 a 186674 ind 186674
brl __local_195
+
; gtst finished; t 186576
; gtst inv 1 t 0 v 244 r 186759 ind 186759
; VT_jmp r 186759 t 0 ji 0 inv 1 vtop->c.i 186576
; gjmp_addr 0 at 186852
jmp.w __local_196
; gsym_addr t 186894 a 0 ind 186894
__local_195:
; gsym_addr t 186576 a 186930 ind 186930
; gtst finished; t 186894
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xffffffdc
; st2 tcc__r1, [sp,-36]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -36 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 47
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 2
lda -36 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #108
ldx #1
lda.b tcc__r0
sec
sbc #108
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 188260 ind 188260
; gsym_addr t 0 a 188301 ind 188301
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 188393 ind 188393
; cmp op 0x95 inv 1 v 243 r 188393
; cmp ne
bne +
; gsym_addr t 0 a 188486 ind 188486
brl __local_197
+
; gtst finished; t 188393
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #108
ldx #1
lda.b tcc__r1
sec
sbc #108
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 188393 v 5 r 189021 ind 189021
; gsym_addr t 188393 a 189067 ind 189067
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 188393 v 243 r 189164 ind 189164
; cmp op 0x95 inv 1 v 243 r 189164
; cmp ne
bne +
__local_197:
; gsym_addr t 188393 a 189262 ind 189262
brl __local_198
+
; gtst finished; t 189164
; gtst inv 1 t 0 v 245 r 189347 ind 189347
; VT_jmp r 189347 t 0 ji 1 inv 1 vtop->c.i 189164
; gsym_addr t 0 a 189440 ind 189440
; gtst finished; t 189164
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #76,tcc__r0
lda.w #76
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffdc
; st2 tcc__r0, [sp,-36]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -36 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 47
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
__local_198:
; gsym_addr t 189164 a 190244 ind 190244
__local_196:
; gsym_addr t 186894 a 190285 ind 190285
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #10,tcc__r0
lda.w #10
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff4
; st2 tcc__r0, [sp,-12]
; stack adjust: fc + disp - loc 26
lda.b tcc__r0
sta -12 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 47
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gjmp_addr 0 at 190898
jmp.w __local_199
; gsym_addr t 190940 a 0 ind 190940
; gjmp_addr 0 at 190976
jmp.w __local_200
; gsym_addr t 191018 a 0 ind 191018
__local_199:
; gsym_addr t 190940 a 191054 ind 191054
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #99
ldx #1
lda.b tcc__r1
sec
sbc #99
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 191207 ind 191207
; gsym_addr t 0 a 191248 ind 191248
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 191340 ind 191340
; cmp op 0x95 inv 1 v 243 r 191340
; cmp ne
bne +
; gsym_addr t 0 a 191433 ind 191433
brl __local_201
+
; gtst finished; t 191340
__local_200:
; gsym_addr t 191018 a 191513 ind 191513
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #16
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 191863 ind 191863
; gsym_addr t 0 a 191904 ind 191904
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 191996 ind 191996
; cmp op 0x95 inv 1 v 243 r 191996
; cmp ne
bne +
; gsym_addr t 0 a 192089 ind 192089
brl __local_202
+
; gtst finished; t 191996
; gtst inv 1 t 0 v 244 r 192169 ind 192169
; VT_jmp r 192169 t 0 ji 0 inv 1 vtop->c.i 191996
; gjmp_addr 0 at 192262
jmp.w __local_203
; gsym_addr t 192304 a 0 ind 192304
__local_202:
; gsym_addr t 191996 a 192340 ind 192340
; gtst finished; t 192304
__local_206:
; load 0
; type 0 reg 0x1f2 extra 0x1
; ld2 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -32 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 192977 ind 192977
; gsym_addr t 0 a 193018 ind 193018
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 193110 ind 193110
; cmp op 0x95 inv 1 v 243 r 193110
; cmp ne
bne +
; gsym_addr t 0 a 193203 ind 193203
brl __local_204
+
; gtst finished; t 193110
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 193705 ind 193705
; gsym_addr t 0 a 193746 ind 193746
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 193838 ind 193838
; cmp op 0x95 inv 1 v 243 r 193838
; cmp ne
bne +
; gsym_addr t 0 a 193931 ind 193931
brl __local_205
+
; gtst finished; t 193838
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #32,tcc__r1
lda.w #32
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_205:
; gsym_addr t 193838 a 194405 ind 194405
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 192407 at 194977
jmp.w __local_206
; gsym_addr t 195024 a 192407 ind 195024
__local_204:
; gsym_addr t 193110 a 195065 ind 195065
; gsym_addr t 0 a 192407 ind 195106
__local_203:
; gsym_addr t 192304 a 195142 ind 195142
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 51
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x1)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 0 reg 0x100 extra 0x745adec0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 13 r type 0x1)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r1
and.w #255
sta.b tcc__r1
; gen_opi len 2 op 
; shl tcc__r1, #8
lda.b tcc__r1
xba
and #$ff00
sta.b tcc__r1
; gen_opi len 2 op 
; sar tcc__r1, #8
lda.b tcc__r1
ldy.w #8
-
cmp #$8000
ror a
dey
bne -
+
sta.b tcc__r1
; store r 0x1 fr 0x11f2 ft 0x1 fc 0xffffffeb
; st1 tcc__r1, [sp,-21]
; stack adjust: fc + disp - loc 17
sep #$20
lda.b tcc__r1
sta -21 + __vsnprintf_locals + 1,s
rep #$20
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 197126 ind 197126
; gsym_addr t 0 a 197167 ind 197167
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 197259 ind 197259
; cmp op 0x95 inv 1 v 243 r 197259
; cmp ne
bne +
; gsym_addr t 0 a 197352 ind 197352
brl __local_207
+
; gtst finished; t 197259
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x11f2 extra 0x0
; ld1 [sp,-21],tcc__r1
; stack adjust: fc + disp - loc 17
lda.w #0
sep #$20
lda -21 + __vsnprintf_locals + 1,s
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_207:
; gsym_addr t 197259 a 197949 ind 197949
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
__local_210:
; load 0
; type 0 reg 0x1f2 extra 0x1
; ld2 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -32 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 199091 ind 199091
; gsym_addr t 0 a 199132 ind 199132
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 199224 ind 199224
; cmp op 0x95 inv 1 v 243 r 199224
; cmp ne
bne +
; gsym_addr t 0 a 199317 ind 199317
brl __local_208
+
; gtst finished; t 199224
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 199819 ind 199819
; gsym_addr t 0 a 199860 ind 199860
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 199952 ind 199952
; cmp op 0x95 inv 1 v 243 r 199952
; cmp ne
bne +
; gsym_addr t 0 a 200045 ind 200045
brl __local_209
+
; gtst finished; t 199952
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #32,tcc__r1
lda.w #32
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_209:
; gsym_addr t 199952 a 200519 ind 200519
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 198521 at 201091
jmp.w __local_210
; gsym_addr t 201138 a 198521 ind 201138
__local_208:
; gsym_addr t 199224 a 201179 ind 201179
; gsym_addr t 0 a 198521 ind 201220
; gjmp_addr 164447 at 201256
jmp.w __local_211
; gsym_addr t 201303 a 164447 ind 201303
; gjmp_addr 0 at 201344
jmp.w __local_212
; gsym_addr t 201386 a 0 ind 201386
__local_201:
; gsym_addr t 191340 a 201422 ind 201422
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #115
ldx #1
lda.b tcc__r1
sec
sbc #115
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 201577 ind 201577
; gsym_addr t 0 a 201618 ind 201618
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 201710 ind 201710
; cmp op 0x95 inv 1 v 243 r 201710
; cmp ne
bne +
; gsym_addr t 0 a 201803 ind 201803
brl __local_213
+
; gtst finished; t 201710
__local_212:
; gsym_addr t 201386 a 201883 ind 201883
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 51
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x0
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffe4
; st4 tcc__r1, [sp,-28]
; stack adjust: fc + disp - loc 10
lda.b tcc__r1
sta -28 + __vsnprintf_locals + 1,s
lda.b tcc__r1h
sta -26 + __vsnprintf_locals + 1,s
; gtst inv 1 t 0 v 242 r 203166 ind 203166
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-28],tcc__r0
; stack adjust: fc + disp - loc 10
lda -28 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -26 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gsym_addr t 0 a 203404 ind 203404
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 203496 ind 203496
; cmp op 0x95 inv 1 v 243 r 203496
; cmp ne
bne +
; gsym_addr t 0 a 203589 ind 203589
brl __local_214
+
; gtst finished; t 203496
; gtst inv 1 t 0 v 244 r 203669 ind 203669
; VT_jmp r 203669 t 0 ji 0 inv 1 vtop->c.i 203496
; gjmp_addr 0 at 203762
jmp.w __local_215
; gsym_addr t 203804 a 0 ind 203804
__local_214:
; gsym_addr t 203496 a 203840 ind 203840
; gtst finished; t 203804
; load 0
; type 4 reg 0x12f0 extra 0x0
; ld4 #tccs_L.2 + 0, tcc__r0 (type 0x4)
lda.w #:tccs_L.2
sta.b tcc__r0h
lda.w #tccs_L.2 + 0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffe4
; st4 tcc__r0, [sp,-28]
; stack adjust: fc + disp - loc 10
lda.b tcc__r0
sta -28 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -26 + __vsnprintf_locals + 1,s
__local_215:
; gsym_addr t 203804 a 204254 ind 204254
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-28],tcc__r0
; stack adjust: fc + disp - loc 10
lda -28 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -26 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l strlen
; add sp, #4
tsa
clc
adc #4
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffe
; st2 tcc__r0, [sp,-2]
; stack adjust: fc + disp - loc 36
lda.b tcc__r0
sta -2 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #16
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 205115 ind 205115
; gsym_addr t 0 a 205156 ind 205156
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 205248 ind 205248
; cmp op 0x95 inv 1 v 243 r 205248
; cmp ne
bne +
; gsym_addr t 0 a 205341 ind 205341
brl __local_216
+
; gtst finished; t 205248
; gtst inv 1 t 0 v 244 r 205421 ind 205421
; VT_jmp r 205421 t 0 ji 0 inv 1 vtop->c.i 205248
; gjmp_addr 0 at 205514
jmp.w __local_217
; gsym_addr t 205556 a 0 ind 205556
__local_216:
; gsym_addr t 205248 a 205592 ind 205592
; gtst finished; t 205556
__local_220:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -32 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x3235b
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 36
lda -2 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 206503 ind 206503
; gsym_addr t 0 a 206544 ind 206544
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 206636 ind 206636
; cmp op 0x95 inv 1 v 243 r 206636
; cmp ne
bne +
; gsym_addr t 0 a 206729 ind 206729
brl __local_218
+
; gtst finished; t 206636
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 207231 ind 207231
; gsym_addr t 0 a 207272 ind 207272
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 207364 ind 207364
; cmp op 0x95 inv 1 v 243 r 207364
; cmp ne
bne +
; gsym_addr t 0 a 207457 ind 207457
brl __local_219
+
; gtst finished; t 207364
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #32,tcc__r1
lda.w #32
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_219:
; gsym_addr t 207364 a 207931 ind 207931
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 205659 at 208503
jmp.w __local_220
; gsym_addr t 208550 a 205659 ind 208550
__local_218:
; gsym_addr t 206636 a 208591 ind 208591
; gsym_addr t 0 a 205659 ind 208632
__local_217:
; gsym_addr t 205556 a 208668 ind 208668
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff6
; st2 tcc__r0, [sp,-10]
; stack adjust: fc + disp - loc 28
lda.b tcc__r0
sta -10 + __vsnprintf_locals + 1,s
__local_223:
; load 0
; type 0 reg 0x1f2 extra 0x3302a
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 28
lda -10 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x3302a
; ld2 [sp,-2],tcc__r1
; stack adjust: fc + disp - loc 36
lda -2 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 209378 ind 209378
; gsym_addr t 0 a 209419 ind 209419
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 209511 ind 209511
; cmp op 0x95 inv 1 v 243 r 209511
; cmp ne
bne +
; gsym_addr t 0 a 209604 ind 209604
brl __local_221
+
; gtst finished; t 209511
; gjmp_addr 0 at 209684
jmp.w __local_222
; gsym_addr t 209726 a 0 ind 209726
__local_225:
; load 0
; type 0 reg 0x1f2 extra 0x1
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 28
lda -10 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -10 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff6
; st2 tcc__r0, [sp,-10]
; stack adjust: fc + disp - loc 28
lda.b tcc__r0
sta -10 + __vsnprintf_locals + 1,s
; gjmp_addr 208938 at 210193
jmp.w __local_223
; gsym_addr t 210240 a 208938 ind 210240
__local_222:
; gsym_addr t 209726 a 210281 ind 210281
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 210744 ind 210744
; gsym_addr t 0 a 210785 ind 210785
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 210877 ind 210877
; cmp op 0x95 inv 1 v 243 r 210877
; cmp ne
bne +
; gsym_addr t 0 a 210970 ind 210970
brl __local_224
+
; gtst finished; t 210877
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-28],tcc__r1
; stack adjust: fc + disp - loc 10
lda -28 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda -26 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; load 2
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r2
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r2
; store r 0x2 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r2, [tcc__r0,0]
sep #$20
lda.b tcc__r2
sta.b [tcc__r0]
rep #$20
__local_224:
; gsym_addr t 210877 a 211711 ind 211711
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-28],tcc__r0
; stack adjust: fc + disp - loc 10
lda -28 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -26 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -28 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffe4
; st4 tcc__r0, [sp,-28]
; stack adjust: fc + disp - loc 10
lda.b tcc__r0
sta -28 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -26 + __vsnprintf_locals + 1,s
; gjmp_addr 209762 at 212814
jmp.w __local_225
; gsym_addr t 212861 a 209762 ind 212861
__local_221:
; gsym_addr t 209511 a 212902 ind 212902
; gsym_addr t 0 a 209762 ind 212943
__local_228:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -32 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x33ff3
; ld2 [sp,-2],tcc__r0
; stack adjust: fc + disp - loc 36
lda -2 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 213823 ind 213823
; gsym_addr t 0 a 213864 ind 213864
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 213956 ind 213956
; cmp op 0x95 inv 1 v 243 r 213956
; cmp ne
bne +
; gsym_addr t 0 a 214049 ind 214049
brl __local_226
+
; gtst finished; t 213956
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 18
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 214551 ind 214551
; gsym_addr t 0 a 214592 ind 214592
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 214684 ind 214684
; cmp op 0x95 inv 1 v 243 r 214684
; cmp ne
bne +
; gsym_addr t 0 a 214777 ind 214777
brl __local_227
+
; gtst finished; t 214684
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #32,tcc__r1
lda.w #32
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_227:
; gsym_addr t 214684 a 215251 ind 215251
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 22
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 212979 at 215823
jmp.w __local_228
; gsym_addr t 215870 a 212979 ind 215870
__local_226:
; gsym_addr t 213956 a 215911 ind 215911
; gsym_addr t 0 a 212979 ind 215952
; gjmp_addr 201303 at 215988
jmp.w __local_229
; gsym_addr t 216035 a 201303 ind 216035
; gjmp_addr 0 at 216076
jmp.w __local_230
; gsym_addr t 216118 a 0 ind 216118
__local_213:
; gsym_addr t 201710 a 216154 ind 216154
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #112
ldx #1
lda.b tcc__r1
sec
sbc #112
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 216309 ind 216309
; gsym_addr t 0 a 216350 ind 216350
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 216442 ind 216442
; cmp op 0x95 inv 1 v 243 r 216442
; cmp ne
bne +
; gsym_addr t 0 a 216535 ind 216535
brl __local_231
+
; gtst finished; t 216442
__local_230:
; gsym_addr t 216118 a 216615 ind 216615
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #-1
ldx #1
lda.b tcc__r0
sec
sbc #-1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 216913 ind 216913
; gsym_addr t 0 a 216954 ind 216954
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 217046 ind 217046
; cmp op 0x95 inv 1 v 243 r 217046
; cmp ne
bne +
; gsym_addr t 0 a 217139 ind 217139
brl __local_232
+
; gtst finished; t 217046
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe0
; st2 tcc__r0, [sp,-32]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -32 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
__local_232:
; gsym_addr t 217046 a 217905 ind 217905
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 51
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 51
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0xffffffe2
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; ldpush before load type 0x0 reg 0x1f2
; load 2
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r2
; stack adjust: fc + disp - loc 8
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r2
; ldpush2 (type 0x0 reg 0x2) tcc__r2
pei (tcc__r2)
; ldpush before load type 0x0 reg 0x1f2
; load 2
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-34],tcc__r2
; stack adjust: fc + disp - loc 6
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r2
; ldpush2 (type 0x0 reg 0x2) tcc__r2
pei (tcc__r2)
; ldpush before load type 0x0 reg 0x1f2
; load 2
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-32],tcc__r2
; stack adjust: fc + disp - loc 10
lda -28 + __vsnprintf_locals + 1,s
sta.b tcc__r2
; ldpush2 (type 0x0 reg 0x2) tcc__r2
pei (tcc__r2)
; push2 imm r 0xf0
pea.w 16
; ldpush before load type 0xc reg 0x1
; ldpush4 (type 0xc reg 0x1) tcc__r1
pei (tcc__r0)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-20],tcc__r0
; stack adjust: fc + disp - loc 30
lda -8 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -6 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 38
lda 0 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 2 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l tccs_number
; add sp, #20
tsa
clc
adc #20
tas
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 216035 at 220723
jmp.w __local_233
; gsym_addr t 220770 a 216035 ind 220770
; gjmp_addr 0 at 220811
jmp.w __local_234
; gsym_addr t 220853 a 0 ind 220853
__local_231:
; gsym_addr t 216442 a 220889 ind 220889
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #110
ldx #1
lda.b tcc__r1
sec
sbc #110
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 221044 ind 221044
; gsym_addr t 0 a 221085 ind 221085
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 221177 ind 221177
; cmp op 0x95 inv 1 v 243 r 221177
; cmp ne
bne +
; gsym_addr t 0 a 221270 ind 221270
brl __local_235
+
; gtst finished; t 221177
__local_234:
; gsym_addr t 220853 a 221350 ind 221350
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 2
lda -36 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #108
ldx #1
lda.b tcc__r0
sec
sbc #108
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 221650 ind 221650
; gsym_addr t 0 a 221691 ind 221691
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 221783 ind 221783
; cmp op 0x95 inv 1 v 243 r 221783
; cmp ne
bne +
; gsym_addr t 0 a 221876 ind 221876
brl __local_236
+
; gtst finished; t 221783
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 55
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 55
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 55
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0xf3
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffd8
; st4 tcc__r1, [sp,-40]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -40 + __vsnprintf_locals + 1,s
lda.b tcc__r1h
sta -38 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-40],tcc__r0
; stack adjust: fc + disp - loc 2
lda -40 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -38 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r1
; stack adjust: fc + disp - loc 26
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; load 2
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r2
; stack adjust: fc + disp - loc 45
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r2
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r2h
; gen_opi len 4 op -
; sbc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x4 c -16 r type 0x0)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0xffffffd8
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 224040
jmp.w __local_237
; gsym_addr t 224082 a 0 ind 224082
__local_236:
; gsym_addr t 221783 a 224118 ind 224118
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 6
lda -36 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #90
ldx #1
lda.b tcc__r0
sec
sbc #90
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 224416 ind 224416
; gsym_addr t 0 a 224457 ind 224457
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 224549 ind 224549
; cmp op 0x95 inv 1 v 243 r 224549
; cmp ne
bne +
; gsym_addr t 0 a 224642 ind 224642
brl __local_238
+
; gtst finished; t 224549
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 59
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 59
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 59
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0xf3
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffd4
; st4 tcc__r1, [sp,-44]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -44 + __vsnprintf_locals + 1,s
lda.b tcc__r1h
sta -42 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-44],tcc__r0
; stack adjust: fc + disp - loc 2
lda -44 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -42 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r1
; stack adjust: fc + disp - loc 30
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; load 2
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r2
; stack adjust: fc + disp - loc 49
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r2
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r2h
; gen_opi len 4 op -
; sbc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x4 c -16 r type 0x10)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0xffffffd4
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 226808
jmp.w __local_239
; gsym_addr t 226850 a 0 ind 226850
__local_238:
; gsym_addr t 224549 a 226886 ind 226886
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 63
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x37646
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffd0
; st4 tcc__r1, [sp,-48]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -48 + __vsnprintf_locals + 1,s
lda.b tcc__r1h
sta -46 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-48],tcc__r0
; stack adjust: fc + disp - loc 2
lda -48 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -46 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r1
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; load 2
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r2
; stack adjust: fc + disp - loc 53
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r2
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r2h
; gen_opi len 4 op -
; sbc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x4 c -16 r type 0x0)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0xffffffd0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_239:
; gsym_addr t 226850 a 229014 ind 229014
__local_237:
; gsym_addr t 224082 a 229055 ind 229055
; gjmp_addr 220770 at 229096
jmp.w __local_240
; gsym_addr t 229143 a 220770 ind 229143
; gjmp_addr 0 at 229184
jmp.w __local_241
; gsym_addr t 229226 a 0 ind 229226
__local_235:
; gsym_addr t 221177 a 229262 ind 229262
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #37
ldx #1
lda.b tcc__r1
sec
sbc #37
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 229415 ind 229415
; gsym_addr t 0 a 229456 ind 229456
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 229548 ind 229548
; cmp op 0x95 inv 1 v 243 r 229548
; cmp ne
bne +
; gsym_addr t 0 a 229641 ind 229641
brl __local_242
+
; gtst finished; t 229548
__local_241:
; gsym_addr t 229226 a 229721 ind 229721
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 30
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 230184 ind 230184
; gsym_addr t 0 a 230225 ind 230225
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 230317 ind 230317
; cmp op 0x95 inv 1 v 243 r 230317
; cmp ne
bne +
; gsym_addr t 0 a 230410 ind 230410
brl __local_243
+
; gtst finished; t 230317
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #37,tcc__r1
lda.w #37
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_243:
; gsym_addr t 230317 a 230884 ind 230884
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 34
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 229143 at 231456
jmp.w __local_244
; gsym_addr t 231503 a 229143 ind 231503
; gjmp_addr 0 at 231544
jmp.w __local_245
; gsym_addr t 231586 a 0 ind 231586
__local_242:
; gsym_addr t 229548 a 231622 ind 231622
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #111
ldx #1
lda.b tcc__r1
sec
sbc #111
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 231777 ind 231777
; gsym_addr t 0 a 231818 ind 231818
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 231910 ind 231910
; cmp op 0x95 inv 1 v 243 r 231910
; cmp ne
bne +
; gsym_addr t 0 a 232003 ind 232003
brl __local_246
+
; gtst finished; t 231910
__local_245:
; gsym_addr t 231586 a 232083 ind 232083
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff4
; st2 tcc__r0, [sp,-12]
; stack adjust: fc + disp - loc 38
lda.b tcc__r0
sta -12 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 232353
jmp.w __local_247
; gsym_addr t 232395 a 0 ind 232395
; gjmp_addr 0 at 232431
jmp.w __local_248
; gsym_addr t 232473 a 0 ind 232473
__local_246:
; gsym_addr t 231910 a 232509 ind 232509
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #88
ldx #1
lda.b tcc__r1
sec
sbc #88
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 232662 ind 232662
; gsym_addr t 0 a 232703 ind 232703
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 232795 ind 232795
; cmp op 0x95 inv 1 v 243 r 232795
; cmp ne
bne +
; gsym_addr t 0 a 232888 ind 232888
brl __local_249
+
; gtst finished; t 232795
__local_248:
; gsym_addr t 232473 a 232968 ind 232968
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 20
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #64
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 20
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 233470
jmp.w __local_250
; gsym_addr t 233512 a 0 ind 233512
__local_249:
; gsym_addr t 232795 a 233548 ind 233548
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #120
ldx #1
lda.b tcc__r1
sec
sbc #120
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 233703 ind 233703
; gsym_addr t 0 a 233744 ind 233744
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 233836 ind 233836
; cmp op 0x95 inv 1 v 243 r 233836
; cmp ne
bne +
; gsym_addr t 0 a 233929 ind 233929
brl __local_251
+
; gtst finished; t 233836
__local_250:
; gsym_addr t 233512 a 234009 ind 234009
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #16,tcc__r0
lda.w #16
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff4
; st2 tcc__r0, [sp,-12]
; stack adjust: fc + disp - loc 38
lda.b tcc__r0
sta -12 + __vsnprintf_locals + 1,s
; gjmp_addr 232395 at 234281
jmp.w __local_252
; gsym_addr t 234328 a 232395 ind 234328
; gjmp_addr 0 at 234369
jmp.w __local_253
; gsym_addr t 234411 a 0 ind 234411
__local_251:
; gsym_addr t 233836 a 234447 ind 234447
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #100
ldx #1
lda.b tcc__r1
sec
sbc #100
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 234602 ind 234602
; gsym_addr t 0 a 234643 ind 234643
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 234735 ind 234735
; cmp op 0x95 inv 1 v 243 r 234735
; cmp ne
bne +
; gsym_addr t 0 a 234828 ind 234828
brl __local_254
+
; gtst finished; t 234735
__local_253:
; gsym_addr t 234411 a 234908 ind 234908
; gjmp_addr 0 at 234949
jmp.w __local_255
; gsym_addr t 234991 a 0 ind 234991
__local_254:
; gsym_addr t 234735 a 235027 ind 235027
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #105
ldx #1
lda.b tcc__r1
sec
sbc #105
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 235182 ind 235182
; gsym_addr t 0 a 235223 ind 235223
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 235315 ind 235315
; cmp op 0x95 inv 1 v 243 r 235315
; cmp ne
bne +
; gsym_addr t 0 a 235408 ind 235408
brl __local_256
+
; gtst finished; t 235315
__local_255:
; gsym_addr t 234991 a 235488 ind 235488
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 20
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #2
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffe2
; st2 tcc__r0, [sp,-30]
; stack adjust: fc + disp - loc 20
lda.b tcc__r0
sta -30 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 235989
jmp.w __local_257
; gsym_addr t 236031 a 0 ind 236031
__local_256:
; gsym_addr t 235315 a 236067 ind 236067
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #117
ldx #1
lda.b tcc__r1
sec
sbc #117
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 236222 ind 236222
; gsym_addr t 0 a 236263 ind 236263
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 236355 ind 236355
; cmp op 0x95 inv 1 v 243 r 236355
; cmp ne
bne +
; gsym_addr t 0 a 236448 ind 236448
brl __local_258
+
; gtst finished; t 236355
__local_257:
; gsym_addr t 236031 a 236528 ind 236528
; gjmp_addr 234328 at 236569
jmp.w __local_259
; gsym_addr t 236616 a 234328 ind 236616
__local_258:
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 30
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 237079 ind 237079
; gsym_addr t 0 a 237120 ind 237120
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 237212 ind 237212
; cmp op 0x95 inv 1 v 243 r 237212
; cmp ne
bne +
; gsym_addr t 0 a 237305 ind 237305
brl __local_260
+
; gtst finished; t 237212
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #37,tcc__r1
lda.w #37
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_260:
; gsym_addr t 237212 a 237779 ind 237779
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 34
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 59
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 238541 ind 238541
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 238733 ind 238733
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 238825 ind 238825
; cmp op 0x95 inv 1 v 243 r 238825
; cmp ne
bne +
; gsym_addr t 0 a 238918 ind 238918
brl __local_261
+
; gtst finished; t 238825
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 30
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 239420 ind 239420
; gsym_addr t 0 a 239461 ind 239461
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 239553 ind 239553
; cmp op 0x95 inv 1 v 243 r 239553
; cmp ne
bne +
; gsym_addr t 0 a 239646 ind 239646
brl __local_262
+
; gtst finished; t 239553
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r1
; stack adjust: fc + disp - loc 59
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; load 2
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r2
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r2
; store r 0x2 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r2, [tcc__r0,0]
sep #$20
lda.b tcc__r2
sta.b [tcc__r0]
rep #$20
__local_262:
; gsym_addr t 239553 a 240382 ind 240382
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 34
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 240954
jmp.w __local_263
; gsym_addr t 240996 a 0 ind 240996
__local_261:
; gsym_addr t 238825 a 241032 ind 241032
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 59
lda 9 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 11 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 9 r type 0x4)
; length xxy 4 vtop->type 0x4
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x9
; st4 tcc__r0, [sp,9]
; stack adjust: fc + disp - loc 59
lda.b tcc__r0
sta 9 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 11 + __vsnprintf_locals + 1,s
__local_263:
; gsym_addr t 240996 a 241585 ind 241585
; gjmp_addr 231503 at 241626
jmp.w __local_264
; gsym_addr t 241673 a 231503 ind 241673
; gsym_addr t 236355 a 236657 ind 241714
__local_247:
__local_252:
__local_259:
; gsym_addr t 236616 a 241755 ind 241755
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 14
lda -36 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #76
ldx #1
lda.b tcc__r0
sec
sbc #76
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 242054 ind 242054
; gsym_addr t 0 a 242095 ind 242095
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 242187 ind 242187
; cmp op 0x95 inv 1 v 243 r 242187
; cmp ne
bne +
; gsym_addr t 0 a 242280 ind 242280
brl __local_265
+
; gtst finished; t 242187
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 63
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x1c)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 28 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 13 r type 0x1c)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
inc.b tcc__r0
; load 2
; type 0 reg 0x100 extra 0x745ae53c
; ld2 [tcc__r0,0],tcc__r2
lda.b [tcc__r0]
sta.b tcc__r2
; store r 0x1 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r1
sta -8 + __vsnprintf_locals + 1,s
; store r 0x2 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r2, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r2
sta -6 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 243902
jmp.w __local_266
; gsym_addr t 243944 a 0 ind 243944
__local_265:
; gsym_addr t 242187 a 243980 ind 243980
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 14
lda -36 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #108
ldx #1
lda.b tcc__r0
sec
sbc #108
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 244281 ind 244281
; gsym_addr t 0 a 244322 ind 244322
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 244414 ind 244414
; cmp op 0x95 inv 1 v 243 r 244414
; cmp ne
bne +
; gsym_addr t 0 a 244507 ind 244507
brl __local_267
+
; gtst finished; t 244414
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 63
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x1c)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x1 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r1
sta -8 + __vsnprintf_locals + 1,s
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r0
sta -6 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 20
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #2
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 246266 ind 246266
; gsym_addr t 0 a 246307 ind 246307
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 246399 ind 246399
; cmp op 0x95 inv 1 v 243 r 246399
; cmp ne
bne +
; gsym_addr t 0 a 246492 ind 246492
brl __local_268
+
; gtst finished; t 246399
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 42
lda -8 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op 
; sar tcc__r1, #15
lda.b tcc__r1
ldy.w #15
-
cmp #$8000
ror a
dey
bne -
+
sta.b tcc__r1
; store r 0x0 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r0, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r0
sta -8 + __vsnprintf_locals + 1,s
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r1, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r1
sta -6 + __vsnprintf_locals + 1,s
__local_268:
; gsym_addr t 246399 a 247242 ind 247242
; gjmp_addr 0 at 247283
jmp.w __local_269
; gsym_addr t 247325 a 0 ind 247325
__local_267:
; gsym_addr t 244414 a 247361 ind 247361
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 14
lda -36 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #90
ldx #1
lda.b tcc__r0
sec
sbc #90
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 247660 ind 247660
; gsym_addr t 0 a 247701 ind 247701
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 247793 ind 247793
; cmp op 0x95 inv 1 v 243 r 247793
; cmp ne
bne +
; gsym_addr t 0 a 247886 ind 247886
brl __local_270
+
; gtst finished; t 247793
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 63
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x1c)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x1 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r1
sta -8 + __vsnprintf_locals + 1,s
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r0
sta -6 + __vsnprintf_locals + 1,s
; gjmp_addr 0 at 249336
jmp.w __local_271
; gsym_addr t 249378 a 0 ind 249378
__local_270:
; gsym_addr t 247793 a 249414 ind 249414
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 14
lda -36 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #104
ldx #1
lda.b tcc__r0
sec
sbc #104
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 249715 ind 249715
; gsym_addr t 0 a 249756 ind 249756
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 249848 ind 249848
; cmp op 0x95 inv 1 v 243 r 249848
; cmp ne
bne +
; gsym_addr t 0 a 249941 ind 249941
brl __local_272
+
; gtst finished; t 249848
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 63
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x1c)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0xffffffff
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x1 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r1
sta -8 + __vsnprintf_locals + 1,s
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r0
sta -6 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 20
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #2
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 251707 ind 251707
; gsym_addr t 0 a 251748 ind 251748
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 251840 ind 251840
; cmp op 0x95 inv 1 v 243 r 251840
; cmp ne
bne +
; gsym_addr t 0 a 251933 ind 251933
brl __local_273
+
; gtst finished; t 251840
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 42
lda -8 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op 
; sar tcc__r1, #15
lda.b tcc__r1
ldy.w #15
-
cmp #$8000
ror a
dey
bne -
+
sta.b tcc__r1
; store r 0x0 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r0, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r0
sta -8 + __vsnprintf_locals + 1,s
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r1, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r1
sta -6 + __vsnprintf_locals + 1,s
__local_273:
; gsym_addr t 251840 a 252683 ind 252683
; gjmp_addr 0 at 252724
jmp.w __local_274
; gsym_addr t 252766 a 0 ind 252766
__local_272:
; gsym_addr t 249848 a 252802 ind 252802
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xd
; st4 tcc__r0, [sp,13]
; stack adjust: fc + disp - loc 63
lda.b tcc__r0
sta 13 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta 15 + __vsnprintf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,13],tcc__r0
; stack adjust: fc + disp - loc 63
lda 13 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 13 r type 0x1c)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x1 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r1, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r1
sta -8 + __vsnprintf_locals + 1,s
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r0
sta -6 + __vsnprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x26
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 20
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -30 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #2
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 254522 ind 254522
; gsym_addr t 0 a 254563 ind 254563
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 254655 ind 254655
; cmp op 0x95 inv 1 v 243 r 254655
; cmp ne
bne +
; gsym_addr t 0 a 254748 ind 254748
brl __local_275
+
; gtst finished; t 254655
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 42
lda -8 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op 
; sar tcc__r1, #15
lda.b tcc__r1
ldy.w #15
-
cmp #$8000
ror a
dey
bne -
+
sta.b tcc__r1
; store r 0x0 fr 0x1f2 ft 0x1c fc 0xfffffff8
; st2 tcc__r0, [sp,-8]
; stack adjust: fc + disp - loc 42
lda.b tcc__r0
sta -8 + __vsnprintf_locals + 1,s
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r1, [sp,-6]
; stack adjust: fc + disp - loc 44
lda.b tcc__r1
sta -6 + __vsnprintf_locals + 1,s
__local_275:
; gsym_addr t 254655 a 255498 ind 255498
__local_274:
; gsym_addr t 252766 a 255539 ind 255539
__local_271:
; gsym_addr t 249378 a 255580 ind 255580
__local_269:
; gsym_addr t 247325 a 255621 ind 255621
__local_266:
; gsym_addr t 243944 a 255662 ind 255662
; ldpush before load type 0x0 reg 0x1f2
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-30],tcc__r0
; stack adjust: fc + disp - loc 20
lda -30 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x0 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x0 reg 0x1f2
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-34],tcc__r0
; stack adjust: fc + disp - loc 18
lda -32 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x0 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x0 reg 0x1f2
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 22
lda -28 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x0 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x0 reg 0x1f2
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-12],tcc__r0
; stack adjust: fc + disp - loc 44
lda -6 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x0 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0xc reg 0x1f2
; load 0
; type 12 reg 0x1f2 extra 0x0
; ld2 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 50
lda 0 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-6],tcc__r1
; stack adjust: fc + disp - loc 52
lda 2 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; ldpush4 (type 0xc reg 0x0) tcc__r0
pei (tcc__r1)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-20],tcc__r0
; stack adjust: fc + disp - loc 42
lda -8 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -6 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 50
lda 0 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda 2 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l tccs_number
; add sp, #20
tsa
clc
adc #20
tas
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffff0
; st4 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 34
lda.b tcc__r0
sta -16 + __vsnprintf_locals + 1,s
lda.b tcc__r0h
sta -14 + __vsnprintf_locals + 1,s
; gjmp_addr 161049 at 257901
jmp.w __local_276
; gsym_addr t 257948 a 161049 ind 257948
__local_161:
; gsym_addr t 160798 a 257989 ind 257989
; gsym_addr t 241673 a 161049 ind 258030
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-20],tcc__r1
; stack adjust: fc + disp - loc 30
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 258493 ind 258493
; gsym_addr t 0 a 258534 ind 258534
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 258626 ind 258626
; cmp op 0x95 inv 1 v 243 r 258626
; cmp ne
bne +
; gsym_addr t 0 a 258719 ind 258719
brl __local_277
+
; gtst finished; t 258626
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xfffffff0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; gjmp_addr 0 at 259191
jmp.w __local_278
; gsym_addr t 259233 a 0 ind 259233
__local_277:
; gsym_addr t 258626 a 259269 ind 259269
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 57
lda 7 + __vsnprintf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x97
; ucmpcd tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc.w #0
tay
beq +
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 259571 ind 259571
; gsym_addr t 0 a 259612 ind 259612
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 259704 ind 259704
; cmp op 0x95 inv 1 v 243 r 259704
; cmp ne
bne +
; gsym_addr t 0 a 259797 ind 259797
brl __local_279
+
; gtst finished; t 259704
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-20],tcc__r0
; stack adjust: fc + disp - loc 30
lda -20 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -18 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xffffffec
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
__local_279:
; gsym_addr t 259704 a 260269 ind 260269
__local_278:
; gsym_addr t 259233 a 260310 ind 260310
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 34
lda -16 + __vsnprintf_locals + 1,s
sta.b tcc__r0
lda -14 + __vsnprintf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 53
lda 3 + __vsnprintf_locals + 1,s
sta.b tcc__r1
lda 5 + __vsnprintf_locals + 1,s
sta.b tcc__r1h
; gen_opi len 4 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x4 c -16 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; gjmp_addr 0 at 260898
jmp.w __local_280
; gsym_addr t 260940 a 0 ind 260940
__local_280:
; gsym_addr t 260940 a 260976 ind 260976
; add sp, #__vsnprintf_locals
.ifgr __vsnprintf_locals 0
tsa
clc
adc #__vsnprintf_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x12" SUPERFREE

snprintf:
; sub sp,#__snprintf_locals
.ifgr __snprintf_locals 0
tsa
sec
sbc #__snprintf_locals
tas
.endif
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + 13,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xd)
stz.b tcc__r0h
tsa
clc
adc #(13 + __snprintf_locals + 1)
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -4 + __snprintf_locals + 1,s
lda.b tcc__r0h
sta -2 + __snprintf_locals + 1,s
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 4
lda -4 + __snprintf_locals + 1,s
sta.b tcc__r0
lda -2 + __snprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,9],tcc__r0
; stack adjust: fc + disp - loc 21
lda 13 + __snprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __snprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 23
lda 15 + __snprintf_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 21
lda 13 + __snprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __snprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l vsnprintf
; add sp, #14
tsa
clc
adc #14
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -6 + __snprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-6],tcc__r0
; stack adjust: fc + disp - loc 2
lda -6 + __snprintf_locals + 1,s
sta.b tcc__r0
; gjmp_addr 0 at 263098
jmp.w __local_281
; gsym_addr t 263140 a 0 ind 263140
__local_281:
; gsym_addr t 263140 a 263176 ind 263176
; add sp, #__snprintf_locals
.ifgr __snprintf_locals 0
tsa
clc
adc #__snprintf_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x13" SUPERFREE

vsprintf:
; sub sp,#__vsprintf_locals
.ifgr __vsprintf_locals 0
tsa
sec
sbc #__vsprintf_locals
tas
.endif
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 13
lda 11 + __vsprintf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 13
lda 11 + __vsprintf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; push2 imm r 0xf0
pea.w 65535
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 15
lda 13 + __vsprintf_locals + 1,s
sta.b tcc__r0
lda 15 + __vsprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l vsnprintf
; add sp, #14
tsa
clc
adc #14
tas
; gjmp_addr 0 at 264446
jmp.w __local_282
; gsym_addr t 264488 a 0 ind 264488
__local_282:
; gsym_addr t 264488 a 264524 ind 264524
; add sp, #__vsprintf_locals
.ifgr __vsprintf_locals 0
tsa
clc
adc #__vsprintf_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x14" SUPERFREE

sprintf:
; sub sp,#__sprintf_locals
.ifgr __sprintf_locals 0
tsa
sec
sbc #__sprintf_locals
tas
.endif
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + 11,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xb)
stz.b tcc__r0h
tsa
clc
adc #(11 + __sprintf_locals + 1)
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -4 + __sprintf_locals + 1,s
lda.b tcc__r0h
sta -2 + __sprintf_locals + 1,s
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 4
lda -4 + __sprintf_locals + 1,s
sta.b tcc__r0
lda -2 + __sprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 19
lda 11 + __sprintf_locals + 1,s
sta.b tcc__r0
lda 13 + __sprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 19
lda 11 + __sprintf_locals + 1,s
sta.b tcc__r0
lda 13 + __sprintf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l vsprintf
; add sp, #12
tsa
clc
adc #12
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -6 + __sprintf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-6],tcc__r0
; stack adjust: fc + disp - loc 2
lda -6 + __sprintf_locals + 1,s
sta.b tcc__r0
; gjmp_addr 0 at 266392
jmp.w __local_283
; gsym_addr t 266434 a 0 ind 266434
__local_283:
; gsym_addr t 266434 a 266470 ind 266470
; add sp, #__sprintf_locals
.ifgr __sprintf_locals 0
tsa
clc
adc #__sprintf_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x15" SUPERFREE

vsscanf:
; sub sp,#__vsscanf_locals
.ifgr __vsscanf_locals 0
tsa
sec
sbc #__vsscanf_locals
tas
.endif
; load 0
; type 4 reg 0x1f2 extra 0xf0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 9
lda 3 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 5 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; load 0
; type 0 reg 0xf0 extra 0xf0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff6
; st2 tcc__r0, [sp,-10]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -10 + __vsscanf_locals + 1,s
; load 0
; type 0 reg 0xf0 extra 0xf0
; ld2 #-1,tcc__r0
lda.w #65535
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff0
; st2 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -16 + __vsscanf_locals + 1,s
; load 0
; type 0 reg 0xf0 extra 0xf0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffee
; st2 tcc__r0, [sp,-18]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -18 + __vsscanf_locals + 1,s
__local_295:
__local_308:
__local_326:
__local_337:
__local_340:
__local_360:
__local_393:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 268001 ind 268001
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 268193 ind 268193
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 268285 ind 268285
; cmp op 0x95 inv 1 v 243 r 268285
; cmp ne
bne +
; gsym_addr t 0 a 268378 ind 268378
brl __local_284
+
; gtst finished; t 268285
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 268285 v 0 r 268646 ind 268646
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 268285 a 268843 ind 268843
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 268285 v 243 r 268940 ind 268940
; cmp op 0x95 inv 1 v 243 r 268940
; cmp ne
bne +
__local_284:
; gsym_addr t 268285 a 269038 ind 269038
brl __local_285
+
; gtst finished; t 268940
; gtst inv 1 t 0 v 245 r 269123 ind 269123
; VT_jmp r 269123 t 0 ji 1 inv 1 vtop->c.i 268940
; gsym_addr t 0 a 269216 ind 269216
; gtst finished; t 268940
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 269749 ind 269749
; gsym_addr t 0 a 269790 ind 269790
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 269882 ind 269882
; cmp op 0x95 inv 1 v 243 r 269882
; cmp ne
bne +
; gsym_addr t 0 a 269975 ind 269975
brl __local_286
+
; gtst finished; t 269882
__local_288:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 270526 ind 270526
; gsym_addr t 0 a 270567 ind 270567
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 270659 ind 270659
; cmp op 0x95 inv 1 v 243 r 270659
; cmp ne
bne +
; gsym_addr t 0 a 270752 ind 270752
brl __local_287
+
; gtst finished; t 270659
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 7 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x7
; st4 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 27
lda.b tcc__r0
sta 7 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 9 + __vsscanf_locals + 1,s
; gjmp_addr 270055 at 271334
jmp.w __local_288
; gsym_addr t 271381 a 270055 ind 271381
__local_287:
; gsym_addr t 270659 a 271422 ind 271422
; gsym_addr t 0 a 270055 ind 271463
__local_290:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 271973 ind 271973
; gsym_addr t 0 a 272014 ind 272014
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 272106 ind 272106
; cmp op 0x95 inv 1 v 243 r 272106
; cmp ne
bne +
; gsym_addr t 0 a 272199 ind 272199
brl __local_289
+
; gtst finished; t 272106
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 16
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; gjmp_addr 271499 at 272795
jmp.w __local_290
; gsym_addr t 272842 a 271499 ind 272842
__local_289:
; gsym_addr t 272106 a 272883 ind 272883
; gsym_addr t 0 a 271499 ind 272924
__local_286:
; gsym_addr t 269882 a 272960 ind 272960
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #37
ldx #1
lda.b tcc__r1
sec
sbc #37
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 273449 ind 273449
; gsym_addr t 0 a 273490 ind 273490
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 273582 ind 273582
; cmp op 0x95 inv 1 v 243 r 273582
; cmp ne
bne +
; gsym_addr t 0 a 273675 ind 273675
brl __local_291
+
; gtst finished; t 273582
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 273582 v 0 r 273940 ind 273940
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 273582 a 274137 ind 274137
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 273582 v 243 r 274234 ind 274234
; cmp op 0x95 inv 1 v 243 r 274234
; cmp ne
bne +
__local_291:
; gsym_addr t 273582 a 274332 ind 274332
brl __local_292
+
; gtst finished; t 274234
; gtst inv 1 t 0 v 245 r 274417 ind 274417
; VT_jmp r 274417 t 0 ji 1 inv 1 vtop->c.i 274234
; gsym_addr t 0 a 274510 ind 274510
; gtst finished; t 274234
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 7 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x7
; st4 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 27
lda.b tcc__r0
sta 7 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 9 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 2
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r2
lda.b tcc__r0
sta.b tcc__r2
lda.b tcc__r0h
sta.b tcc__r2h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 16
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; load 0
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r0
; load 1
; type 1 reg 0x1102 extra 0x0
; ld1 [tcc__r2,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r2]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, tcc__r1
ldx #1
lda.b tcc__r0
sec
sbc.b tcc__r1
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 276248 ind 276248
; gsym_addr t 0 a 276289 ind 276289
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 276381 ind 276381
; cmp op 0x95 inv 1 v 243 r 276381
; cmp ne
bne +
; gsym_addr t 0 a 276474 ind 276474
brl __local_293
+
; gtst finished; t 276381
; gjmp_addr 268940 at 276554
jmp.w __local_294
; gsym_addr t 276601 a 268940 ind 276601
__local_293:
; gsym_addr t 276381 a 276642 ind 276642
; gjmp_addr 0 at 276683
jmp.w __local_295
; gsym_addr t 276725 a 0 ind 276725
__local_292:
; gsym_addr t 274234 a 276761 ind 276761
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 276987 ind 276987
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 277179 ind 277179
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 277271 ind 277271
; cmp op 0x95 inv 1 v 243 r 277271
; cmp ne
bne +
; gsym_addr t 0 a 277364 ind 277364
brl __local_296
+
; gtst finished; t 277271
; gtst inv 1 t 0 v 244 r 277444 ind 277444
; VT_jmp r 277444 t 0 ji 0 inv 1 vtop->c.i 277271
; gjmp_addr 0 at 277537
jmp.w __local_297
; gsym_addr t 277579 a 0 ind 277579
__local_296:
; gsym_addr t 277271 a 277615 ind 277615
; gtst finished; t 277579
; gjmp_addr 276601 at 277682
jmp.w __local_298
; gsym_addr t 277729 a 276601 ind 277729
__local_297:
; gsym_addr t 277579 a 277770 ind 277770
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 7 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x7
; st4 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 27
lda.b tcc__r0
sta 7 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 9 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #42
ldx #1
lda.b tcc__r1
sec
sbc #42
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 278761 ind 278761
; gsym_addr t 0 a 278802 ind 278802
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 278894 ind 278894
; cmp op 0x95 inv 1 v 243 r 278894
; cmp ne
bne +
; gsym_addr t 0 a 278987 ind 278987
brl __local_299
+
; gtst finished; t 278894
__local_303:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 279538 ind 279538
; gsym_addr t 0 a 279579 ind 279579
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 279671 ind 279671
; cmp op 0x95 inv 1 v 243 r 279671
; cmp ne
bne +
; gsym_addr t 0 a 279764 ind 279764
brl __local_300
+
; gtst finished; t 279671
; gtst inv 1 t 0 v 244 r 279844 ind 279844
; VT_jmp r 279844 t 0 ji 0 inv 1 vtop->c.i 279671
; gjmp_addr 0 at 279937
jmp.w __local_301
; gsym_addr t 279979 a 0 ind 279979
__local_300:
; gsym_addr t 279671 a 280015 ind 280015
; gtst finished; t 279979
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 279979 v 0 r 280267 ind 280267
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 279979 a 280464 ind 280464
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 279979 v 243 r 280561 ind 280561
; cmp op 0x95 inv 1 v 243 r 280561
; cmp ne
bne +
__local_301:
; gsym_addr t 279979 a 280659 ind 280659
brl __local_302
+
; gtst finished; t 280561
; gtst inv 1 t 0 v 245 r 280744 ind 280744
; VT_jmp r 280744 t 0 ji 1 inv 1 vtop->c.i 280561
; gsym_addr t 0 a 280837 ind 280837
; gtst finished; t 280561
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x490c3e
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 7 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x7
; st4 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 27
lda.b tcc__r0
sta 7 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 9 + __vsscanf_locals + 1,s
; gjmp_addr 279067 at 281523
jmp.w __local_303
; gsym_addr t 281570 a 279067 ind 281570
__local_302:
; gsym_addr t 280561 a 281611 ind 281611
; gsym_addr t 0 a 279067 ind 281652
__local_307:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 282162 ind 282162
; gsym_addr t 0 a 282203 ind 282203
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 282295 ind 282295
; cmp op 0x95 inv 1 v 243 r 282295
; cmp ne
bne +
; gsym_addr t 0 a 282388 ind 282388
brl __local_304
+
; gtst finished; t 282295
; gtst inv 1 t 0 v 244 r 282468 ind 282468
; VT_jmp r 282468 t 0 ji 0 inv 1 vtop->c.i 282295
; gjmp_addr 0 at 282561
jmp.w __local_305
; gsym_addr t 282603 a 0 ind 282603
__local_304:
; gsym_addr t 282295 a 282639 ind 282639
; gtst finished; t 282603
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 282603 v 0 r 282894 ind 282894
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 282603 a 283091 ind 283091
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 282603 v 243 r 283188 ind 283188
; cmp op 0x95 inv 1 v 243 r 283188
; cmp ne
bne +
__local_305:
; gsym_addr t 282603 a 283286 ind 283286
brl __local_306
+
; gtst finished; t 283188
; gtst inv 1 t 0 v 245 r 283371 ind 283371
; VT_jmp r 283371 t 0 ji 1 inv 1 vtop->c.i 283188
; gsym_addr t 0 a 283464 ind 283464
; gtst finished; t 283188
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x490c3e
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 16
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; gjmp_addr 281688 at 284164
jmp.w __local_307
; gsym_addr t 284211 a 281688 ind 284211
__local_306:
; gsym_addr t 283188 a 284252 ind 284252
; gsym_addr t 0 a 281688 ind 284293
; gjmp_addr 276725 at 284329
jmp.w __local_308
; gsym_addr t 284376 a 276725 ind 284376
__local_299:
; gsym_addr t 278894 a 284417 ind 284417
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 284929 ind 284929
; gsym_addr t 0 a 284970 ind 284970
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 285062 ind 285062
; cmp op 0x95 inv 1 v 243 r 285062
; cmp ne
bne +
; gsym_addr t 0 a 285155 ind 285155
brl __local_309
+
; gtst finished; t 285062
; ldpush before load type 0x4 reg 0xf2
; load 0
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + 7,tcc__r0 (fr 0xf2 ft 0x4 fc 0x7)
stz.b tcc__r0h
tsa
clc
adc #(7 + __vsscanf_locals + 1)
sta.b tcc__r0
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l tccs_skip_atoi
; add sp, #4
tsa
clc
adc #4
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff0
; st2 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -16 + __vsscanf_locals + 1,s
__local_309:
; gsym_addr t 285062 a 285711 ind 285711
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #-1,tcc__r0
lda.w #65535
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff4
; st2 tcc__r0, [sp,-12]
; stack adjust: fc + disp - loc 8
lda.b tcc__r0
sta -12 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #104
ldx #1
lda.b tcc__r1
sec
sbc #104
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 286433 ind 286433
; gsym_addr t 0 a 286474 ind 286474
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 286566 ind 286566
; cmp op 0x95 inv 0 v 243 r 286566
; cmp ne
beq +
; gsym_addr t 0 a 286659 ind 286659
brl __local_310
+
; gtst finished; t 286566
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #108
ldx #1
lda.b tcc__r1
sec
sbc #108
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 286566 v 5 r 287189 ind 287189
; gsym_addr t 286566 a 287235 ind 287235
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 286566 v 243 r 287332 ind 287332
; cmp op 0x95 inv 0 v 243 r 287332
; cmp ne
beq +
__local_310:
; gsym_addr t 286566 a 287430 ind 287430
brl __local_311
+
; gtst finished; t 287332
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #76
ldx #1
lda.b tcc__r1
sec
sbc #76
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 287332 v 5 r 287963 ind 287963
; gsym_addr t 287332 a 288009 ind 288009
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 287332 v 243 r 288106 ind 288106
; cmp op 0x95 inv 0 v 243 r 288106
; cmp ne
beq +
__local_311:
; gsym_addr t 287332 a 288204 ind 288204
brl __local_312
+
; gtst finished; t 288106
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #90
ldx #1
lda.b tcc__r1
sec
sbc #90
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 0 t 288106 v 5 r 288737 ind 288737
; gsym_addr t 288106 a 288783 ind 288783
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 288106 v 243 r 288880 ind 288880
; cmp op 0x95 inv 0 v 243 r 288880
; cmp ne
beq +
__local_312:
; gsym_addr t 288106 a 288978 ind 288978
brl __local_313
+
; gtst finished; t 288880
; gtst inv 1 t 0 v 244 r 289063 ind 289063
; VT_jmp r 289063 t 0 ji 0 inv 1 vtop->c.i 288880
; gjmp_addr 0 at 289156
jmp.w __local_314
; gsym_addr t 289198 a 0 ind 289198
__local_313:
; gsym_addr t 288880 a 289234 ind 289234
; gtst finished; t 289198
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; store r 0x1 fr 0x1f2 ft 0x0 fc 0xfffffff4
; st2 tcc__r1, [sp,-12]
; stack adjust: fc + disp - loc 8
lda.b tcc__r1
sta -12 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0xfffffff4
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 7 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x7
; st4 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 27
lda.b tcc__r0
sta 7 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 9 + __vsscanf_locals + 1,s
__local_314:
; gsym_addr t 289198 a 290412 ind 290412
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #10,tcc__r0
lda.w #10
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff2
; st2 tcc__r0, [sp,-14]
; stack adjust: fc + disp - loc 6
lda.b tcc__r0
sta -14 + __vsscanf_locals + 1,s
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffee
; st2 tcc__r0, [sp,-18]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -18 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 291092 ind 291092
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 291284 ind 291284
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 291376 ind 291376
; cmp op 0x95 inv 1 v 243 r 291376
; cmp ne
bne +
; gsym_addr t 0 a 291469 ind 291469
brl __local_315
+
; gtst finished; t 291376
; gtst inv 0 t 0 v 244 r 291549 ind 291549
; VT_jmp r 291549 t 0 ji 0 inv 0 vtop->c.i 291376
; gsym_addr t 0 a 291642 ind 291642
; gtst finished; t 291376
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 16
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 291892 ind 291892
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 292084 ind 292084
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 292176 ind 292176
; cmp op 0x95 inv 1 v 243 r 292176
; cmp ne
bne +
; gsym_addr t 0 a 292269 ind 292269
brl __local_316
+
; gtst finished; t 292176
; gtst inv 0 t 291376 v 244 r 292349 ind 292349
; VT_jmp r 292349 t 291376 ji 0 inv 0 vtop->c.i 292176
__local_315:
; gsym_addr t 291376 a 292452 ind 292452
; gtst finished; t 292176
; gtst inv 1 t 0 v 244 r 292519 ind 292519
; VT_jmp r 292519 t 0 ji 0 inv 1 vtop->c.i 292176
; gjmp_addr 0 at 292612
jmp.w __local_317
; gsym_addr t 292654 a 0 ind 292654
__local_316:
; gsym_addr t 292176 a 292690 ind 292690
; gtst finished; t 292654
; gjmp_addr 277729 at 292757
jmp.w __local_318
; gsym_addr t 292804 a 277729 ind 292804
__local_317:
; gsym_addr t 292654 a 292845 ind 292845
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 27
lda 7 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 9 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 7 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0x7
; st4 tcc__r0, [sp,7]
; stack adjust: fc + disp - loc 27
lda.b tcc__r0
sta 7 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 9 + __vsscanf_locals + 1,s
; load 0
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r0
; gjmp_addr 0 at 293656
jmp.w __local_319
; gsym_addr t 293698 a 0 ind 293698
; gjmp_addr 0 at 293734
jmp.w __local_320
; gsym_addr t 293776 a 0 ind 293776
__local_319:
; gsym_addr t 293698 a 293812 ind 293812
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #99
ldx #1
lda.b tcc__r0
sec
sbc #99
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 293965 ind 293965
; gsym_addr t 0 a 294006 ind 294006
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 294098 ind 294098
; cmp op 0x95 inv 1 v 243 r 294098
; cmp ne
bne +
; gsym_addr t 0 a 294191 ind 294191
brl __local_321
+
; gtst finished; t 294098
__local_320:
; gsym_addr t 293776 a 294271 ind 294271
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 37
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 37
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 37
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x47d7f
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffe8
; st4 tcc__r1, [sp,-24]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -24 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -22 + __vsscanf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 10
lda -16 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #-1
ldx #1
lda.b tcc__r0
sec
sbc #-1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 295797 ind 295797
; gsym_addr t 0 a 295838 ind 295838
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 295930 ind 295930
; cmp op 0x95 inv 1 v 243 r 295930
; cmp ne
bne +
; gsym_addr t 0 a 296023 ind 296023
brl __local_322
+
; gtst finished; t 295930
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff0
; st2 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 10
lda.b tcc__r0
sta -16 + __vsscanf_locals + 1,s
__local_322:
; gsym_addr t 295930 a 296330 ind 296330
__local_325:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-24],tcc__r0
; stack adjust: fc + disp - loc 2
lda -24 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -22 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -24 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffe8
; st4 tcc__r0, [sp,-24]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -24 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -22 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 22
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 2
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r2
lda.b tcc__r0
sta.b tcc__r2
lda.b tcc__r0h
sta.b tcc__r2h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 22
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; load 0
; type 1 reg 0x1102 extra 0x0
; ld1 [tcc__r2,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r2]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r0
; store r 0x0 fr 0x1101 ft 0x1 fc 0xffffffe8
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; gsym_addr t 0 a 297927 ind 297927
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 10
lda -16 + __vsscanf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -16 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff0
; st2 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 10
lda.b tcc__r0
sta -16 + __vsscanf_locals + 1,s
; gen_opi len 2 op 0x9f
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 298655 ind 298655
; gsym_addr t 0 a 298696 ind 298696
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 298788 ind 298788
; cmp op 0x95 inv 1 v 243 r 298788
; cmp ne
bne +
; gsym_addr t 0 a 298881 ind 298881
brl __local_323
+
; gtst finished; t 298788
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 22
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 298788 v 0 r 299149 ind 299149
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 298788 a 299346 ind 299346
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 298788 v 243 r 299443 ind 299443
; cmp op 0x95 inv 1 v 243 r 299443
; cmp ne
bne +
__local_323:
; gsym_addr t 298788 a 299541 ind 299541
brl __local_324
+
; gtst finished; t 299443
; gtst inv 0 t 0 v 245 r 299626 ind 299626
; VT_jmp r 299626 t 0 ji 1 inv 0 vtop->c.i 299443
; gjmp_addr 0 at 299719
jmp.w __local_325
; gsym_addr t 299761 a 0 ind 299761
__local_324:
; gsym_addr t 299443 a 299797 ind 299797
; gtst finished; t 299761
; gsym_addr t 299761 a 296371 ind 299864
; gsym_addr t 0 a 299905 ind 299905
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 16
lda -10 + __vsscanf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x745adfe0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -10 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff6
; st2 tcc__r0, [sp,-10]
; stack adjust: fc + disp - loc 16
lda.b tcc__r0
sta -10 + __vsscanf_locals + 1,s
; gjmp_addr 284376 at 300492
jmp.w __local_326
; gsym_addr t 300539 a 284376 ind 300539
; gjmp_addr 0 at 300580
jmp.w __local_327
; gsym_addr t 300622 a 0 ind 300622
__local_321:
; gsym_addr t 294098 a 300658 ind 300658
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #115
ldx #1
lda.b tcc__r0
sec
sbc #115
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 300813 ind 300813
; gsym_addr t 0 a 300854 ind 300854
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 300946 ind 300946
; cmp op 0x95 inv 1 v 243 r 300946
; cmp ne
bne +
; gsym_addr t 0 a 301039 ind 301039
brl __local_328
+
; gtst finished; t 300946
__local_327:
; gsym_addr t 300622 a 301119 ind 301119
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 41
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 41
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 41
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x4983f
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffe4
; st4 tcc__r1, [sp,-28]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -28 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -26 + __vsscanf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x94
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 14
lda -16 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #-1
ldx #1
lda.b tcc__r0
sec
sbc #-1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 302645 ind 302645
; gsym_addr t 0 a 302686 ind 302686
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 302778 ind 302778
; cmp op 0x95 inv 1 v 243 r 302778
; cmp ne
bne +
; gsym_addr t 0 a 302871 ind 302871
brl __local_329
+
; gtst finished; t 302778
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #32767,tcc__r0
lda.w #32767
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff0
; st2 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 14
lda.b tcc__r0
sta -16 + __vsscanf_locals + 1,s
__local_329:
; gsym_addr t 302778 a 303186 ind 303186
__local_331:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 26
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 303701 ind 303701
; gsym_addr t 0 a 303742 ind 303742
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 303834 ind 303834
; cmp op 0x95 inv 1 v 243 r 303834
; cmp ne
bne +
; gsym_addr t 0 a 303927 ind 303927
brl __local_330
+
; gtst finished; t 303834
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 26
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 26
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; gjmp_addr 303227 at 304640
jmp.w __local_331
; gsym_addr t 304687 a 303227 ind 304687
__local_330:
; gsym_addr t 303834 a 304728 ind 304728
; gsym_addr t 0 a 303227 ind 304769
__local_336:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 26
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 304993 ind 304993
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 305185 ind 305185
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 305277 ind 305277
; cmp op 0x95 inv 1 v 243 r 305277
; cmp ne
bne +
; gsym_addr t 0 a 305370 ind 305370
brl __local_332
+
; gtst finished; t 305277
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 26
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 305924 ind 305924
; gsym_addr t 0 a 305965 ind 305965
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 306057 ind 306057
; cmp op 0x95 inv 1 v 243 r 306057
; cmp ne
bne +
; gsym_addr t 0 a 306150 ind 306150
brl __local_333
+
; gtst finished; t 306057
; gtst inv 1 t 305277 v 244 r 306230 ind 306230
; VT_jmp r 306230 t 305277 ji 0 inv 1 vtop->c.i 306057
; gjmp_addr 305277 at 306333
jmp.w __local_334
; gsym_addr t 306380 a 305277 ind 306380
__local_333:
; gsym_addr t 306057 a 306421 ind 306421
; gtst finished; t 306380
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-16],tcc__r0
; stack adjust: fc + disp - loc 14
lda -16 + __vsscanf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x495300
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -16 r type 0x0)
; length xxy 2 vtop->type 0x0
dec.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff0
; st2 tcc__r0, [sp,-16]
; stack adjust: fc + disp - loc 14
lda.b tcc__r0
sta -16 + __vsscanf_locals + 1,s
; gtst inv 1 t 306380 v 1 r 307037 ind 307037
; gsym_addr t 306380 a 307083 ind 307083
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 306380 v 243 r 307180 ind 307180
; cmp op 0x95 inv 1 v 243 r 307180
; cmp ne
bne +
__local_332:
__local_334:
; gsym_addr t 306380 a 307278 ind 307278
brl __local_335
+
; gtst finished; t 307180
; gtst inv 1 t 0 v 245 r 307363 ind 307363
; VT_jmp r 307363 t 0 ji 1 inv 1 vtop->c.i 307180
; gsym_addr t 0 a 307456 ind 307456
; gtst finished; t 307180
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-28],tcc__r0
; stack adjust: fc + disp - loc 2
lda -28 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -26 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -28 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffe4
; st4 tcc__r0, [sp,-28]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -28 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -26 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 26
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 2
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r2
lda.b tcc__r0
sta.b tcc__r2
lda.b tcc__r0h
sta.b tcc__r2h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 26
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; load 0
; type 1 reg 0x1102 extra 0x0
; ld1 [tcc__r2,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r2]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r0
; store r 0x0 fr 0x1101 ft 0x1 fc 0xffffffe4
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; gjmp_addr 304805 at 309074
jmp.w __local_336
; gsym_addr t 309121 a 304805 ind 309121
__local_335:
; gsym_addr t 307180 a 309162 ind 309162
; gsym_addr t 0 a 304805 ind 309203
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-28],tcc__r0
; stack adjust: fc + disp - loc 2
lda -28 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -26 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0xf0 extra 0x0
; ld1 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x1100 ft 0x1 fc 0xffffffe4
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 20
lda -10 + __vsscanf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -10 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff6
; st2 tcc__r0, [sp,-10]
; stack adjust: fc + disp - loc 20
lda.b tcc__r0
sta -10 + __vsscanf_locals + 1,s
; gjmp_addr 300539 at 310170
jmp.w __local_337
; gsym_addr t 310217 a 300539 ind 310217
; gjmp_addr 0 at 310258
jmp.w __local_338
; gsym_addr t 310300 a 0 ind 310300
__local_328:
; gsym_addr t 300946 a 310336 ind 310336
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #110
ldx #1
lda.b tcc__r0
sec
sbc #110
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 310491 ind 310491
; gsym_addr t 0 a 310532 ind 310532
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 310624 ind 310624
; cmp op 0x95 inv 1 v 243 r 310624
; cmp ne
bne +
; gsym_addr t 0 a 310717 ind 310717
brl __local_339
+
; gtst finished; t 310624
__local_338:
; gsym_addr t 310300 a 310797 ind 310797
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 45
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 45
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 45
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x4be0d
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffe0
; st4 tcc__r1, [sp,-32]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -32 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -30 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-32],tcc__r0
; stack adjust: fc + disp - loc 2
lda -32 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -30 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 30
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; load 2
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r2
; stack adjust: fc + disp - loc 37
lda 3 + __vsscanf_locals + 1,s
sta.b tcc__r2
lda 5 + __vsscanf_locals + 1,s
sta.b tcc__r2h
; gen_opi len 4 op -
; sbc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x4 c -4 r type 0x0)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0xffffffe0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 310217 at 312893
jmp.w __local_340
; gsym_addr t 312940 a 310217 ind 312940
; gjmp_addr 0 at 312981
jmp.w __local_341
; gsym_addr t 313023 a 0 ind 313023
__local_339:
; gsym_addr t 310624 a 313059 ind 313059
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #111
ldx #1
lda.b tcc__r0
sec
sbc #111
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 313214 ind 313214
; gsym_addr t 0 a 313255 ind 313255
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 313347 ind 313347
; cmp op 0x95 inv 1 v 243 r 313347
; cmp ne
bne +
; gsym_addr t 0 a 313440 ind 313440
brl __local_342
+
; gtst finished; t 313347
__local_341:
; gsym_addr t 313023 a 313520 ind 313520
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #8,tcc__r0
lda.w #8
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff2
; st2 tcc__r0, [sp,-14]
; stack adjust: fc + disp - loc 20
lda.b tcc__r0
sta -14 + __vsscanf_locals + 1,s
; gjmp_addr 0 at 313788
jmp.w __local_343
; gsym_addr t 313830 a 0 ind 313830
; gjmp_addr 0 at 313866
jmp.w __local_344
; gsym_addr t 313908 a 0 ind 313908
__local_342:
; gsym_addr t 313347 a 313944 ind 313944
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #120
ldx #1
lda.b tcc__r0
sec
sbc #120
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 314099 ind 314099
; gsym_addr t 0 a 314140 ind 314140
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 314232 ind 314232
; cmp op 0x95 inv 1 v 243 r 314232
; cmp ne
bne +
; gsym_addr t 0 a 314325 ind 314325
brl __local_345
+
; gtst finished; t 314232
__local_344:
; gsym_addr t 313908 a 314405 ind 314405
; gjmp_addr 0 at 314446
jmp.w __local_346
; gsym_addr t 314488 a 0 ind 314488
__local_345:
; gsym_addr t 314232 a 314524 ind 314524
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #88
ldx #1
lda.b tcc__r0
sec
sbc #88
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 314677 ind 314677
; gsym_addr t 0 a 314718 ind 314718
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 314810 ind 314810
; cmp op 0x95 inv 1 v 243 r 314810
; cmp ne
bne +
; gsym_addr t 0 a 314903 ind 314903
brl __local_347
+
; gtst finished; t 314810
__local_346:
; gsym_addr t 314488 a 314983 ind 314983
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #16,tcc__r0
lda.w #16
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff2
; st2 tcc__r0, [sp,-14]
; stack adjust: fc + disp - loc 20
lda.b tcc__r0
sta -14 + __vsscanf_locals + 1,s
; gjmp_addr 313830 at 315253
jmp.w __local_348
; gsym_addr t 315300 a 313830 ind 315300
; gjmp_addr 0 at 315341
jmp.w __local_349
; gsym_addr t 315383 a 0 ind 315383
__local_347:
; gsym_addr t 314810 a 315419 ind 315419
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #100
ldx #1
lda.b tcc__r0
sec
sbc #100
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 315574 ind 315574
; gsym_addr t 0 a 315615 ind 315615
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 315707 ind 315707
; cmp op 0x95 inv 1 v 243 r 315707
; cmp ne
bne +
; gsym_addr t 0 a 315800 ind 315800
brl __local_350
+
; gtst finished; t 315707
__local_349:
; gsym_addr t 315383 a 315880 ind 315880
; gjmp_addr 0 at 315921
jmp.w __local_351
; gsym_addr t 315963 a 0 ind 315963
__local_350:
; gsym_addr t 315707 a 315999 ind 315999
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #105
ldx #1
lda.b tcc__r0
sec
sbc #105
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 316154 ind 316154
; gsym_addr t 0 a 316195 ind 316195
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 316287 ind 316287
; cmp op 0x95 inv 1 v 243 r 316287
; cmp ne
bne +
; gsym_addr t 0 a 316380 ind 316380
brl __local_352
+
; gtst finished; t 316287
__local_351:
; gsym_addr t 315963 a 316460 ind 316460
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xffffffee
; st2 tcc__r0, [sp,-18]
; stack adjust: fc + disp - loc 16
lda.b tcc__r0
sta -18 + __vsscanf_locals + 1,s
; gjmp_addr 0 at 316728
jmp.w __local_353
; gsym_addr t 316770 a 0 ind 316770
__local_352:
; gsym_addr t 316287 a 316806 ind 316806
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #117
ldx #1
lda.b tcc__r0
sec
sbc #117
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 316961 ind 316961
; gsym_addr t 0 a 317002 ind 317002
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 317094 ind 317094
; cmp op 0x95 inv 1 v 243 r 317094
; cmp ne
bne +
; gsym_addr t 0 a 317187 ind 317187
brl __local_354
+
; gtst finished; t 317094
__local_353:
; gsym_addr t 316770 a 317267 ind 317267
; gjmp_addr 315300 at 317308
jmp.w __local_355
; gsym_addr t 317355 a 315300 ind 317355
; gjmp_addr 0 at 317396
jmp.w __local_356
; gsym_addr t 317438 a 0 ind 317438
__local_354:
; gsym_addr t 317094 a 317474 ind 317474
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #37
ldx #1
lda.b tcc__r0
sec
sbc #37
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 317627 ind 317627
; gsym_addr t 0 a 317668 ind 317668
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 317760 ind 317760
; cmp op 0x95 inv 1 v 243 r 317760
; cmp ne
bne +
; gsym_addr t 0 a 317853 ind 317853
brl __local_357
+
; gtst finished; t 317760
__local_356:
; gsym_addr t 317438 a 317933 ind 317933
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 30
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x745ae3dc
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 30
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; load 0
; type 1 reg 0x1101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #37
ldx #1
lda.b tcc__r0
sec
sbc #37
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 318877 ind 318877
; gsym_addr t 0 a 318918 ind 318918
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 319010 ind 319010
; cmp op 0x95 inv 1 v 243 r 319010
; cmp ne
bne +
; gsym_addr t 0 a 319103 ind 319103
brl __local_358
+
; gtst finished; t 319010
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 24
lda -10 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gjmp_addr 0 at 319326
jmp.w __local_359
; gsym_addr t 319368 a 0 ind 319368
__local_358:
; gsym_addr t 319010 a 319404 ind 319404
; gjmp_addr 312940 at 319445
jmp.w __local_360
; gsym_addr t 319492 a 312940 ind 319492
__local_357:
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 24
lda -10 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gjmp_addr 319368 at 319676
jmp.w __local_361
; gsym_addr t 319723 a 319368 ind 319723
; gsym_addr t 317760 a 319533 ind 319764
__local_343:
__local_348:
__local_355:
; gsym_addr t 317355 a 319805 ind 319805
__local_363:
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 30
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isspace
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 320320 ind 320320
; gsym_addr t 0 a 320361 ind 320361
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 320453 ind 320453
; cmp op 0x95 inv 1 v 243 r 320453
; cmp ne
bne +
; gsym_addr t 0 a 320546 ind 320546
brl __local_362
+
; gtst finished; t 320453
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 30
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c -4 r type 0x4)
; length xxy 4 vtop->type 0x4
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 30
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; gjmp_addr 319846 at 321259
jmp.w __local_363
; gsym_addr t 321306 a 319846 ind 321306
__local_362:
; gsym_addr t 320453 a 321347 ind 321347
; gsym_addr t 0 a 319846 ind 321388
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 30
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gtst inv 1 t 0 v 0 r 321612 ind 321612
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; gsym_addr t 0 a 321804 ind 321804
; tcc__r1 to compare reg
lda.b tcc__r1 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 321896 ind 321896
; cmp op 0x95 inv 1 v 243 r 321896
; cmp ne
bne +
; gsym_addr t 0 a 321989 ind 321989
brl __local_364
+
; gtst finished; t 321896
; gtst inv 0 t 0 v 244 r 322069 ind 322069
; VT_jmp r 322069 t 0 ji 0 inv 0 vtop->c.i 321896
; gsym_addr t 0 a 322162 ind 322162
; gtst finished; t 321896
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 30
lda -4 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; load 1
; type 1 reg 0x1100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; ldpush before load type 0x0 reg 0x1
; ldpush2 (type 0x0 reg 0x1) tcc__r1
pei (tcc__r1)
; call r 0x2f0
jsr.l isdigit
; add sp, #2
pla
; gtst inv 1 t 0 v 0 r 322698 ind 322698
; gsym_addr t 0 a 322739 ind 322739
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 322831 ind 322831
; cmp op 0x95 inv 1 v 243 r 322831
; cmp ne
bne +
; gsym_addr t 0 a 322924 ind 322924
brl __local_365
+
; gtst finished; t 322831
; gtst inv 0 t 321896 v 244 r 323004 ind 323004
; VT_jmp r 323004 t 321896 ji 0 inv 0 vtop->c.i 322831
__local_364:
; gsym_addr t 321896 a 323107 ind 323107
; gtst finished; t 322831
; gtst inv 1 t 0 v 244 r 323174 ind 323174
; VT_jmp r 323174 t 0 ji 0 inv 1 vtop->c.i 322831
; gjmp_addr 0 at 323267
jmp.w __local_366
; gsym_addr t 323309 a 0 ind 323309
__local_365:
; gsym_addr t 322831 a 323345 ind 323345
; gtst finished; t 323309
; gjmp_addr 292804 at 323412
jmp.w __local_367
; gsym_addr t 323459 a 292804 ind 323459
__local_366:
; gsym_addr t 323309 a 323500 ind 323500
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-12],tcc__r0
; stack adjust: fc + disp - loc 22
lda -12 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gjmp_addr 0 at 323684
jmp.w __local_368
; gsym_addr t 323726 a 0 ind 323726
; gjmp_addr 0 at 323762
jmp.w __local_369
; gsym_addr t 323804 a 0 ind 323804
__local_368:
; gsym_addr t 323726 a 323840 ind 323840
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #104
ldx #1
lda.b tcc__r0
sec
sbc #104
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 323995 ind 323995
; gsym_addr t 0 a 324036 ind 324036
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 324128 ind 324128
; cmp op 0x95 inv 1 v 243 r 324128
; cmp ne
bne +
; gsym_addr t 0 a 324221 ind 324221
brl __local_370
+
; gtst finished; t 324128
__local_369:
; gsym_addr t 323804 a 324301 ind 324301
; gtst inv 1 t 0 v 242 r 324342 ind 324342
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-18],tcc__r0
; stack adjust: fc + disp - loc 16
lda -18 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gsym_addr t 0 a 324528 ind 324528
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 324620 ind 324620
; cmp op 0x95 inv 1 v 243 r 324620
; cmp ne
bne +
; gsym_addr t 0 a 324713 ind 324713
brl __local_371
+
; gtst finished; t 324620
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 49
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 49
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 49
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0xf3
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffdc
; st4 tcc__r1, [sp,-36]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -36 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -34 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-36],tcc__r0
; stack adjust: fc + disp - loc 2
lda -36 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -34 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x6e696665
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 24
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x64656e69
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 40
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffd8
; st4 tcc__r0, [sp,-40]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -30 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -28 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtol
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-40],tcc__r1
; stack adjust: fc + disp - loc 2
lda -40 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -38 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x0 fc 0xffffffd8
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 0 at 327592
jmp.w __local_372
; gsym_addr t 327634 a 0 ind 327634
__local_371:
; gsym_addr t 324620 a 327670 ind 327670
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 57
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 57
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 57
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x4fff6
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffd4
; st4 tcc__r1, [sp,-44]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -44 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -42 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-44],tcc__r0
; stack adjust: fc + disp - loc 2
lda -44 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -42 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 32
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 48
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffd0
; st4 tcc__r0, [sp,-48]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -38 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -36 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtoul
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-48],tcc__r1
; stack adjust: fc + disp - loc 2
lda -48 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -46 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x10 fc 0xffffffd0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
__local_372:
; gsym_addr t 327634 a 330501 ind 330501
; gjmp_addr 0 at 330542
jmp.w __local_373
; gsym_addr t 330584 a 0 ind 330584
; gjmp_addr 0 at 330620
jmp.w __local_374
; gsym_addr t 330662 a 0 ind 330662
__local_370:
; gsym_addr t 324128 a 330698 ind 330698
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #108
ldx #1
lda.b tcc__r0
sec
sbc #108
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 330853 ind 330853
; gsym_addr t 0 a 330894 ind 330894
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 330986 ind 330986
; cmp op 0x95 inv 1 v 243 r 330986
; cmp ne
bne +
; gsym_addr t 0 a 331079 ind 331079
brl __local_375
+
; gtst finished; t 330986
__local_374:
; gsym_addr t 330662 a 331159 ind 331159
; gtst inv 1 t 0 v 242 r 331200 ind 331200
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-18],tcc__r0
; stack adjust: fc + disp - loc 32
lda -18 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gsym_addr t 0 a 331386 ind 331386
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 331478 ind 331478
; cmp op 0x95 inv 1 v 243 r 331478
; cmp ne
bne +
; gsym_addr t 0 a 331571 ind 331571
brl __local_376
+
; gtst finished; t 331478
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 65
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 65
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 65
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0xf3
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffcc
; st4 tcc__r1, [sp,-52]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -52 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -50 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-52],tcc__r0
; stack adjust: fc + disp - loc 2
lda -52 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -50 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x6e696665
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 40
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x64656e69
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 56
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffc8
; st4 tcc__r0, [sp,-56]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -46 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -44 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtol
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-56],tcc__r1
; stack adjust: fc + disp - loc 2
lda -56 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -54 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x0 fc 0xffffffc8
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 0 at 334450
jmp.w __local_377
; gsym_addr t 334492 a 0 ind 334492
__local_376:
; gsym_addr t 331478 a 334528 ind 334528
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 73
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 73
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 73
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x51ac0
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffc4
; st4 tcc__r1, [sp,-60]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -60 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -58 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-60],tcc__r0
; stack adjust: fc + disp - loc 2
lda -60 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -58 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 48
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 64
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffc0
; st4 tcc__r0, [sp,-64]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -54 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -52 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtoul
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-64],tcc__r1
; stack adjust: fc + disp - loc 2
lda -64 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -62 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x10 fc 0xffffffc0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
__local_377:
; gsym_addr t 334492 a 337359 ind 337359
; gjmp_addr 330584 at 337400
jmp.w __local_378
; gsym_addr t 337447 a 330584 ind 337447
; gjmp_addr 0 at 337488
jmp.w __local_379
; gsym_addr t 337530 a 0 ind 337530
__local_375:
; gsym_addr t 330986 a 337566 ind 337566
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #76
ldx #1
lda.b tcc__r0
sec
sbc #76
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 337719 ind 337719
; gsym_addr t 0 a 337760 ind 337760
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 337852 ind 337852
; cmp op 0x95 inv 1 v 243 r 337852
; cmp ne
bne +
; gsym_addr t 0 a 337945 ind 337945
brl __local_380
+
; gtst finished; t 337852
__local_379:
; gsym_addr t 337530 a 338025 ind 338025
; gtst inv 1 t 0 v 242 r 338066 ind 338066
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-18],tcc__r0
; stack adjust: fc + disp - loc 48
lda -18 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gsym_addr t 0 a 338252 ind 338252
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 338344 ind 338344
; cmp op 0x95 inv 1 v 243 r 338344
; cmp ne
bne +
; gsym_addr t 0 a 338437 ind 338437
brl __local_381
+
; gtst finished; t 338344
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 81
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 81
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 81
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0xf3
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffbc
; st4 tcc__r1, [sp,-68]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -68 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -66 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-68],tcc__r0
; stack adjust: fc + disp - loc 2
lda -68 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -66 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 56
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 72
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffb8
; st4 tcc__r0, [sp,-72]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -62 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -60 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtoll
; add sp, #10
tsa
clc
adc #10
tas
; load 2
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-72],tcc__r2
; stack adjust: fc + disp - loc 2
lda -72 + __vsscanf_locals + 1,s
sta.b tcc__r2
lda -70 + __vsscanf_locals + 1,s
sta.b tcc__r2h
; store r 0x0 fr 0x102 ft 0xc fc 0xffffffb8
; st2 tcc__r0, [tcc__r2,0]
lda.b tcc__r0
sta.b [tcc__r2]
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r2 (0x2) (fr type 0x0 c -72 r type 0xc)
; length xxy 2 vtop->type 0x0
inc.b tcc__r2
inc.b tcc__r2
; store r 0x1 fr 0x102 ft 0x0 fc 0xffffffb8
; st2 tcc__r1, [tcc__r2,0]
lda.b tcc__r1
sta.b [tcc__r2]
; gjmp_addr 0 at 341552
jmp.w __local_382
; gsym_addr t 341594 a 0 ind 341594
__local_381:
; gsym_addr t 338344 a 341630 ind 341630
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 89
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 89
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 89
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x5367e
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffb4
; st4 tcc__r1, [sp,-76]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -76 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -74 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-76],tcc__r0
; stack adjust: fc + disp - loc 2
lda -76 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -74 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 64
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x46464944
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 80
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffb0
; st4 tcc__r0, [sp,-80]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -70 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -68 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtoull
; add sp, #10
tsa
clc
adc #10
tas
; load 2
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-80],tcc__r2
; stack adjust: fc + disp - loc 2
lda -80 + __vsscanf_locals + 1,s
sta.b tcc__r2
lda -78 + __vsscanf_locals + 1,s
sta.b tcc__r2h
; store r 0x0 fr 0x102 ft 0x1c fc 0xffffffb0
; st2 tcc__r0, [tcc__r2,0]
lda.b tcc__r0
sta.b [tcc__r2]
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r2 (0x2) (fr type 0x0 c -80 r type 0x1c)
; length xxy 2 vtop->type 0x0
inc.b tcc__r2
inc.b tcc__r2
; store r 0x1 fr 0x102 ft 0x0 fc 0xffffffb0
; st2 tcc__r1, [tcc__r2,0]
lda.b tcc__r1
sta.b [tcc__r2]
__local_382:
; gsym_addr t 341594 a 344719 ind 344719
; gjmp_addr 337447 at 344760
jmp.w __local_383
; gsym_addr t 344807 a 337447 ind 344807
; gjmp_addr 0 at 344848
jmp.w __local_384
; gsym_addr t 344890 a 0 ind 344890
__local_380:
; gsym_addr t 337852 a 344926 ind 344926
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #90
ldx #1
lda.b tcc__r0
sec
sbc #90
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 345079 ind 345079
; gsym_addr t 0 a 345120 ind 345120
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 345212 ind 345212
; cmp op 0x95 inv 1 v 243 r 345212
; cmp ne
bne +
; gsym_addr t 0 a 345305 ind 345305
brl __local_385
+
; gtst finished; t 345212
__local_384:
; gsym_addr t 344890 a 345385 ind 345385
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 97
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 97
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 97
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x54529
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffac
; st4 tcc__r1, [sp,-84]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -84 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -82 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-84],tcc__r0
; stack adjust: fc + disp - loc 2
lda -84 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -82 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 72
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 88
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffa8
; st4 tcc__r0, [sp,-88]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -78 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -76 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtoul
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-88],tcc__r1
; stack adjust: fc + disp - loc 2
lda -88 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -86 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x10 fc 0xffffffa8
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 344807 at 348216
jmp.w __local_386
; gsym_addr t 348263 a 344807 ind 348263
__local_385:
; gtst inv 1 t 0 v 242 r 348304 ind 348304
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-18],tcc__r0
; stack adjust: fc + disp - loc 72
lda -18 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gsym_addr t 0 a 348490 ind 348490
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 348582 ind 348582
; cmp op 0x95 inv 1 v 243 r 348582
; cmp ne
bne +
; gsym_addr t 0 a 348675 ind 348675
brl __local_387
+
; gtst finished; t 348582
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 105
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 105
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 105
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0xf3
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffffa4
; st4 tcc__r1, [sp,-92]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -92 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -90 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-92],tcc__r0
; stack adjust: fc + disp - loc 2
lda -92 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -90 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x6e696665
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 80
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x64656e69
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 96
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffffa0
; st4 tcc__r0, [sp,-96]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -86 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -84 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtol
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-96],tcc__r1
; stack adjust: fc + disp - loc 2
lda -96 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -94 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x0 fc 0xffffffa0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; gjmp_addr 0 at 351557
jmp.w __local_388
; gsym_addr t 351599 a 0 ind 351599
__local_387:
; gsym_addr t 348582 a 351635 ind 351635
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 113
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xb
; st4 tcc__r0, [sp,11]
; stack adjust: fc + disp - loc 113
lda.b tcc__r0
sta 11 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta 13 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,11],tcc__r0
; stack adjust: fc + disp - loc 113
lda 11 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 11 r type 0x6)
; length xxy 4 vtop->type 0x4
sec
lda.b tcc__r0
sbc.w #4
sta.b tcc__r0
; load 1
; type 4 reg 0x100 extra 0x55d93
; ld4 [tcc__r0,0],tcc__r1
ldy #0
lda.b [tcc__r0],y
sta.b tcc__r1
iny
iny
lda.b [tcc__r0],y
sta.b tcc__r1h
; store r 0x1 fr 0x1f2 ft 0x4 fc 0xffffff9c
; st4 tcc__r1, [sp,-100]
; stack adjust: fc + disp - loc 2
lda.b tcc__r1
sta -100 + __vsscanf_locals + 1,s
lda.b tcc__r1h
sta -98 + __vsscanf_locals + 1,s
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-100],tcc__r0
; stack adjust: fc + disp - loc 2
lda -100 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -98 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,-14],tcc__r1
; stack adjust: fc + disp - loc 88
lda -14 + __vsscanf_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x4 reg 0xf2
; load 1
; type 4 reg 0xf2 extra 0x0
; ld4 #(sp) + -8,tcc__r1 (fr 0xf2 ft 0x4 fc 0xfffffff8)
stz.b tcc__r1h
tsa
clc
adc #(-6 + __vsscanf_locals + 1)
sta.b tcc__r1
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; ldpush before load type 0x4 reg 0x1f2
; load 1
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r1
; stack adjust: fc + disp - loc 104
lda 2 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda 4 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; ldpush4 (type 0x4 reg 0x1) tcc__r1
pei (tcc__r1h)
pei (tcc__r1)
; saveregging
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xffffff98
; st4 tcc__r0, [sp,-104]
; stack adjust: fc + disp - loc 12
lda.b tcc__r0
sta -94 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -92 + __vsscanf_locals + 1,s
; call r 0x2f0
jsr.l strtoul
; add sp, #10
tsa
clc
adc #10
tas
; load 1
; type 4 reg 0x1f2 extra 0x745ae3e0
; ld4 [sp,-104],tcc__r1
; stack adjust: fc + disp - loc 2
lda -104 + __vsscanf_locals + 1,s
sta.b tcc__r1
lda -102 + __vsscanf_locals + 1,s
sta.b tcc__r1h
; store r 0x0 fr 0x101 ft 0x10 fc 0xffffff98
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
__local_388:
; gsym_addr t 351599 a 354478 ind 354478
; gjmp_addr 348263 at 354519
jmp.w __local_389
; gsym_addr t 354566 a 348263 ind 354566
; gsym_addr t 345212 a 348304 ind 354607
__local_373:
__local_378:
__local_383:
__local_386:
__local_389:
; gsym_addr t 354566 a 354648 ind 354648
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 96
lda -10 + __vsscanf_locals + 1,s
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x745ae2a0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c -10 r type 0x0)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffff6
; st2 tcc__r0, [sp,-10]
; stack adjust: fc + disp - loc 96
lda.b tcc__r0
sta -10 + __vsscanf_locals + 1,s
; gtst inv 1 t 0 v 242 r 355240 ind 355240
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 98
lda -8 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -6 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; gsym_addr t 0 a 355471 ind 355471
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 355563 ind 355563
; cmp op 0x95 inv 1 v 243 r 355563
; cmp ne
bne +
; gsym_addr t 0 a 355656 ind 355656
brl __local_390
+
; gtst finished; t 355563
; gtst inv 1 t 0 v 244 r 355736 ind 355736
; VT_jmp r 355736 t 0 ji 0 inv 1 vtop->c.i 355563
; gjmp_addr 0 at 355829
jmp.w __local_391
; gsym_addr t 355871 a 0 ind 355871
__local_390:
; gsym_addr t 355563 a 355907 ind 355907
; gtst finished; t 355871
; gjmp_addr 323459 at 355974
jmp.w __local_392
; gsym_addr t 356021 a 323459 ind 356021
__local_391:
; gsym_addr t 355871 a 356062 ind 356062
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-8],tcc__r0
; stack adjust: fc + disp - loc 98
lda -8 + __vsscanf_locals + 1,s
sta.b tcc__r0
lda -6 + __vsscanf_locals + 1,s
sta.b tcc__r0h
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 102
lda.b tcc__r0
sta -4 + __vsscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __vsscanf_locals + 1,s
; gjmp_addr 267816 at 356487
jmp.w __local_393
; gsym_addr t 356534 a 267816 ind 356534
__local_285:
__local_294:
__local_298:
__local_318:
__local_367:
__local_392:
; gsym_addr t 356021 a 356575 ind 356575
; gsym_addr t 319492 a 267816 ind 356616
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-10],tcc__r0
; stack adjust: fc + disp - loc 96
lda -10 + __vsscanf_locals + 1,s
sta.b tcc__r0
; gjmp_addr 319723 at 356800
jmp.w __local_394
; gsym_addr t 356847 a 319723 ind 356847
__local_359:
__local_361:
__local_394:
; gsym_addr t 356847 a 356888 ind 356888
; add sp, #__vsscanf_locals
.ifgr __vsscanf_locals 0
tsa
clc
adc #__vsscanf_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x16" SUPERFREE

sscanf:
; sub sp,#__sscanf_locals
.ifgr __sscanf_locals 0
tsa
sec
sbc #__sscanf_locals
tas
.endif
; load 0
; type 4 reg 0x10f2 extra 0x0
; ld4 #(sp) + 11,tcc__r0 (fr 0x10f2 ft 0x4 fc 0xb)
stz.b tcc__r0h
tsa
clc
adc #(11 + __sscanf_locals + 1)
sta.b tcc__r0
; store r 0x0 fr 0x1f2 ft 0x4 fc 0xfffffffc
; st4 tcc__r0, [sp,-4]
; stack adjust: fc + disp - loc 4
lda.b tcc__r0
sta -4 + __sscanf_locals + 1,s
lda.b tcc__r0h
sta -2 + __sscanf_locals + 1,s
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,-4],tcc__r0
; stack adjust: fc + disp - loc 4
lda -4 + __sscanf_locals + 1,s
sta.b tcc__r0
lda -2 + __sscanf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 19
lda 11 + __sscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __sscanf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; ldpush before load type 0x4 reg 0x1f2
; load 0
; type 4 reg 0x1f2 extra 0x0
; ld4 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 19
lda 11 + __sscanf_locals + 1,s
sta.b tcc__r0
lda 13 + __sscanf_locals + 1,s
sta.b tcc__r0h
; ldpush4 (type 0x4 reg 0x0) tcc__r0
pei (tcc__r0h)
pei (tcc__r0)
; call r 0x2f0
jsr.l vsscanf
; add sp, #12
tsa
clc
adc #12
tas
; store r 0x0 fr 0x1f2 ft 0x0 fc 0xfffffffa
; st2 tcc__r0, [sp,-6]
; stack adjust: fc + disp - loc 2
lda.b tcc__r0
sta -6 + __sscanf_locals + 1,s
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,-6],tcc__r0
; stack adjust: fc + disp - loc 2
lda -6 + __sscanf_locals + 1,s
sta.b tcc__r0
; gjmp_addr 0 at 358737
jmp.w __local_395
; gsym_addr t 358779 a 0 ind 358779
__local_395:
; gsym_addr t 358779 a 358815 ind 358815
; add sp, #__sscanf_locals
.ifgr __sscanf_locals 0
tsa
clc
adc #__sscanf_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ram.data" APPENDTO "globram.data"
__local_dummy.data dsb 1

.ENDS

.SECTION ".data" APPENDTO "glob.data"

__local_dummy.data: .db 0
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.2: .db $3c,$4e,$55,$4c,$4c,$3e,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
tccs_msys dsb 8
.ENDS
