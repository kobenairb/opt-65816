.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __main_locals 0

.SECTION ".text_0x0" SUPERFREE

main:
; sub sp,#__main_locals
.ifgr __main_locals 0
tsa
sec
sbc #__main_locals
tas
.endif
; call r 0x2f0
jsr.l consoleMesenBreakpoint
; call r 0x2f0
jsr.l consoleInit
; call r 0x2f0
jsr.l consoleMesenBreakpoint
; push2 imm r 0xf0
pea.w 26624
; call r 0x2f0
jsr.l consoleSetTextVramBGAdr
; add sp, #2
pla
; push2 imm r 0xf0
pea.w 12288
; call r 0x2f0
jsr.l consoleSetTextVramAdr
; add sp, #2
pla
; push2 imm r 0xf0
pea.w 256
; call r 0x2f0
jsr.l consoleSetTextOffset
; add sp, #2
pla
; push4 imm r 0x12f0
pea.w :palfont
pea.w palfont + 0
; push4 imm r 0x12f0
pea.w :tilfont
pea.w tilfont + 0
; push1 imm r 0xf0
sep #$20
lda #32
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l consoleInitText
; add sp, #10
tsa
clc
adc #10
tas
; call r 0x2f0
jsr.l consoleMesenBreakpoint
; push2 imm r 0xf0
pea.w 8192
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l bgSetGfxPtr
; add sp, #3
tsa
clc
adc #3
tas
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push2 imm r 0xf0
pea.w 26624
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l bgSetMapPtr
; add sp, #4
tsa
clc
adc #4
tas
; call r 0x2f0
jsr.l consoleMesenBreakpoint
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l setMode
; add sp, #2
pla
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l bgSetDisable
; add sp, #1
tsa
clc
adc #1
tas
; push1 imm r 0xf0
sep #$20
lda #2
pha
rep #$20
; call r 0x2f0
jsr.l bgSetDisable
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l consoleMesenBreakpoint
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileWhJrWR8
pea.w tccs_L.tmpxfileWhJrWR8 + 0
; push2 imm r 0xf0
pea.w 10
; push2 imm r 0xf0
pea.w 10
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileWhJrWR9
pea.w tccs_L.tmpxfileWhJrWR9 + 0
; push2 imm r 0xf0
pea.w 14
; push2 imm r 0xf0
pea.w 6
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileWhJrWR10
pea.w tccs_L.tmpxfileWhJrWR10 + 0
; push2 imm r 0xf0
pea.w 15
; push2 imm r 0xf0
pea.w 7
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileWhJrWR11
pea.w tccs_L.tmpxfileWhJrWR11 + 0
; push2 imm r 0xf0
pea.w 18
; push2 imm r 0xf0
pea.w 5
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileWhJrWR12
pea.w tccs_L.tmpxfileWhJrWR12 + 0
; push2 imm r 0xf0
pea.w 19
; push2 imm r 0xf0
pea.w 8
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; call r 0x2f0
jsr.l setScreenOn
__local_0:
; gtst inv 1 t 0 v 240 r 2704 ind 2704
; uncond jump: nop
; gtst finished; t 0
; call r 0x2f0
jsr.l consoleMesenBreakpoint
; call r 0x2f0
jsr.l WaitForVBlank
; gjmp_addr 2704 at 2862
jmp.w __local_0
; gsym_addr t 2903 a 2704 ind 2903
; gsym_addr t 0 a 2938 ind 2938
; gsym_addr t 0 a 2704 ind 2970
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 0 at 3079
jmp.w __local_1
; gsym_addr t 3117 a 0 ind 3117
__local_1:
; gsym_addr t 3117 a 3149 ind 3149
; add sp, #__main_locals
.ifgr __main_locals 0
tsa
clc
adc #__main_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ramtmpxfileWhJrWR.data" APPENDTO "globram.data"
__local_dummytmpxfileWhJrWR.data dsb 1

.ENDS

.SECTION "tmpxfileWhJrWR.data" APPENDTO "glob.data"

__local_dummytmpxfileWhJrWR.data: .db 0
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.tmpxfileWhJrWR8: .db $42,$72,$65,$61,$6b,$70,$6f,$69,$6e,$74,$73,$21,$0
tccs_L.tmpxfileWhJrWR9: .db $50,$72,$65,$73,$73,$20,$43,$74,$72,$6c,$2b,$44,$20,$74,$6f,$20,$6f,$70,$65,$6e,$0
tccs_L.tmpxfileWhJrWR10: .db $74,$68,$65,$20,$4d,$65,$73,$65,$6e,$20,$64,$65,$62,$75,$67,$67,$65,$72,$2e,$0
tccs_L.tmpxfileWhJrWR11: .db $4d,$61,$6b,$65,$20,$73,$75,$72,$65,$20,$27,$42,$72,$65,$61,$6b,$20,$6f,$6e,$2e,$2e,$2e,$27,$0
tccs_L.tmpxfileWhJrWR12: .db $57,$44,$4d,$20,$69,$73,$20,$63,$68,$65,$63,$6b,$65,$64,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
__local_dummybss dsb 1
.ENDS
