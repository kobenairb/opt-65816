.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __marioinit_locals 0
.define __mariowalk_locals 0
.define __mariofall_locals 0
.define __mariojump_locals 0
.define __marioupdate_locals 0
.define __main_locals 0

.SECTION ".text_0x0" SUPERFREE

marioinit:
; sub sp,#__marioinit_locals
.ifgr __marioinit_locals 0
tsa
sec
sbc #__marioinit_locals
tas
.endif
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x8579018
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x8579018
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileyPyexc9
pea.w tccs_L.tmpxfileyPyexc9 + 0
; call r 0x2f0
jsr.l consoleNocashMessage
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0x1f2 extra 0xffce05a0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 9
lda 7 + __marioinit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 7 r type 0x86)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #255
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x11 reg 0x0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l objNew
; add sp, #5
tsa
clc
adc #5
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 1845 ind 1845
; gsym_addr t 0 a 1882 ind 1882
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 2001 ind 2001
; cmp op 0x95 inv 1 v 243 r 2001
; cmp ne
bne +
; gsym_addr t 0 a 2088 ind 2088
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 2001
; gjmp_addr 0 at 2191
jmp.w __local_1
; gsym_addr t 2229 a 0 ind 2229
__local_0:
; gsym_addr t 2001 a 2261 ind 2261
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objgetid + 0], tcc__r0
lda.l objgetid + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objGetPointer
; add sp, #2
pla
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objptr + 0], tcc__r0
lda.l objptr + 0
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
dec.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld4096 #objbuffers + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:objbuffers
sta.b tcc__r1h
lda.w #objbuffers + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x4)
; length xxy 4096 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r1, [marioobj,0]
lda.b tcc__r1
sta.l marioobj + 0
lda.b tcc__r1h
sta.l marioobj + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #26
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #28
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioox,0]
lda.b tcc__r0
sta.l marioox + 0
lda.b tcc__r0h
sta.l marioox + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #19
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [mariooy,0]
lda.b tcc__r0
sta.l mariooy + 0
lda.b tcc__r0h
sta.l mariooy + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioxv,0]
lda.b tcc__r0
sta.l marioxv + 0
lda.b tcc__r0h
sta.l marioxv + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #36
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioyv,0]
lda.b tcc__r0
sta.l marioyv + 0
lda.b tcc__r0h
sta.l marioyv + 0 + 2
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #6,tcc__r0
lda.w #6
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [oambuffer,4]
lda.b tcc__r0
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #96,tcc__r0
lda.w #96
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x6
; st1 tcc__r0, [oambuffer,6]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 6
rep #$20
; load 0
; type 4 reg 0x12f0 extra 0x0
; ld4 #mariogfx + 0, tcc__r0 (type 0x4)
lda.w #:mariogfx
sta.b tcc__r0h
lda.w #mariogfx + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x8
; st4 tcc__r0, [oambuffer,8]
lda.b tcc__r0
sta.l oambuffer + 8
lda.b tcc__r0h
sta.l oambuffer + 8 + 2
; push2 imm r 0xf0
pea.w 32
; push2 imm r 0xf0
pea.w 128
; push4 imm r 0x12f0
pea.w :mariopal
pea.w mariopal + 0
; call r 0x2f0
jsr.l dmaCopyCGram
; add sp, #8
tsa
clc
adc #8
tas
__local_1:
; gsym_addr t 2229 a 8227 ind 8227
; add sp, #__marioinit_locals
.ifgr __marioinit_locals 0
tsa
clc
adc #__marioinit_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x1" SUPERFREE

mariowalk:
; sub sp,#__mariowalk_locals
.ifgr __mariowalk_locals 0
tsa
sec
sbc #__mariowalk_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [flip + 0], tcc__r0
lda.w #0
sep #$20
lda.l flip + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x8570010
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [flip,0]
sep #$20
lda.b tcc__r0
sta.l flip + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [flip + 0], tcc__r0
lda.w #0
sep #$20
lda.l flip + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #3
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc #3
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 9396 ind 9396
; gsym_addr t 0 a 9433 ind 9433
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 9521 ind 9521
; cmp op 0x95 inv 1 v 243 r 9521
; cmp ne
bne +
; gsym_addr t 0 a 9608 ind 9608
brl __local_2
+
; gtst finished; t 9521
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r0
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0xffffffff
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r0
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [marioflp + 0], tcc__r0
lda.w #0
sep #$20
lda.l marioflp + 0
rep #$20
sta.b tcc__r0
; load 1
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r1
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x10)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [oambuffer,4]
lda.b tcc__r0
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
__local_2:
; gsym_addr t 9521 a 11326 ind 11326
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x95
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 11704 ind 11704
; gsym_addr t 0 a 11743 ind 11743
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 11833 ind 11833
; cmp op 0x95 inv 1 v 243 r 11833
; cmp ne
bne +
; gsym_addr t 0 a 11923 ind 11923
brl __local_3
+
; gtst finished; t 11833
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #4,tcc__r1
lda.w #4
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 12470
jmp.w __local_4
; gsym_addr t 12509 a 0 ind 12509
__local_3:
; gsym_addr t 11833 a 12543 ind 12543
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 12922 ind 12922
; gsym_addr t 0 a 12961 ind 12961
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 13051 ind 13051
; cmp op 0x95 inv 1 v 243 r 13051
; cmp ne
bne +
; gsym_addr t 0 a 13141 ind 13141
brl __local_5
+
; gtst finished; t 13051
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 13051 v 5 r 13557 ind 13557
; gsym_addr t 13051 a 13600 ind 13600
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 13051 v 243 r 13694 ind 13694
; cmp op 0x95 inv 1 v 243 r 13694
; cmp ne
bne +
__local_5:
; gsym_addr t 13051 a 13788 ind 13788
brl __local_6
+
; gtst finished; t 13694
; gtst inv 1 t 0 v 245 r 13867 ind 13867
; VT_jmp r 13867 t 0 ji 1 inv 1 vtop->c.i 13694
; gsym_addr t 0 a 13956 ind 13956
; gtst finished; t 13694
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_6:
; gsym_addr t 13694 a 14487 ind 14487
__local_4:
; gsym_addr t 12509 a 14525 ind 14525
; gsym_addr t 0 a 14563 ind 14563
; add sp, #__mariowalk_locals
.ifgr __mariowalk_locals 0
tsa
clc
adc #__mariowalk_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x2" SUPERFREE

mariofall:
; sub sp,#__mariofall_locals
.ifgr __mariofall_locals 0
tsa
sec
sbc #__mariofall_locals
tas
.endif
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 15191 ind 15191
; gsym_addr t 0 a 15230 ind 15230
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 15320 ind 15320
; cmp op 0x95 inv 1 v 243 r 15320
; cmp ne
bne +
; gsym_addr t 0 a 15410 ind 15410
brl __local_7
+
; gtst finished; t 15320
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #6,tcc__r0
lda.w #6
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [oambuffer,4]
lda.b tcc__r0
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
__local_7:
; gsym_addr t 15320 a 16334 ind 16334
; gsym_addr t 0 a 16372 ind 16372
; add sp, #__mariofall_locals
.ifgr __mariofall_locals 0
tsa
clc
adc #__mariofall_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x3" SUPERFREE

mariojump:
; sub sp,#__mariojump_locals
.ifgr __mariojump_locals 0
tsa
sec
sbc #__mariojump_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x95
; ld2 [oambuffer + 4], tcc__r0
lda.l oambuffer + 4
sta.b tcc__r0
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 16874 ind 16874
; gsym_addr t 0 a 16913 ind 16913
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 17003 ind 17003
; cmp op 0x95 inv 1 v 243 r 17003
; cmp ne
bne +
; gsym_addr t 0 a 17093 ind 17093
brl __local_8
+
; gtst finished; t 17003
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [oambuffer,4]
lda.b tcc__r0
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
__local_8:
; gsym_addr t 17003 a 17545 ind 17545
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x9d
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 17947 ind 17947
; gsym_addr t 0 a 17986 ind 17986
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 18076 ind 18076
; cmp op 0x95 inv 1 v 243 r 18076
; cmp ne
bne +
; gsym_addr t 0 a 18166 ind 18166
brl __local_9
+
; gtst finished; t 18076
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #4,tcc__r1
lda.w #4
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_9:
; gsym_addr t 18076 a 18713 ind 18713
; gsym_addr t 0 a 18751 ind 18751
; add sp, #__mariojump_locals
.ifgr __mariojump_locals 0
tsa
clc
adc #__mariojump_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x4" SUPERFREE

marioupdate:
; sub sp,#__marioupdate_locals
.ifgr __marioupdate_locals 0
tsa
sec
sbc #__marioupdate_locals
tas
.endif
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [pad_keys + 0], tcc__r0
lda.l pad_keys + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [pad0,0]
lda.b tcc__r0
sta.l pad0 + 0
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #896
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 19499 ind 19499
; gsym_addr t 0 a 19538 ind 19538
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 19628 ind 19628
; cmp op 0x95 inv 1 v 243 r 19628
; cmp ne
bne +
; gsym_addr t 0 a 19718 ind 19718
brl __local_10
+
; gtst finished; t 19628
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #512
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 20054 ind 20054
; gsym_addr t 0 a 20093 ind 20093
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 20183 ind 20183
; cmp op 0x95 inv 1 v 243 r 20183
; cmp ne
bne +
; gsym_addr t 0 a 20273 ind 20273
brl __local_11
+
; gtst finished; t 20183
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [marioflp + 0], tcc__r0
lda.w #0
sep #$20
lda.l marioflp + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc.w #3
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 20620 ind 20620
; gsym_addr t 0 a 20659 ind 20659
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 20749 ind 20749
; cmp op 0x95 inv 0 v 243 r 20749
; cmp ne
beq +
; gsym_addr t 0 a 20839 ind 20839
brl __local_12
+
; gtst finished; t 20749
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [marioflp + 0], tcc__r0
lda.w #0
sep #$20
lda.l marioflp + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc.w #2
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 0 t 20749 v 5 r 21179 ind 21179
; gsym_addr t 20749 a 21222 ind 21222
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 20749 v 243 r 21316 ind 21316
; cmp op 0x95 inv 0 v 243 r 21316
; cmp ne
beq +
__local_12:
; gsym_addr t 20749 a 21410 ind 21410
brl __local_13
+
; gtst finished; t 21316
; gtst inv 1 t 0 v 244 r 21490 ind 21490
; VT_jmp r 21490 t 0 ji 0 inv 1 vtop->c.i 21316
; gjmp_addr 0 at 21579
jmp.w __local_14
; gsym_addr t 21619 a 0 ind 21619
__local_13:
; gsym_addr t 21316 a 21653 ind 21653
; gtst finished; t 21619
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
__local_14:
; gsym_addr t 21619 a 21912 ind 21912
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [oambuffer + 6], tcc__r0
lda.w #0
sep #$20
lda.l oambuffer + 6
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 6 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #65471
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x6
; st1 tcc__r0, [oambuffer,6]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 6
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 0 r type 0x0)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r1
sbc.w #56
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x9e
; cmpcd tcc__r1, #-320
ldx #1
lda.b tcc__r1
sec
sbc.w #-320
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 23702 ind 23702
; gsym_addr t 0 a 23741 ind 23741
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 23831 ind 23831
; cmp op 0x95 inv 1 v 243 r 23831
; cmp ne
bne +
; gsym_addr t 0 a 23921 ind 23921
brl __local_15
+
; gtst finished; t 23831
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #-320,tcc__r1
lda.w #65216
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_15:
; gsym_addr t 23831 a 24311 ind 24311
__local_11:
; gsym_addr t 20183 a 24349 ind 24349
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #256
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 24647 ind 24647
; gsym_addr t 0 a 24686 ind 24686
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 24776 ind 24776
; cmp op 0x95 inv 1 v 243 r 24776
; cmp ne
bne +
; gsym_addr t 0 a 24866 ind 24866
brl __local_16
+
; gtst finished; t 24776
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [marioflp + 0], tcc__r0
lda.w #0
sep #$20
lda.l marioflp + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9f
; cmpcd tcc__r0, #3
ldx #1
lda.b tcc__r0
sec
sbc.w #3
tay
beq ++
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 0 t 0 v 5 r 25213 ind 25213
; gsym_addr t 0 a 25252 ind 25252
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 0 v 243 r 25342 ind 25342
; cmp op 0x95 inv 0 v 243 r 25342
; cmp ne
beq +
; gsym_addr t 0 a 25432 ind 25432
brl __local_17
+
; gtst finished; t 25342
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [marioflp + 0], tcc__r0
lda.w #0
sep #$20
lda.l marioflp + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x9c
; cmpcd tcc__r0, #2
ldx #1
lda.b tcc__r0
sec
sbc.w #2
tay
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 0 t 25342 v 5 r 25772 ind 25772
; gsym_addr t 25342 a 25815 ind 25815
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 0 t 25342 v 243 r 25909 ind 25909
; cmp op 0x95 inv 0 v 243 r 25909
; cmp ne
beq +
__local_17:
; gsym_addr t 25342 a 26003 ind 26003
brl __local_18
+
; gtst finished; t 25909
; gtst inv 1 t 0 v 244 r 26083 ind 26083
; VT_jmp r 26083 t 0 ji 0 inv 1 vtop->c.i 25909
; gjmp_addr 0 at 26172
jmp.w __local_19
; gsym_addr t 26212 a 0 ind 26212
__local_18:
; gsym_addr t 25909 a 26246 ind 26246
; gtst finished; t 26212
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #2,tcc__r0
lda.w #2
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
__local_19:
; gsym_addr t 26212 a 26505 ind 26505
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [oambuffer + 6], tcc__r0
lda.w #0
sep #$20
lda.l oambuffer + 6
rep #$20
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 6 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #64
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x6
; st1 tcc__r0, [oambuffer,6]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 6
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 0 r type 0x0)
; length xxy 2 vtop->type 0x0
clc
lda.b tcc__r1
adc.w #56
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x9d
; cmpcd tcc__r1, #320
ldx #1
lda.b tcc__r1
sec
sbc.w #320
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 28282 ind 28282
; gsym_addr t 0 a 28321 ind 28321
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 28411 ind 28411
; cmp op 0x95 inv 1 v 243 r 28411
; cmp ne
bne +
; gsym_addr t 0 a 28501 ind 28501
brl __local_20
+
; gtst finished; t 28411
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #320,tcc__r1
lda.w #320
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_20:
; gsym_addr t 28411 a 28888 ind 28888
__local_16:
; gsym_addr t 24776 a 28926 ind 28926
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #128
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 29224 ind 29224
; gsym_addr t 0 a 29263 ind 29263
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 29353 ind 29353
; cmp op 0x95 inv 1 v 243 r 29353
; cmp ne
bne +
; gsym_addr t 0 a 29443 ind 29443
brl __local_21
+
; gtst finished; t 29353
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #38
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x95
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 30024 ind 30024
; gsym_addr t 0 a 30063 ind 30063
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 30153 ind 30153
; cmp op 0x95 inv 1 v 243 r 30153
; cmp ne
bne +
; gsym_addr t 0 a 30243 ind 30243
brl __local_22
+
; gtst finished; t 30153
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #2,tcc__r1
lda.w #2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #2048
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 31052 ind 31052
; gsym_addr t 0 a 31091 ind 31091
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 31181 ind 31181
; cmp op 0x95 inv 1 v 243 r 31181
; cmp ne
bne +
; gsym_addr t 0 a 31271 ind 31271
brl __local_23
+
; gtst finished; t 31181
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #-1428,tcc__r1
lda.w #64108
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 31662
jmp.w __local_24
; gsym_addr t 31702 a 0 ind 31702
__local_23:
; gsym_addr t 31181 a 31736 ind 31736
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #-916,tcc__r1
lda.w #64620
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_24:
; gsym_addr t 31702 a 32088 ind 32088
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l spcPlaySound
; add sp, #1
tsa
clc
adc #1
tas
__local_22:
; gsym_addr t 30153 a 32240 ind 32240
__local_21:
; gsym_addr t 29353 a 32278 ind 32278
__local_10:
; gsym_addr t 19628 a 32316 ind 32316
; load 0
; type 17 reg 0x1f2 extra 0x2020200a
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objCollidMap
; add sp, #2
pla
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #1
ldx #1
lda.b tcc__r1
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33178 ind 33178
; gsym_addr t 0 a 33217 ind 33217
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33307 ind 33307
; cmp op 0x95 inv 1 v 243 r 33307
; cmp ne
bne +
; gsym_addr t 0 a 33397 ind 33397
brl __local_25
+
; gtst finished; t 33307
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariowalk
; add sp, #1
tsa
clc
adc #1
tas
; gjmp_addr 0 at 33821
jmp.w __local_26
; gsym_addr t 33861 a 0 ind 33861
__local_25:
; gsym_addr t 33307 a 33895 ind 33895
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #4
ldx #1
lda.b tcc__r1
sec
sbc #4
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 34438 ind 34438
; gsym_addr t 0 a 34477 ind 34477
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 34567 ind 34567
; cmp op 0x95 inv 1 v 243 r 34567
; cmp ne
bne +
; gsym_addr t 0 a 34657 ind 34657
brl __local_27
+
; gtst finished; t 34567
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariofall
; add sp, #1
tsa
clc
adc #1
tas
; gjmp_addr 0 at 35081
jmp.w __local_28
; gsym_addr t 35121 a 0 ind 35121
__local_27:
; gsym_addr t 34567 a 35155 ind 35155
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #2
ldx #1
lda.b tcc__r1
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 35698 ind 35698
; gsym_addr t 0 a 35737 ind 35737
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 35827 ind 35827
; cmp op 0x95 inv 1 v 243 r 35827
; cmp ne
bne +
; gsym_addr t 0 a 35917 ind 35917
brl __local_29
+
; gtst finished; t 35827
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x2962202c
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariojump
; add sp, #1
tsa
clc
adc #1
tas
__local_29:
; gsym_addr t 35827 a 36348 ind 36348
__local_28:
; gsym_addr t 35121 a 36386 ind 36386
__local_26:
; gsym_addr t 33861 a 36424 ind 36424
; load 0
; type 17 reg 0x1f2 extra 0x2020200a
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objUpdateXY
; add sp, #2
pla
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioox + 0], tcc__r0
lda.l marioox + 0
sta.b tcc__r0
lda.l marioox + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x9e
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 37152 ind 37152
; gsym_addr t 0 a 37191 ind 37191
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 37281 ind 37281
; cmp op 0x95 inv 1 v 243 r 37281
; cmp ne
bne +
; gsym_addr t 0 a 37371 ind 37371
brl __local_30
+
; gtst finished; t 37281
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioox + 0], tcc__r0
lda.l marioox + 0
sta.b tcc__r0
lda.l marioox + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_30:
; gsym_addr t 37281 a 37754 ind 37754
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [mariooy + 0], tcc__r0
lda.l mariooy + 0
sta.b tcc__r0
lda.l mariooy + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x9e
; cmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
beq +++
bvc +
eor #$8000
+
bmi +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 38164 ind 38164
; gsym_addr t 0 a 38203 ind 38203
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 38293 ind 38293
; cmp op 0x95 inv 1 v 243 r 38293
; cmp ne
bne +
; gsym_addr t 0 a 38383 ind 38383
brl __local_31
+
; gtst finished; t 38293
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [mariooy + 0], tcc__r0
lda.l mariooy + 0
sta.b tcc__r0
lda.l mariooy + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x0 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_31:
; gsym_addr t 38293 a 38766 ind 38766
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioox + 0], tcc__r0
lda.l marioox + 0
sta.b tcc__r0
lda.l marioox + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [mariox,0]
lda.b tcc__r1
sta.l mariox + 0
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [mariooy + 0], tcc__r0
lda.l mariooy + 0
sta.b tcc__r0
lda.l mariooy + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [marioy,0]
lda.b tcc__r1
sta.l marioy + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [mariox + 0], tcc__r0
lda.l mariox + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [x_pos + 0], tcc__r1
lda.l x_pos + 0
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x0
; st2 tcc__r0, [oambuffer,0]
lda.b tcc__r0
sta.l oambuffer + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [marioy + 0], tcc__r0
lda.l marioy + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [y_pos + 0], tcc__r1
lda.l y_pos + 0
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x2
; st2 tcc__r0, [oambuffer,2]
lda.b tcc__r0
sta.l oambuffer + 2
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l oamDynamic16Draw
; add sp, #2
pla
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [marioy + 0], tcc__r0
lda.l marioy + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [mariox + 0], tcc__r0
lda.l mariox + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l mapUpdateCamera
; add sp, #4
tsa
clc
adc #4
tas
; gsym_addr t 0 a 40903 ind 40903
; add sp, #__marioupdate_locals
.ifgr __marioupdate_locals 0
tsa
clc
adc #__marioupdate_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x5" SUPERFREE

main:
; sub sp,#__main_locals
.ifgr __main_locals 0
tsa
sec
sbc #__main_locals
tas
.endif
; call r 0x2f0
jsr.l spcBoot
; call r 0x2f0
jsr.l consoleInit
; push2 imm r 0xf0
pea.w 24576
; call r 0x2f0
jsr.l consoleSetTextVramBGAdr
; add sp, #2
pla
; push2 imm r 0xf0
pea.w 12288
; call r 0x2f0
jsr.l consoleSetTextVramAdr
; add sp, #2
pla
; push4 imm r 0x12f0
pea.w :snespal
pea.w snespal + 0
; push4 imm r 0x12f0
pea.w :snesfont
pea.w snesfont + 0
; push1 imm r 0xf0
sep #$20
lda #32
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l consoleInitText
; add sp, #10
tsa
clc
adc #10
tas
; push4 imm r 0x12f0
pea.w :SOUNDBANK__
pea.w SOUNDBANK__ + 0
; call r 0x2f0
jsr.l spcSetBank
; add sp, #4
tsa
clc
adc #4
tas
; push1 imm r 0xf0
sep #$20
lda #39
pha
rep #$20
; call r 0x2f0
jsr.l spcAllocateSoundRegion
; add sp, #1
tsa
clc
adc #1
tas
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l spcLoad
; add sp, #2
pla
; load 0
; type 132 reg 0x12f0 extra 0x0
; ld4 #jumpsndend + 0, tcc__r0 (type 0x84)
lda.w #:jumpsndend
sta.b tcc__r0h
lda.w #jumpsndend + 0
sta.b tcc__r0
; load 1
; type 132 reg 0x12f0 extra 0x0
; ld4 #jumpsnd + 0, tcc__r1 (type 0x84)
lda.w #:jumpsnd
sta.b tcc__r1h
lda.w #jumpsnd + 0
sta.b tcc__r1
; gen_opi len 4 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x84 c 0 r type 0x11)
; length xxy 4 vtop->type 0x84
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; push4 imm r 0x2f0
pea.w :Jump
pea.w Jump + 0
; push4 imm r 0x12f0
pea.w :jumpsnd
pea.w jumpsnd + 0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push1 imm r 0xf0
sep #$20
lda #6
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #8
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #15
pha
rep #$20
; call r 0x2f0
jsr.l spcSetSoundEntry
; add sp, #13
tsa
clc
adc #13
tas
; push2 imm r 0xf0
pea.w 12288
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l bgSetGfxPtr
; add sp, #3
tsa
clc
adc #3
tas
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push2 imm r 0xf0
pea.w 24576
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l bgSetMapPtr
; add sp, #4
tsa
clc
adc #4
tas
; load 0
; type 132 reg 0x12f0 extra 0x0
; ld4 #tilesetend + 0, tcc__r0 (type 0x84)
lda.w #:tilesetend
sta.b tcc__r0h
lda.w #tilesetend + 0
sta.b tcc__r0
; load 1
; type 132 reg 0x12f0 extra 0x0
; ld4 #tileset + 0, tcc__r1 (type 0x84)
lda.w #:tileset
sta.b tcc__r1h
lda.w #tileset + 0
sta.b tcc__r1
; gen_opi len 4 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x84 c 0 r type 0x11)
; length xxy 4 vtop->type 0x84
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; push2 imm r 0xf0
pea.w 8192
; push2 imm r 0xf0
pea.w 16
; push2 imm r 0xf0
pea.w 32
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push4 imm r 0x12f0
pea.w :tilepal
pea.w tilepal + 0
; push4 imm r 0x12f0
pea.w :tileset
pea.w tileset + 0
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l bgInitTileSet
; add sp, #18
tsa
clc
adc #18
tas
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; push2 imm r 0xf0
pea.w 26624
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l bgSetMapPtr
; add sp, #4
tsa
clc
adc #4
tas
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push2 imm r 0xf0
pea.w 0
; push2 imm r 0xf0
pea.w 0
; push2 imm r 0xf0
pea.w 4096
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l oamInitDynamicSprite
; add sp, #9
tsa
clc
adc #9
tas
; call r 0x2f0
jsr.l objInitEngine
; push4 imm r 0xf0
pea.w 0
pea.w 0
; push4 imm r 0x2f0
pea.w :marioupdate
pea.w marioupdate + 0
; push4 imm r 0x2f0
pea.w :marioinit
pea.w marioinit + 0
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l objInitFunctions
; add sp, #13
tsa
clc
adc #13
tas
; push4 imm r 0x12f0
pea.w :objmario
pea.w objmario + 0
; call r 0x2f0
jsr.l objLoadObjects
; add sp, #4
tsa
clc
adc #4
tas
; push4 imm r 0x12f0
pea.w :tilesetatt
pea.w tilesetatt + 0
; push4 imm r 0x12f0
pea.w :tilesetdef
pea.w tilesetdef + 0
; push4 imm r 0x12f0
pea.w :mapmario
pea.w mapmario + 0
; call r 0x2f0
jsr.l mapLoad
; add sp, #12
tsa
clc
adc #12
tas
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l setMode
; add sp, #2
pla
; push1 imm r 0xf0
sep #$20
lda #2
pha
rep #$20
; call r 0x2f0
jsr.l bgSetDisable
; add sp, #1
tsa
clc
adc #1
tas
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileyPyexc10
pea.w tccs_L.tmpxfileyPyexc10 + 0
; push2 imm r 0xf0
pea.w 16
; push2 imm r 0xf0
pea.w 6
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileyPyexc11
pea.w tccs_L.tmpxfileyPyexc11 + 0
; push2 imm r 0xf0
pea.w 17
; push2 imm r 0xf0
pea.w 6
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; call r 0x2f0
jsr.l setScreenOn
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l spcPlay
; add sp, #1
tsa
clc
adc #1
tas
; push1 imm r 0xf0
sep #$20
lda #100
pha
rep #$20
; call r 0x2f0
jsr.l spcSetModuleVolume
; add sp, #1
tsa
clc
adc #1
tas
; call r 0x2f0
jsr.l WaitForVBlank
__local_32:
; gtst inv 1 t 0 v 240 r 46214 ind 46214
; uncond jump: nop
; gtst finished; t 0
; call r 0x2f0
jsr.l mapUpdate
; call r 0x2f0
jsr.l objUpdateAll
; call r 0x2f0
jsr.l oamInitDynamicSpriteEndFrame
; call r 0x2f0
jsr.l spcProcess
; call r 0x2f0
jsr.l WaitForVBlank
; call r 0x2f0
jsr.l mapVblank
; call r 0x2f0
jsr.l oamVramQueueUpdate
; gjmp_addr 46214 at 46548
jmp.w __local_32
; gsym_addr t 46592 a 46214 ind 46592
; gsym_addr t 0 a 46630 ind 46630
; gsym_addr t 0 a 46214 ind 46664
; load 0
; type 0 reg 0xf0 extra 0x73726576
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 0 at 46782
jmp.w __local_33
; gsym_addr t 46822 a 0 ind 46822
__local_33:
; gsym_addr t 46822 a 46856 ind 46856
; add sp, #__main_locals
.ifgr __main_locals 0
tsa
clc
adc #__main_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ramtmpxfileyPyexc.data" APPENDTO "globram.data"
__local_dummytmpxfileyPyexc.data dsb 1

.ENDS

.SECTION "tmpxfileyPyexc.data" APPENDTO "glob.data"

__local_dummytmpxfileyPyexc.data: .db 0
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.tmpxfileyPyexc9: .db $6d,$61,$72,$69,$6f,$69,$6e,$69,$74,$20,$25,$64,$20,$25,$64,$a,$0
tccs_L.tmpxfileyPyexc10: .db $4d,$41,$52,$49,$4f,$78,$30,$30,$20,$20,$57,$4f,$52,$4c,$44,$20,$54,$49,$4d,$45,$0
tccs_L.tmpxfileyPyexc11: .db $20,$30,$30,$30,$30,$30,$20,$6f,$78,$30,$30,$20,$31,$2d,$31,$20,$20,$30,$30,$30,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
Jump dsb 8
pad0 dsb 2
marioobj dsb 4
marioox dsb 4
mariooy dsb 4
marioxv dsb 4
marioyv dsb 4
mariox dsb 2
marioy dsb 2
mariofidx dsb 1
marioflp dsb 1
flip dsb 1
.ENDS
