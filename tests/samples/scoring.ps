.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __main_locals 0

.SECTION ".text_0x0" SUPERFREE

main:
; sub sp,#__main_locals
.ifgr __main_locals 0
tsa
sec
sbc #__main_locals
tas
.endif
; call r 0x2f0
jsr.l consoleInit
; push2 imm r 0xf0
pea.w 26624
; call r 0x2f0
jsr.l consoleSetTextVramBGAdr
; add sp, #2
pla
; push2 imm r 0xf0
pea.w 12288
; call r 0x2f0
jsr.l consoleSetTextVramAdr
; add sp, #2
pla
; push2 imm r 0xf0
pea.w 256
; call r 0x2f0
jsr.l consoleSetTextOffset
; add sp, #2
pla
; push4 imm r 0x12f0
pea.w :snespal
pea.w snespal + 0
; push4 imm r 0x12f0
pea.w :snesfont
pea.w snesfont + 0
; push1 imm r 0xf0
sep #$20
lda #32
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l consoleInitText
; add sp, #10
tsa
clc
adc #10
tas
; push2 imm r 0xf0
pea.w 8192
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l bgSetGfxPtr
; add sp, #3
tsa
clc
adc #3
tas
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push2 imm r 0xf0
pea.w 26624
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l bgSetMapPtr
; add sp, #4
tsa
clc
adc #4
tas
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #18,tcc__r0
lda.w #18
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x2
; st2 tcc__r0, [scoretst,2]
lda.b tcc__r0
sta.l scoretst + 2
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #900,tcc__r0
lda.w #900
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [scoretst,0]
lda.b tcc__r0
sta.l scoretst + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreClear
; add sp, #4
tsa
clc
adc #4
tas
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x982bc68
; ld2 [scoretst + 0], tcc__r0
lda.l scoretst + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x982bc68
; ld2 [scoretst + 2], tcc__r0
lda.l scoretst + 2
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw68
pea.w tccs_L.tmpxfileewmQw68 + 0
; push4 imm r 0x2f0
pea.w :sz
pea.w sz + 0
; call r 0x2f0
jsr.l sprintf
; add sp, #12
tsa
clc
adc #12
tas
; push4 imm r 0x2f0
pea.w :sz
pea.w sz + 0
; push2 imm r 0xf0
pea.w 8
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push2 imm r 0xf0
pea.w 1243
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreAdd
; add sp, #6
tsa
clc
adc #6
tas
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x982b458
; ld2 [scoretst + 0], tcc__r0
lda.l scoretst + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x982b458
; ld2 [scoretst + 2], tcc__r0
lda.l scoretst + 2
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw69
pea.w tccs_L.tmpxfileewmQw69 + 0
; push4 imm r 0x2f0
pea.w :sz
pea.w sz + 0
; call r 0x2f0
jsr.l sprintf
; add sp, #12
tsa
clc
adc #12
tas
; push4 imm r 0x2f0
pea.w :sz
pea.w sz + 0
; push2 imm r 0xf0
pea.w 9
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; push2 imm r 0xf0
pea.w 10000
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreAdd
; add sp, #6
tsa
clc
adc #6
tas
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x982b5e8
; ld2 [scoretst + 0], tcc__r0
lda.l scoretst + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x982b5e8
; ld2 [scoretst + 2], tcc__r0
lda.l scoretst + 2
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw610
pea.w tccs_L.tmpxfileewmQw610 + 0
; push4 imm r 0x2f0
pea.w :sz
pea.w sz + 0
; call r 0x2f0
jsr.l sprintf
; add sp, #12
tsa
clc
adc #12
tas
; push4 imm r 0x2f0
pea.w :sz
pea.w sz + 0
; push2 imm r 0xf0
pea.w 10
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #18,tcc__r0
lda.w #18
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x2
; st2 tcc__r0, [scoretst,2]
lda.b tcc__r0
sta.l scoretst + 2
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #900,tcc__r0
lda.w #900
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [scoretst,0]
lda.b tcc__r0
sta.l scoretst + 0
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #17,tcc__r0
lda.w #17
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x2
; st2 tcc__r0, [scoretst1,2]
lda.b tcc__r0
sta.l scoretst1 + 2
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #900,tcc__r0
lda.w #900
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [scoretst1,0]
lda.b tcc__r0
sta.l scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 5097 ind 5097
; gsym_addr t 0 a 5134 ind 5134
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 5253 ind 5253
; cmp op 0x95 inv 1 v 243 r 5253
; cmp ne
bne +
; gsym_addr t 0 a 5340 ind 5340
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 5253
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw611
pea.w tccs_L.tmpxfileewmQw611 + 0
; push2 imm r 0xf0
pea.w 12
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 5652
jmp.w __local_1
; gsym_addr t 5690 a 0 ind 5690
__local_0:
; gsym_addr t 5253 a 5722 ind 5722
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #255
ldx #1
lda.b tcc__r0
sec
sbc #255
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 6045 ind 6045
; gsym_addr t 0 a 6082 ind 6082
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 6170 ind 6170
; cmp op 0x95 inv 1 v 243 r 6170
; cmp ne
bne +
; gsym_addr t 0 a 6257 ind 6257
brl __local_2
+
; gtst finished; t 6170
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw612
pea.w tccs_L.tmpxfileewmQw612 + 0
; push2 imm r 0xf0
pea.w 12
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 6538
jmp.w __local_3
; gsym_addr t 6576 a 0 ind 6576
__local_2:
; gsym_addr t 6170 a 6608 ind 6608
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 6927 ind 6927
; gsym_addr t 0 a 6964 ind 6964
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 7052 ind 7052
; cmp op 0x95 inv 1 v 243 r 7052
; cmp ne
bne +
; gsym_addr t 0 a 7139 ind 7139
brl __local_4
+
; gtst finished; t 7052
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw613
pea.w tccs_L.tmpxfileewmQw613 + 0
; push2 imm r 0xf0
pea.w 12
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
__local_4:
; gsym_addr t 7052 a 7420 ind 7420
__local_3:
; gsym_addr t 6576 a 7455 ind 7455
__local_1:
; gsym_addr t 5690 a 7490 ind 7490
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #18,tcc__r0
lda.w #18
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x2
; st2 tcc__r0, [scoretst1,2]
lda.b tcc__r0
sta.l scoretst1 + 2
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #901,tcc__r0
lda.w #901
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [scoretst1,0]
lda.b tcc__r0
sta.l scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 8173 ind 8173
; gsym_addr t 0 a 8210 ind 8210
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 8298 ind 8298
; cmp op 0x95 inv 1 v 243 r 8298
; cmp ne
bne +
; gsym_addr t 0 a 8385 ind 8385
brl __local_5
+
; gtst finished; t 8298
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw614
pea.w tccs_L.tmpxfileewmQw614 + 0
; push2 imm r 0xf0
pea.w 13
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 8666
jmp.w __local_6
; gsym_addr t 8704 a 0 ind 8704
__local_5:
; gsym_addr t 8298 a 8736 ind 8736
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #-1
ldx #1
lda.b tcc__r0
sec
sbc #-1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 9057 ind 9057
; gsym_addr t 0 a 9094 ind 9094
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 9182 ind 9182
; cmp op 0x95 inv 1 v 243 r 9182
; cmp ne
bne +
; gsym_addr t 0 a 9269 ind 9269
brl __local_7
+
; gtst finished; t 9182
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw615
pea.w tccs_L.tmpxfileewmQw615 + 0
; push2 imm r 0xf0
pea.w 13
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 9550
jmp.w __local_8
; gsym_addr t 9588 a 0 ind 9588
__local_7:
; gsym_addr t 9182 a 9620 ind 9620
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 9939 ind 9939
; gsym_addr t 0 a 9976 ind 9976
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 10064 ind 10064
; cmp op 0x95 inv 1 v 243 r 10064
; cmp ne
bne +
; gsym_addr t 0 a 10154 ind 10154
brl __local_9
+
; gtst finished; t 10064
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw616
pea.w tccs_L.tmpxfileewmQw616 + 0
; push2 imm r 0xf0
pea.w 13
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
__local_9:
; gsym_addr t 10064 a 10438 ind 10438
__local_8:
; gsym_addr t 9588 a 10476 ind 10476
__local_6:
; gsym_addr t 8704 a 10513 ind 10513
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #19,tcc__r0
lda.w #19
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x2
; st2 tcc__r0, [scoretst1,2]
lda.b tcc__r0
sta.l scoretst1 + 2
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #900,tcc__r0
lda.w #900
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [scoretst1,0]
lda.b tcc__r0
sta.l scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 11196 ind 11196
; gsym_addr t 0 a 11235 ind 11235
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 11325 ind 11325
; cmp op 0x95 inv 1 v 243 r 11325
; cmp ne
bne +
; gsym_addr t 0 a 11415 ind 11415
brl __local_10
+
; gtst finished; t 11325
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw617
pea.w tccs_L.tmpxfileewmQw617 + 0
; push2 imm r 0xf0
pea.w 14
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 11700
jmp.w __local_11
; gsym_addr t 11740 a 0 ind 11740
__local_10:
; gsym_addr t 11325 a 11774 ind 11774
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #-1
ldx #1
lda.b tcc__r0
sec
sbc #-1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 12098 ind 12098
; gsym_addr t 0 a 12137 ind 12137
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 12227 ind 12227
; cmp op 0x95 inv 1 v 243 r 12227
; cmp ne
bne +
; gsym_addr t 0 a 12317 ind 12317
brl __local_12
+
; gtst finished; t 12227
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw618
pea.w tccs_L.tmpxfileewmQw618 + 0
; push2 imm r 0xf0
pea.w 14
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 12602
jmp.w __local_13
; gsym_addr t 12642 a 0 ind 12642
__local_12:
; gsym_addr t 12227 a 12676 ind 12676
; push4 imm r 0x2f0
pea.w :scoretst1
pea.w scoretst1 + 0
; push4 imm r 0x2f0
pea.w :scoretst
pea.w scoretst + 0
; call r 0x2f0
jsr.l scoreCmp
; add sp, #8
tsa
clc
adc #8
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 12998 ind 12998
; gsym_addr t 0 a 13037 ind 13037
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 13127 ind 13127
; cmp op 0x95 inv 1 v 243 r 13127
; cmp ne
bne +
; gsym_addr t 0 a 13217 ind 13217
brl __local_14
+
; gtst finished; t 13127
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileewmQw619
pea.w tccs_L.tmpxfileewmQw619 + 0
; push2 imm r 0xf0
pea.w 14
; push2 imm r 0xf0
pea.w 2
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
__local_14:
; gsym_addr t 13127 a 13502 ind 13502
__local_13:
; gsym_addr t 12642 a 13540 ind 13540
__local_11:
; gsym_addr t 11740 a 13578 ind 13578
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l setMode
; add sp, #2
pla
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l bgSetDisable
; add sp, #1
tsa
clc
adc #1
tas
; push1 imm r 0xf0
sep #$20
lda #2
pha
rep #$20
; call r 0x2f0
jsr.l bgSetDisable
; add sp, #1
tsa
clc
adc #1
tas
; push1 imm r 0xf0
sep #$20
lda #15
pha
rep #$20
; call r 0x2f0
jsr.l setBrightness
; add sp, #1
tsa
clc
adc #1
tas
__local_15:
; gtst inv 1 t 0 v 240 r 14102 ind 14102
; uncond jump: nop
; gtst finished; t 0
; call r 0x2f0
jsr.l WaitForVBlank
; gjmp_addr 14102 at 14218
jmp.w __local_15
; gsym_addr t 14262 a 14102 ind 14262
; gsym_addr t 0 a 14300 ind 14300
; gsym_addr t 0 a 14102 ind 14334
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 0 at 14445
jmp.w __local_16
; gsym_addr t 14485 a 0 ind 14485
__local_16:
; gsym_addr t 14485 a 14519 ind 14519
; add sp, #__main_locals
.ifgr __main_locals 0
tsa
clc
adc #__main_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ramtmpxfileewmQw6.data" APPENDTO "globram.data"
__local_dummytmpxfileewmQw6.data dsb 1

.ENDS

.SECTION "tmpxfileewmQw6.data" APPENDTO "glob.data"

__local_dummytmpxfileewmQw6.data: .db 0
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.tmpxfileewmQw68: .db $73,$63,$6f,$72,$65,$20,$68,$69,$20,$25,$30,$34,$78,$20,$73,$63,$6f,$72,$65,$20,$6c,$6f,$20,$25,$30,$34,$78,$0
tccs_L.tmpxfileewmQw69: .db $73,$63,$6f,$72,$65,$20,$68,$69,$20,$25,$30,$34,$78,$20,$73,$63,$6f,$72,$65,$20,$6c,$6f,$20,$25,$30,$34,$78,$0
tccs_L.tmpxfileewmQw610: .db $73,$63,$6f,$72,$65,$20,$68,$69,$20,$25,$30,$34,$78,$20,$73,$63,$6f,$72,$65,$20,$6c,$6f,$20,$25,$30,$34,$78,$0
tccs_L.tmpxfileewmQw611: .db $31,$20,$73,$63,$6f,$72,$65,$73,$20,$65,$71,$75,$61,$6c,$73,$0
tccs_L.tmpxfileewmQw612: .db $31,$20,$73,$63,$6f,$72,$65,$74,$73,$74,$20,$68,$69,$67,$68,$65,$72,$0
tccs_L.tmpxfileewmQw613: .db $31,$20,$73,$63,$6f,$72,$65,$74,$73,$74,$20,$6c,$6f,$77,$65,$72,$0
tccs_L.tmpxfileewmQw614: .db $32,$20,$73,$63,$6f,$72,$65,$73,$20,$65,$71,$75,$61,$6c,$73,$0
tccs_L.tmpxfileewmQw615: .db $32,$20,$73,$63,$6f,$72,$65,$74,$73,$74,$20,$68,$69,$67,$68,$65,$72,$0
tccs_L.tmpxfileewmQw616: .db $32,$20,$73,$63,$6f,$72,$65,$74,$73,$74,$20,$6c,$6f,$77,$65,$72,$0
tccs_L.tmpxfileewmQw617: .db $33,$20,$73,$63,$6f,$72,$65,$73,$20,$65,$71,$75,$61,$6c,$73,$0
tccs_L.tmpxfileewmQw618: .db $33,$20,$73,$63,$6f,$72,$65,$74,$73,$74,$20,$68,$69,$67,$68,$65,$72,$0
tccs_L.tmpxfileewmQw619: .db $33,$20,$73,$63,$6f,$72,$65,$74,$73,$74,$20,$6c,$6f,$77,$65,$72,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
scoretst dsb 4
scoretst1 dsb 4
sz dsb 128
.ENDS
