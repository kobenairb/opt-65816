.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __koopatroopainit_locals 0
.define __koopatroopaupdate_locals 0

.SECTION ".text_0x0" SUPERFREE

koopatroopainit:
; sub sp,#__koopatroopainit_locals
.ifgr __koopatroopainit_locals 0
tsa
sec
sbc #__koopatroopainit_locals
tas
.endif
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x87d3808
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __koopatroopainit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x87d3808
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __koopatroopainit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfileMMx3Y48
pea.w tccs_L.tmpxfileMMx3Y48 + 0
; call r 0x2f0
jsr.l consoleNocashMessage
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0x1f2 extra 0xff8a38f0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 9
lda 7 + __koopatroopainit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 7 r type 0x86)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #255
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __koopatroopainit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __koopatroopainit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x11 reg 0x0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l objNew
; add sp, #5
tsa
clc
adc #5
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 1899 ind 1899
; gsym_addr t 0 a 1936 ind 1936
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 2055 ind 2055
; cmp op 0x95 inv 1 v 243 r 2055
; cmp ne
bne +
; gsym_addr t 0 a 2142 ind 2142
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 2055
; gjmp_addr 0 at 2245
jmp.w __local_1
; gsym_addr t 2283 a 0 ind 2283
__local_0:
; gsym_addr t 2055 a 2315 ind 2315
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objgetid + 0], tcc__r0
lda.l objgetid + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objGetPointer
; add sp, #2
pla
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objptr + 0], tcc__r0
lda.l objptr + 0
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
dec.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld4096 #objbuffers + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:objbuffers
sta.b tcc__r1h
lda.w #objbuffers + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x4)
; length xxy 4096 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r1, [koopatroopaobj,0]
lda.b tcc__r1
sta.l koopatroopaobj + 0
lda.b tcc__r1h
sta.l koopatroopaobj + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #26
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #28
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #12
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #50
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #10,tcc__r1
lda.w #10
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #51
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #64886,tcc__r1
lda.w #64886
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #30
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,9],tcc__r1
; stack adjust: fc + disp - loc 11
lda 9 + __koopatroopainit_locals + 1,s
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #32
sta.b tcc__r0
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,11],tcc__r1
; stack adjust: fc + disp - loc 13
lda 11 + __koopatroopainit_locals + 1,s
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #6
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r1
lda.l nbobjects + 0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __koopatroopainit_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __koopatroopainit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 5 r type 0x0)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.w #16
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #4
sta.b tcc__r1
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #7
sta.b tcc__r1
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #6
sta.b tcc__r1
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #32,tcc__r0
lda.w #32
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #8
sta.b tcc__r1
; load 0
; type 4 reg 0x52f0 extra 0x0
; ld4 #sprkoopatroopa + 0, tcc__r0 (type 0x4)
lda.w #:sprkoopatroopa
sta.b tcc__r0h
lda.w #sprkoopatroopa + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x4 fc 0x0
; st4 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
ldy #0
sta.b [tcc__r1],y
lda.b tcc__r0h
iny
iny
sta.b [tcc__r1],y
; load 0
; type 144 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x3d
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x90)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x90 fc 0x0
; st2 tcc__r0, [nbobjects,0]
lda.b tcc__r0
sta.l nbobjects + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __koopatroopainit_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __koopatroopainit_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #4
sta.b tcc__r1
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #7
sta.b tcc__r1
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #6
sta.b tcc__r1
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #32,tcc__r0
lda.w #32
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #8
sta.b tcc__r1
; load 0
; type 4 reg 0x52f0 extra 0x0
; ld4 #sprkoopatroopa + 0, tcc__r0 (type 0x4)
lda.w #:sprkoopatroopa
sta.b tcc__r0h
lda.w #sprkoopatroopa + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x4 fc 0x0
; st4 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
ldy #0
sta.b [tcc__r1],y
lda.b tcc__r0h
iny
iny
sta.b [tcc__r1],y
; load 0
; type 144 reg 0x3f0 extra 0x0
; ld2 [nbobjects + 0], tcc__r0
lda.l nbobjects + 0
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x3d
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x90)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x90 fc 0x0
; st2 tcc__r0, [nbobjects,0]
lda.b tcc__r0
sta.l nbobjects + 0
__local_1:
; gsym_addr t 2283 a 20656 ind 20656
; add sp, #__koopatroopainit_locals
.ifgr __koopatroopainit_locals 0
tsa
clc
adc #__koopatroopainit_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x1" SUPERFREE

koopatroopaupdate:
; sub sp,#__koopatroopaupdate_locals
.ifgr __koopatroopaupdate_locals 0
tsa
sec
sbc #__koopatroopaupdate_locals
tas
.endif
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __koopatroopaupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld4096 #objbuffers + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:objbuffers
sta.b tcc__r1h
lda.w #objbuffers + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x4)
; length xxy 4096 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r1, [koopatroopaobj,0]
lda.b tcc__r1
sta.l koopatroopaobj + 0
lda.b tcc__r1h
sta.l koopatroopaobj + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [koopatroopaox,0]
lda.b tcc__r0
sta.l koopatroopaox + 0
lda.b tcc__r0h
sta.l koopatroopaox + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #19
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [koopatroopaoy,0]
lda.b tcc__r0
sta.l koopatroopaoy + 0
lda.b tcc__r0h
sta.l koopatroopaoy + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaox + 0], tcc__r0
lda.l koopatroopaox + 0
sta.b tcc__r0
lda.l koopatroopaox + 0 + 2
sta.b tcc__r0h
; load 1
; type 0 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x0 fc 0x0
; st2 tcc__r1, [koopatroopax,0]
lda.b tcc__r1
sta.l koopatroopax + 0
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x10)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #6
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [koopatroopanum,0]
lda.b tcc__r1
sta.l koopatroopanum + 0
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #50
sta.b tcc__r0
; load 1
; type 17 reg 0x5100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
sta.b tcc__r1
; load 2
; type 0 reg 0x1 extra 0x3d
; mov tcc__r1, tcc__r2
lda.b tcc__r1
sta.b tcc__r2
lda.b tcc__r1h
sta.b tcc__r2h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #50
sta.b tcc__r0
; load 1
; type 17 reg 0x5100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
sta.b tcc__r1
; gen_opi len 2 op 0x9d
; cmpcd tcc__r1, #3
ldx #1
lda.b tcc__r1
sec
sbc.w #3
tay
bvc +
eor #$8000
+
bpl +++
++
dex
+++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 25251 ind 25251
; gsym_addr t 0 a 25290 ind 25290
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 25380 ind 25380
; cmp op 0x95 inv 1 v 243 r 25380
; cmp ne
bne +
; gsym_addr t 0 a 25470 ind 25470
brl __local_2
+
; gtst finished; t 25380
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #50
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 1
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r1
lda.l koopatroopaobj + 0
sta.b tcc__r1
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #14
sta.b tcc__r1
; load 2
; type 16 reg 0xf0 extra 0x0
; ld2 #2,tcc__r2
lda.w #2
sta.b tcc__r2
; load 3
; type 16 reg 0x101 extra 0x0
; ld2 [tcc__r1,0],tcc__r3
lda.b [tcc__r1]
sta.b tcc__r3
; gen_opi len 2 op -
; sbc tcc__r3 (0x3), tcc__r2 (0x2) (fr type 0x10 c 2 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r2
sbc.b tcc__r3
sta.b tcc__r2
; store r 0x2 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r2, [tcc__r0,0]
lda.b tcc__r2
sta.b [tcc__r0]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #4
sta.b tcc__r1
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x10)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 2
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r2
lda.b [tcc__r0]
sta.b tcc__r2
; store r 0x2 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r2, [tcc__r1,0]
lda.b tcc__r2
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #7
sta.b tcc__r1
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #4
sta.b tcc__r1
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x10)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 2
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r2
lda.b [tcc__r0]
sta.b tcc__r2
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r2 (0x2) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r2
; store r 0x2 fr 0x101 ft 0x10 fc 0x0
; st2 tcc__r2, [tcc__r1,0]
lda.b tcc__r2
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #7
sta.b tcc__r1
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #51
sta.b tcc__r0
; load 1
; type 17 reg 0x5100 extra 0x0
; ld1 [tcc__r0,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #1
ldx #1
lda.b tcc__r1
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 32395 ind 32395
; gsym_addr t 0 a 32434 ind 32434
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 32524 ind 32524
; cmp op 0x95 inv 1 v 243 r 32524
; cmp ne
bne +
; gsym_addr t 0 a 32614 ind 32614
brl __local_3
+
; gtst finished; t 32524
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #30
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopax + 0], tcc__r1
lda.l koopatroopax + 0
sta.b tcc__r1
; load 2
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r2
lda.b [tcc__r0]
sta.b tcc__r2
; gen_opi len 2 op 0x96
; ucmpcd tcc__r1, tcc__r2
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r2
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33341 ind 33341
; gsym_addr t 0 a 33380 ind 33380
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33470 ind 33470
; cmp op 0x95 inv 1 v 243 r 33470
; cmp ne
bne +
; gsym_addr t 0 a 33560 ind 33560
brl __local_4
+
; gtst finished; t 33470
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #51
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #2,tcc__r1
lda.w #2
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #12
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #650,tcc__r1
lda.w #650
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #36
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #6
sta.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #64
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #6
sta.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #64
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; gjmp_addr 0 at 38032
jmp.w __local_5
; gsym_addr t 38071 a 0 ind 38071
__local_4:
; gsym_addr t 33470 a 38105 ind 38105
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #64886,tcc__r1
lda.w #64886
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_5:
; gsym_addr t 38071 a 38641 ind 38641
; gjmp_addr 0 at 38679
jmp.w __local_6
; gsym_addr t 38718 a 0 ind 38718
__local_3:
; gsym_addr t 32524 a 38752 ind 38752
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #32
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopax + 0], tcc__r1
lda.l koopatroopax + 0
sta.b tcc__r1
; load 2
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r2
lda.b [tcc__r0]
sta.b tcc__r2
; gen_opi len 2 op 0x93
; ucmpcd tcc__r1, tcc__r2
ldx #1
lda.b tcc__r1
sec
sbc.b tcc__r2
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 39435 ind 39435
; gsym_addr t 0 a 39474 ind 39474
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 39564 ind 39564
; cmp op 0x95 inv 1 v 243 r 39564
; cmp ne
bne +
; gsym_addr t 0 a 39654 ind 39654
brl __local_7
+
; gtst finished; t 39564
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #51
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #12
sta.b tcc__r0
; load 1
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #64886,tcc__r1
lda.w #64886
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #36
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #6
sta.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #65471
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r1
adc.w #6
sta.b tcc__r1
; load 0
; type 17 reg 0x5101 extra 0x0
; ld1 [tcc__r1,0],tcc__r0
lda.w #0
sep #$20
lda.b [tcc__r1]
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #65471
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; gjmp_addr 0 at 44136
jmp.w __local_8
; gsym_addr t 44175 a 0 ind 44175
__local_7:
; gsym_addr t 39564 a 44209 ind 44209
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaobj + 0], tcc__r0
lda.l koopatroopaobj + 0
sta.b tcc__r0
lda.l koopatroopaobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #650,tcc__r1
lda.w #650
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_8:
; gsym_addr t 44175 a 44741 ind 44741
__local_6:
; gsym_addr t 38718 a 44779 ind 44779
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __koopatroopaupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objUpdateXY
; add sp, #2
pla
__local_2:
; gsym_addr t 25380 a 45134 ind 45134
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [koopatroopaoy + 0], tcc__r0
lda.l koopatroopaoy + 0
sta.b tcc__r0
lda.l koopatroopaoy + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [y_pos + 0], tcc__r0
lda.l y_pos + 0
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x0 fc 0x0
; st2 tcc__r1, [koopatroopay,0]
lda.b tcc__r1
sta.l koopatroopay + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopax + 0], tcc__r0
lda.l koopatroopax + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [x_pos + 0], tcc__r1
lda.l x_pos + 0
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x0
; st2 tcc__r0, [koopatroopax,0]
lda.b tcc__r0
sta.l koopatroopax + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x3f0 extra 0x0
; ld2 [koopatroopax + 0], tcc__r0
lda.l koopatroopax + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 0 reg 0x3f0 extra 0x0
; ld2 [koopatroopay + 0], tcc__r0
lda.l koopatroopay + 0
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x0)
; length xxy 2 vtop->type 0x0
sec
lda.b tcc__r0
sbc.w #16
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l oamDynamic16Draw
; add sp, #2
pla
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x3d
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [koopatroopanum,0]
lda.b tcc__r0
sta.l koopatroopanum + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 0 reg 0x3f0 extra 0x0
; ld2 [koopatroopax + 0], tcc__r0
lda.l koopatroopax + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #4
lda.b tcc__r0
asl a
asl a
asl a
asl a
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld2048 #oambuffer + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oambuffer
sta.b tcc__r1h
lda.w #oambuffer + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x0)
; length xxy 2048 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
inc.b tcc__r1
inc.b tcc__r1
; load 0
; type 0 reg 0x3f0 extra 0x0
; ld2 [koopatroopay + 0], tcc__r0
lda.l koopatroopay + 0
sta.b tcc__r0
; store r 0x0 fr 0x101 ft 0x0 fc 0x0
; st2 tcc__r0, [tcc__r1,0]
lda.b tcc__r0
sta.b [tcc__r1]
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [koopatroopanum + 0], tcc__r0
lda.l koopatroopanum + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l oamDynamic16Draw
; add sp, #2
pla
; gsym_addr t 0 a 50811 ind 50811
; add sp, #__koopatroopaupdate_locals
.ifgr __koopatroopaupdate_locals 0
tsa
clc
adc #__koopatroopaupdate_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ramtmpxfileMMx3Y4.data" APPENDTO "globram.data"
__local_dummytmpxfileMMx3Y4.data dsb 1

.ENDS

.SECTION "tmpxfileMMx3Y4.data" APPENDTO "glob.data"

__local_dummytmpxfileMMx3Y4.data: .db 0
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.tmpxfileMMx3Y48: .db $6b,$6f,$6f,$70,$61,$74,$72,$6f,$6f,$70,$61,$69,$6e,$69,$74,$20,$25,$64,$20,$25,$64,$a,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
koopatroopaobj dsb 4
koopatroopaox dsb 4
koopatroopaoy dsb 4
koopatroopax dsb 2
koopatroopay dsb 2
koopatroopanum dsb 2
.ENDS
