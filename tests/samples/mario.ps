.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __marioinit_locals 0
.define __mariowalk_locals 0
.define __mariofall_locals 0
.define __mariojump_locals 0
.define __marioupdate_locals 0

.SECTION ".text_0x0" SUPERFREE

marioinit:
; sub sp,#__marioinit_locals
.ifgr __marioinit_locals 0
tsa
sec
sbc #__marioinit_locals
tas
.endif
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x8e82958
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x8e82958
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x2f0
pea.w :tccs_L.tmpxfilecLXpfa8
pea.w tccs_L.tmpxfilecLXpfa8 + 0
; call r 0x2f0
jsr.l consoleNocashMessage
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0x1f2 extra 0xffa169f0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 9
lda 7 + __marioinit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 7 r type 0x86)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #255
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x11 reg 0x0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l objNew
; add sp, #5
tsa
clc
adc #5
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 1845 ind 1845
; gsym_addr t 0 a 1882 ind 1882
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 2001 ind 2001
; cmp op 0x95 inv 1 v 243 r 2001
; cmp ne
bne +
; gsym_addr t 0 a 2088 ind 2088
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 2001
; gjmp_addr 0 at 2191
jmp.w __local_1
; gsym_addr t 2229 a 0 ind 2229
__local_0:
; gsym_addr t 2001 a 2261 ind 2261
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objgetid + 0], tcc__r0
lda.l objgetid + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objGetPointer
; add sp, #2
pla
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objgetid + 0], tcc__r0
lda.l objgetid + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [marioid,0]
lda.b tcc__r0
sta.l marioid + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objptr + 0], tcc__r0
lda.l objptr + 0
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
dec.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld4096 #objbuffers + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:objbuffers
sta.b tcc__r1h
lda.w #objbuffers + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x4)
; length xxy 4096 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r1, [marioobj,0]
lda.b tcc__r1
sta.l marioobj + 0
lda.b tcc__r1h
sta.l marioobj + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #26
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #28
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioox,0]
lda.b tcc__r0
sta.l marioox + 0
lda.b tcc__r0h
sta.l marioox + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #19
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [mariooy,0]
lda.b tcc__r0
sta.l mariooy + 0
lda.b tcc__r0h
sta.l mariooy + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioxv,0]
lda.b tcc__r0
sta.l marioxv + 0
lda.b tcc__r0h
sta.l marioxv + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #36
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioyv,0]
lda.b tcc__r0
sta.l marioyv + 0
lda.b tcc__r0h
sta.l marioyv + 0 + 2
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda 3 + __marioinit_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x0
; st2 tcc__r0, [oambuffer,0]
lda.b tcc__r0
sta.l oambuffer + 0
; load 0
; type 0 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x2
; st2 tcc__r0, [oambuffer,2]
lda.b tcc__r0
sta.l oambuffer + 2
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [oambuffer,4]
lda.b tcc__r0
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #32,tcc__r0
lda.w #32
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x6
; st1 tcc__r0, [oambuffer,6]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 6
rep #$20
; load 0
; type 4 reg 0x52f0 extra 0x0
; ld4 #sprmario + 0, tcc__r0 (type 0x4)
lda.w #:sprmario
sta.b tcc__r0h
lda.w #sprmario + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x8
; st4 tcc__r0, [oambuffer,8]
lda.b tcc__r0
sta.l oambuffer + 8
lda.b tcc__r0h
sta.l oambuffer + 8 + 2
__local_1:
; gsym_addr t 2229 a 8727 ind 8727
; add sp, #__marioinit_locals
.ifgr __marioinit_locals 0
tsa
clc
adc #__marioinit_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x1" SUPERFREE

mariowalk:
; sub sp,#__mariowalk_locals
.ifgr __mariowalk_locals 0
tsa
sec
sbc #__mariowalk_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [flip + 0], tcc__r0
lda.w #0
sep #$20
lda.l flip + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x3d
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [flip,0]
sep #$20
lda.b tcc__r0
sta.l flip + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [flip + 0], tcc__r0
lda.w #0
sep #$20
lda.l flip + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x0)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #1
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 9781 ind 9781
; gsym_addr t 0 a 9818 ind 9818
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 9906 ind 9906
; cmp op 0x95 inv 1 v 243 r 9906
; cmp ne
bne +
; gsym_addr t 0 a 9993 ind 9993
brl __local_2
+
; gtst finished; t 9906
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r0
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x30ffffff
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r0
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #3
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 1
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r1
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r1
; load 2
; type 36 reg 0x2f0 extra 0x0
; ld4 #sprTiles + 0, tcc__r2 (type 0x24)
lda.w #:sprTiles
sta.b tcc__r2h
lda.w #sprTiles + 0
sta.b tcc__r2
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r2 (0x2) (fr type 0x24 c 0 r type 0x10)
; length xxy 4 vtop->type 0x24
clc
lda.b tcc__r2
adc.b tcc__r1
sta.b tcc__r2
; load 1
; type 1 reg 0x1102 extra 0x0
; ld1 [tcc__r2,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r2]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x10)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r1, [oambuffer,4]
lda.b tcc__r1
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
__local_2:
; gsym_addr t 9906 a 12669 ind 12669
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x95
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 13048 ind 13048
; gsym_addr t 0 a 13087 ind 13087
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 13177 ind 13177
; cmp op 0x95 inv 1 v 243 r 13177
; cmp ne
bne +
; gsym_addr t 0 a 13267 ind 13267
brl __local_3
+
; gtst finished; t 13177
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #4,tcc__r1
lda.w #4
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 13814
jmp.w __local_4
; gsym_addr t 13853 a 0 ind 13853
__local_3:
; gsym_addr t 13177 a 13887 ind 13887
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 14267 ind 14267
; gsym_addr t 0 a 14306 ind 14306
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 14396 ind 14396
; cmp op 0x95 inv 1 v 243 r 14396
; cmp ne
bne +
; gsym_addr t 0 a 14486 ind 14486
brl __local_5
+
; gtst finished; t 14396
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 14396 v 5 r 14903 ind 14903
; gsym_addr t 14396 a 14946 ind 14946
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 14396 v 243 r 15040 ind 15040
; cmp op 0x95 inv 1 v 243 r 15040
; cmp ne
bne +
__local_5:
; gsym_addr t 14396 a 15134 ind 15134
brl __local_6
+
; gtst finished; t 15040
; gtst inv 1 t 0 v 245 r 15213 ind 15213
; VT_jmp r 15213 t 0 ji 1 inv 1 vtop->c.i 15040
; gsym_addr t 0 a 15302 ind 15302
; gtst finished; t 15040
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_6:
; gsym_addr t 15040 a 15833 ind 15833
__local_4:
; gsym_addr t 13853 a 15871 ind 15871
; gsym_addr t 0 a 15909 ind 15909
; add sp, #__mariowalk_locals
.ifgr __mariowalk_locals 0
tsa
clc
adc #__mariowalk_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x2" SUPERFREE

mariofall:
; sub sp,#__mariofall_locals
.ifgr __mariofall_locals 0
tsa
sec
sbc #__mariofall_locals
tas
.endif
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 16538 ind 16538
; gsym_addr t 0 a 16577 ind 16577
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 16667 ind 16667
; cmp op 0x95 inv 1 v 243 r 16667
; cmp ne
bne +
; gsym_addr t 0 a 16757 ind 16757
brl __local_7
+
; gtst finished; t 16667
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [oambuffer,4]
lda.b tcc__r0
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
__local_7:
; gsym_addr t 16667 a 17681 ind 17681
; gsym_addr t 0 a 17719 ind 17719
; add sp, #__mariofall_locals
.ifgr __mariofall_locals 0
tsa
clc
adc #__mariofall_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x3" SUPERFREE

mariojump:
; sub sp,#__mariojump_locals
.ifgr __mariojump_locals 0
tsa
sec
sbc #__mariojump_locals
tas
.endif
; load 0
; type 16 reg 0xf0 extra 0x0
; ld2 #4,tcc__r0
lda.w #4
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x4
; st2 tcc__r0, [oambuffer,4]
lda.b tcc__r0
sta.l oambuffer + 4
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x7
; st1 tcc__r0, [oambuffer,7]
sep #$20
lda.b tcc__r0
sta.l oambuffer + 7
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 18727 ind 18727
; gsym_addr t 0 a 18766 ind 18766
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 18856 ind 18856
; cmp op 0x95 inv 1 v 243 r 18856
; cmp ne
bne +
; gsym_addr t 0 a 18946 ind 18946
brl __local_8
+
; gtst finished; t 18856
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #4,tcc__r1
lda.w #4
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_8:
; gsym_addr t 18856 a 19493 ind 19493
; gsym_addr t 0 a 19531 ind 19531
; add sp, #__mariojump_locals
.ifgr __mariojump_locals 0
tsa
clc
adc #__mariojump_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x4" SUPERFREE

marioupdate:
; sub sp,#__marioupdate_locals
.ifgr __marioupdate_locals 0
tsa
sec
sbc #__marioupdate_locals
tas
.endif
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld4096 #objbuffers + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:objbuffers
sta.b tcc__r1h
lda.w #objbuffers + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x4)
; length xxy 4096 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r1, [marioobj,0]
lda.b tcc__r1
sta.l marioobj + 0
lda.b tcc__r1h
sta.l marioobj + 0 + 2
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [pad_keys + 0], tcc__r0
lda.l pad_keys + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [pad0,0]
lda.b tcc__r0
sta.l pad0 + 0
; gtst inv 1 t 0 v 240 r 20790 ind 20790
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gsym_addr t 0 a 20925 ind 20925
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 21015 ind 21015
; cmp op 0x95 inv 1 v 243 r 21015
; cmp ne
bne +
; gsym_addr t 0 a 21105 ind 21105
brl __local_9
+
; gtst finished; t 21015
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #512
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 21440 ind 21440
; gsym_addr t 0 a 21479 ind 21479
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 21569 ind 21569
; cmp op 0x95 inv 1 v 243 r 21569
; cmp ne
bne +
; gsym_addr t 0 a 21659 ind 21659
brl __local_10
+
; gtst finished; t 21569
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.w #56
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r1, #65216
ldx #1
lda.b tcc__r1
sec
sbc.w #65216
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 23251 ind 23251
; gsym_addr t 0 a 23290 ind 23290
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 23380 ind 23380
; cmp op 0x95 inv 1 v 243 r 23380
; cmp ne
bne +
; gsym_addr t 0 a 23470 ind 23470
brl __local_11
+
; gtst finished; t 23380
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #65216,tcc__r1
lda.w #65216
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_11:
; gsym_addr t 23380 a 23863 ind 23863
__local_10:
; gsym_addr t 21569 a 23901 ind 23901
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #256
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 24199 ind 24199
; gsym_addr t 0 a 24238 ind 24238
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 24328 ind 24328
; cmp op 0x95 inv 1 v 243 r 24328
; cmp ne
bne +
; gsym_addr t 0 a 24418 ind 24418
brl __local_12
+
; gtst finished; t 24328
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r1
adc.w #56
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r1, #320
ldx #1
lda.b tcc__r1
sec
sbc.w #320
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 25999 ind 25999
; gsym_addr t 0 a 26038 ind 26038
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 26128 ind 26128
; cmp op 0x95 inv 1 v 243 r 26128
; cmp ne
bne +
; gsym_addr t 0 a 26218 ind 26218
brl __local_13
+
; gtst finished; t 26128
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #320,tcc__r1
lda.w #320
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_13:
; gsym_addr t 26128 a 26607 ind 26607
__local_12:
; gsym_addr t 24328 a 26645 ind 26645
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #128
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 26943 ind 26943
; gsym_addr t 0 a 26982 ind 26982
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 27072 ind 27072
; cmp op 0x95 inv 1 v 243 r 27072
; cmp ne
bne +
; gsym_addr t 0 a 27162 ind 27162
brl __local_14
+
; gtst finished; t 27072
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #38
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x95
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 27743 ind 27743
; gsym_addr t 0 a 27782 ind 27782
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 27872 ind 27872
; cmp op 0x95 inv 1 v 243 r 27872
; cmp ne
bne +
; gsym_addr t 0 a 27962 ind 27962
brl __local_15
+
; gtst finished; t 27872
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #2,tcc__r1
lda.w #2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #2048
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 28771 ind 28771
; gsym_addr t 0 a 28810 ind 28810
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 28900 ind 28900
; cmp op 0x95 inv 1 v 243 r 28900
; cmp ne
bne +
; gsym_addr t 0 a 28990 ind 28990
brl __local_16
+
; gtst finished; t 28900
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #64108,tcc__r1
lda.w #64108
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 29383
jmp.w __local_17
; gsym_addr t 29423 a 0 ind 29423
__local_16:
; gsym_addr t 28900 a 29457 ind 29457
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #64620,tcc__r1
lda.w #64620
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_17:
; gsym_addr t 29423 a 29812 ind 29812
__local_15:
; gsym_addr t 27872 a 29850 ind 29850
__local_14:
; gsym_addr t 27072 a 29888 ind 29888
__local_9:
; gsym_addr t 21015 a 29926 ind 29926
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objCollidMap
; add sp, #2
pla
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #1
ldx #1
lda.b tcc__r1
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 30781 ind 30781
; gsym_addr t 0 a 30820 ind 30820
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 30910 ind 30910
; cmp op 0x95 inv 1 v 243 r 30910
; cmp ne
bne +
; gsym_addr t 0 a 31000 ind 31000
brl __local_18
+
; gtst finished; t 30910
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariowalk
; add sp, #1
tsa
clc
adc #1
tas
; gjmp_addr 0 at 31424
jmp.w __local_19
; gsym_addr t 31464 a 0 ind 31464
__local_18:
; gsym_addr t 30910 a 31498 ind 31498
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #4
ldx #1
lda.b tcc__r1
sec
sbc #4
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 32041 ind 32041
; gsym_addr t 0 a 32080 ind 32080
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 32170 ind 32170
; cmp op 0x95 inv 1 v 243 r 32170
; cmp ne
bne +
; gsym_addr t 0 a 32260 ind 32260
brl __local_20
+
; gtst finished; t 32170
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariofall
; add sp, #1
tsa
clc
adc #1
tas
; gjmp_addr 0 at 32684
jmp.w __local_21
; gsym_addr t 32724 a 0 ind 32724
__local_20:
; gsym_addr t 32170 a 32758 ind 32758
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #2
ldx #1
lda.b tcc__r1
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 33301 ind 33301
; gsym_addr t 0 a 33340 ind 33340
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 33430 ind 33430
; cmp op 0x95 inv 1 v 243 r 33430
; cmp ne
bne +
; gsym_addr t 0 a 33520 ind 33520
brl __local_22
+
; gtst finished; t 33430
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariojump
; add sp, #1
tsa
clc
adc #1
tas
__local_22:
; gsym_addr t 33430 a 33944 ind 33944
__local_21:
; gsym_addr t 32724 a 33982 ind 33982
__local_19:
; gsym_addr t 31464 a 34020 ind 34020
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objUpdateXY
; add sp, #2
pla
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioox + 0], tcc__r0
lda.l marioox + 0
sta.b tcc__r0
lda.l marioox + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [mariox,0]
lda.b tcc__r1
sta.l mariox + 0
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [mariooy + 0], tcc__r0
lda.l mariooy + 0
sta.b tcc__r0
lda.l mariooy + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [marioy,0]
lda.b tcc__r1
sta.l marioy + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [mariox + 0], tcc__r0
lda.l mariox + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [x_pos + 0], tcc__r1
lda.l x_pos + 0
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x0
; st2 tcc__r0, [oambuffer,0]
lda.b tcc__r0
sta.l oambuffer + 0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [marioy + 0], tcc__r0
lda.l marioy + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x0
; ld2 [y_pos + 0], tcc__r1
lda.l y_pos + 0
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r1
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x0 fc 0x2
; st2 tcc__r0, [oambuffer,2]
lda.b tcc__r0
sta.l oambuffer + 2
; push2 imm r 0xf0
pea.w 0
; call r 0x2f0
jsr.l oamDynamic16Draw
; add sp, #2
pla
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [marioy + 0], tcc__r0
lda.l marioy + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [mariox + 0], tcc__r0
lda.l mariox + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l mapUpdateCamera
; add sp, #4
tsa
clc
adc #4
tas
; gsym_addr t 0 a 36468 ind 36468
; add sp, #__marioupdate_locals
.ifgr __marioupdate_locals 0
tsa
clc
adc #__marioupdate_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ramtmpxfilecLXpfa.data" APPENDTO "globram.data"

sprTiles dsb 4

.ENDS

.SECTION "tmpxfilecLXpfa.data" APPENDTO "glob.data"

.db $0,$1,$2,$3
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.tmpxfilecLXpfa8: .db $6d,$61,$72,$69,$6f,$69,$6e,$69,$74,$20,$25,$64,$20,$25,$64,$a,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
pad0 dsb 2
marioid dsb 2
marioobj dsb 4
marioox dsb 4
mariooy dsb 4
marioxv dsb 4
marioyv dsb 4
mariox dsb 2
marioy dsb 2
mariofidx dsb 1
marioflp dsb 1
flip dsb 1
.ENDS
