.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __marioinit_locals 0
.define __mariowalk_locals 0
.define __mariofall_locals 0
.define __mariojump_locals 0
.define __marioupdate_locals 0

.SECTION ".text_0x0" SUPERFREE

marioinit:
; sub sp,#__marioinit_locals
.ifgr __marioinit_locals 0
tsa
sec
sbc #__marioinit_locals
tas
.endif
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x1
; ld2 [sp,5],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x1f2
; load 0
; type 16 reg 0x1f2 extra 0x1
; ld2 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; push4 imm r 0x12f0
pea.w :tccs_L.7
pea.w tccs_L.7 + 0
; call r 0x2f0
jsr.l consoleNocashMessage
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 16 reg 0x1f2 extra 0xece50af0
; ld2 [sp,7],tcc__r0
; stack adjust: fc + disp - loc 9
lda 7 + __marioinit_locals + 1,s
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 7 r type 0x86)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #255
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,5],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x10 reg 0x1f2
; load 1
; type 16 reg 0x1f2 extra 0x0
; ld2 [sp,3],tcc__r1
; stack adjust: fc + disp - loc 7
lda 5 + __marioinit_locals + 1,s
sta.b tcc__r1
; ldpush2 (type 0x10 reg 0x1) tcc__r1
pei (tcc__r1)
; ldpush before load type 0x11 reg 0x0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l objNew
; add sp, #5
tsa
clc
adc #5
tas
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #0
ldx #1
lda.b tcc__r0
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 1806 ind 1806
; gsym_addr t 0 a 1843 ind 1843
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 1962 ind 1962
; cmp op 0x95 inv 1 v 243 r 1962
; cmp ne
bne +
; gsym_addr t 0 a 2049 ind 2049
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 1962
; gjmp_addr 0 at 2152
jmp.w __local_1
; gsym_addr t 2190 a 0 ind 2190
__local_0:
; gsym_addr t 1962 a 2222 ind 2222
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objgetid + 0], tcc__r0
lda.l objgetid + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objGetPointer
; add sp, #2
pla
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [objgetid + 0], tcc__r0
lda.l objgetid + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [marioid,0]
lda.b tcc__r0
sta.l marioid + 0
; load 0
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [objptr + 0], tcc__r0
lda.l objptr + 0
sta.b tcc__r0
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
dec.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld4096 #objbuffers + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:objbuffers
sta.b tcc__r1h
lda.w #objbuffers + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x4)
; length xxy 4096 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r1, [marioobj,0]
lda.b tcc__r1
sta.l marioobj + 0
lda.b tcc__r1h
sta.l marioobj + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #26
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #28
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #16,tcc__r1
lda.w #16
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #16
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioox,0]
lda.b tcc__r0
sta.l marioox + 0
lda.b tcc__r0h
sta.l marioox + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #19
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x24 c 0 r type 0x4)
; length xxy 3 vtop->type 0x24
inc.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [mariooy,0]
lda.b tcc__r0
sta.l mariooy + 0
lda.b tcc__r0h
sta.l mariooy + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #34
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioxv,0]
lda.b tcc__r0
sta.l marioxv + 0
lda.b tcc__r0h
sta.l marioxv + 0 + 2
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x4)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #36
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r0, [marioyv,0]
lda.b tcc__r0
sta.l marioyv + 0
lda.b tcc__r0h
sta.l marioyv + 0 + 2
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_1:
; gsym_addr t 2190 a 7354 ind 7354
; add sp, #__marioinit_locals
.ifgr __marioinit_locals 0
tsa
clc
adc #__marioinit_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x1" SUPERFREE

mariowalk:
; sub sp,#__mariowalk_locals
.ifgr __mariowalk_locals 0
tsa
sec
sbc #__mariowalk_locals
tas
.endif
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [flip + 0], tcc__r0
lda.w #0
sep #$20
lda.l flip + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [flip,0]
sep #$20
lda.b tcc__r0
sta.l flip + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [flip + 0], tcc__r0
lda.w #0
sep #$20
lda.l flip + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x6)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #1
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 8407 ind 8407
; gsym_addr t 0 a 8444 ind 8444
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 8532 ind 8532
; cmp op 0x95 inv 1 v 243 r 8532
; cmp ne
bne +
; gsym_addr t 0 a 8619 ind 8619
brl __local_2
+
; gtst finished; t 8532
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r0
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r0
; load 1
; type 0 reg 0x0 extra 0x0
; mov tcc__r0, tcc__r1
lda.b tcc__r0
sta.b tcc__r1
lda.b tcc__r0h
sta.b tcc__r1h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
inc.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r0
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
and.w #3
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [mariofidx,0]
sep #$20
lda.b tcc__r0
sta.l mariofidx + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 1
; type 17 reg 0x53f0 extra 0x0
; ld1 [mariofidx + 0], tcc__r1
lda.w #0
sep #$20
lda.l mariofidx + 0
rep #$20
sta.b tcc__r1
; load 2
; type 36 reg 0x2f0 extra 0x0
; ld4 #sprTiles + 0, tcc__r2 (type 0x24)
lda.w #:sprTiles
sta.b tcc__r2h
lda.w #sprTiles + 0
sta.b tcc__r2
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r2 (0x2) (fr type 0x24 c 0 r type 0x10)
; length xxy 4 vtop->type 0x24
clc
lda.b tcc__r2
adc.b tcc__r1
sta.b tcc__r2
; load 1
; type 1 reg 0x1102 extra 0x0
; ld1 [tcc__r2,0],tcc__r1
lda.w #0
sep #$20
lda.b [tcc__r2]
rep #$20
xba
xba
bpl +
ora.w #$ff00
+
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_2:
; gsym_addr t 8532 a 10594 ind 10594
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x95
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 10973 ind 10973
; gsym_addr t 0 a 11012 ind 11012
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 11102 ind 11102
; cmp op 0x95 inv 1 v 243 r 11102
; cmp ne
bne +
; gsym_addr t 0 a 11192 ind 11192
brl __local_3
+
; gtst finished; t 11102
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #4,tcc__r1
lda.w #4
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 11739
jmp.w __local_4
; gsym_addr t 11778 a 0 ind 11778
__local_3:
; gsym_addr t 11102 a 11812 ind 11812
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 12192 ind 12192
; gsym_addr t 0 a 12231 ind 12231
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 12321 ind 12321
; cmp op 0x95 inv 1 v 243 r 12321
; cmp ne
bne +
; gsym_addr t 0 a 12411 ind 12411
brl __local_5
+
; gtst finished; t 12321
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 12321 v 5 r 12828 ind 12828
; gsym_addr t 12321 a 12871 ind 12871
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 12321 v 243 r 12965 ind 12965
; cmp op 0x95 inv 1 v 243 r 12965
; cmp ne
bne +
__local_5:
; gsym_addr t 12321 a 13059 ind 13059
brl __local_6
+
; gtst finished; t 12965
; gtst inv 1 t 0 v 245 r 13138 ind 13138
; VT_jmp r 13138 t 0 ji 1 inv 1 vtop->c.i 12965
; gsym_addr t 0 a 13227 ind 13227
; gtst finished; t 12965
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_6:
; gsym_addr t 12965 a 13758 ind 13758
__local_4:
; gsym_addr t 11778 a 13796 ind 13796
; gsym_addr t 0 a 13834 ind 13834
; add sp, #__mariowalk_locals
.ifgr __mariowalk_locals 0
tsa
clc
adc #__mariowalk_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x2" SUPERFREE

mariofall:
; sub sp,#__mariofall_locals
.ifgr __mariofall_locals 0
tsa
sec
sbc #__mariofall_locals
tas
.endif
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 14463 ind 14463
; gsym_addr t 0 a 14502 ind 14502
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 14592 ind 14592
; cmp op 0x95 inv 1 v 243 r 14592
; cmp ne
bne +
; gsym_addr t 0 a 14682 ind 14682
brl __local_7
+
; gtst finished; t 14592
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #0,tcc__r1
lda.w #0
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_7:
; gsym_addr t 14592 a 15701 ind 15701
; gsym_addr t 0 a 15739 ind 15739
; add sp, #__mariofall_locals
.ifgr __mariofall_locals 0
tsa
clc
adc #__mariofall_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x3" SUPERFREE

mariojump:
; sub sp,#__mariojump_locals
.ifgr __mariojump_locals 0
tsa
sec
sbc #__mariojump_locals
tas
.endif
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #8,tcc__r1
lda.w #8
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc.w #0
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 16842 ind 16842
; gsym_addr t 0 a 16881 ind 16881
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 16971 ind 16971
; cmp op 0x95 inv 1 v 243 r 16971
; cmp ne
bne +
; gsym_addr t 0 a 17061 ind 17061
brl __local_8
+
; gtst finished; t 16971
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #4,tcc__r1
lda.w #4
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_8:
; gsym_addr t 16971 a 17608 ind 17608
; gsym_addr t 0 a 17646 ind 17646
; add sp, #__mariojump_locals
.ifgr __mariojump_locals 0
tsa
clc
adc #__mariojump_locals
tas
.endif
rtl
.ENDS

.SECTION ".text_0x4" SUPERFREE

marioupdate:
; sub sp,#__marioupdate_locals
.ifgr __marioupdate_locals 0
tsa
sec
sbc #__marioupdate_locals
tas
.endif
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld4096 #objbuffers + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:objbuffers
sta.b tcc__r1h
lda.w #objbuffers + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x4)
; length xxy 4096 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x4 fc 0x0
; st4 tcc__r1, [marioobj,0]
lda.b tcc__r1
sta.l marioobj + 0
lda.b tcc__r1h
sta.l marioobj + 0 + 2
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [pad_keys + 0], tcc__r0
lda.l pad_keys + 0
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r0, [pad0,0]
lda.b tcc__r0
sta.l pad0 + 0
; gtst inv 1 t 0 v 240 r 18905 ind 18905
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gsym_addr t 0 a 19040 ind 19040
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 19130 ind 19130
; cmp op 0x95 inv 1 v 243 r 19130
; cmp ne
bne +
; gsym_addr t 0 a 19220 ind 19220
brl __local_9
+
; gtst finished; t 19130
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x6)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #512
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 19555 ind 19555
; gsym_addr t 0 a 19594 ind 19594
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 19684 ind 19684
; cmp op 0x95 inv 1 v 243 r 19684
; cmp ne
bne +
; gsym_addr t 0 a 19774 ind 19774
brl __local_10
+
; gtst finished; t 19684
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #1,tcc__r0
lda.w #1
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op -
; sbc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.w #56
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x96
; ucmpcd tcc__r1, #-320
ldx #1
lda.b tcc__r1
sec
sbc.w #-320
tay
beq ++
bcc ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 21364 ind 21364
; gsym_addr t 0 a 21403 ind 21403
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 21493 ind 21493
; cmp op 0x95 inv 1 v 243 r 21493
; cmp ne
bne +
; gsym_addr t 0 a 21583 ind 21583
brl __local_11
+
; gtst finished; t 21493
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #-320,tcc__r1
lda.w #65216
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_11:
; gsym_addr t 21493 a 21975 ind 21975
__local_10:
; gsym_addr t 19684 a 22013 ind 22013
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x6)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #256
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 22311 ind 22311
; gsym_addr t 0 a 22350 ind 22350
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 22440 ind 22440
; cmp op 0x95 inv 1 v 243 r 22440
; cmp ne
bne +
; gsym_addr t 0 a 22530 ind 22530
brl __local_12
+
; gtst finished; t 22440
; load 0
; type 17 reg 0xf0 extra 0x0
; ld1 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; store r 0x0 fr 0x53f0 ft 0x11 fc 0x0
; st1 tcc__r0, [marioflp,0]
sep #$20
lda.b tcc__r0
sta.l marioflp + 0
rep #$20
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #1,tcc__r1
lda.w #1
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x10)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r1
adc.w #56
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x93
; ucmpcd tcc__r1, #320
ldx #1
lda.b tcc__r1
sec
sbc.w #320
tay
bcs ++
+ dex
++
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 24111 ind 24111
; gsym_addr t 0 a 24150 ind 24150
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 24240 ind 24240
; cmp op 0x95 inv 1 v 243 r 24240
; cmp ne
bne +
; gsym_addr t 0 a 24330 ind 24330
brl __local_13
+
; gtst finished; t 24240
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioxv + 0], tcc__r0
lda.l marioxv + 0
sta.b tcc__r0
lda.l marioxv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #320,tcc__r1
lda.w #320
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_13:
; gsym_addr t 24240 a 24719 ind 24719
__local_12:
; gsym_addr t 22440 a 24757 ind 24757
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x6)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #128
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 25055 ind 25055
; gsym_addr t 0 a 25094 ind 25094
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 25184 ind 25184
; cmp op 0x95 inv 1 v 243 r 25184
; cmp ne
bne +
; gsym_addr t 0 a 25274 ind 25274
brl __local_14
+
; gtst finished; t 25184
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #38
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x95
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x95
; cmpr(n)eq tcc__r1, #0
ldx #1
lda.b tcc__r1
sec
sbc #0
tay
bne +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 25855 ind 25855
; gsym_addr t 0 a 25894 ind 25894
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 25984 ind 25984
; cmp op 0x95 inv 1 v 243 r 25984
; cmp ne
bne +
; gsym_addr t 0 a 26074 ind 26074
brl __local_15
+
; gtst finished; t 25984
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #2,tcc__r1
lda.w #2
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; load 0
; type 16 reg 0x3f0 extra 0x26
; ld2 [pad0 + 0], tcc__r0
lda.l pad0 + 0
sta.b tcc__r0
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x6)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
and.w #2048
sta.b tcc__r0
; gtst inv 1 t 0 v 0 r 26883 ind 26883
; gsym_addr t 0 a 26922 ind 26922
; tcc__r0 to compare reg
lda.b tcc__r0 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 27012 ind 27012
; cmp op 0x95 inv 1 v 243 r 27012
; cmp ne
bne +
; gsym_addr t 0 a 27102 ind 27102
brl __local_16
+
; gtst finished; t 27012
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #-1428,tcc__r1
lda.w #64108
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
; gjmp_addr 0 at 27495
jmp.w __local_17
; gsym_addr t 27535 a 0 ind 27535
__local_16:
; gsym_addr t 27012 a 27569 ind 27569
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioyv + 0], tcc__r0
lda.l marioyv + 0
sta.b tcc__r0
lda.l marioyv + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0xf0 extra 0x0
; ld2 #-916,tcc__r1
lda.w #64620
sta.b tcc__r1
; store r 0x1 fr 0x100 ft 0x10 fc 0x0
; st2 tcc__r1, [tcc__r0,0]
lda.b tcc__r1
sta.b [tcc__r0]
__local_17:
; gsym_addr t 27535 a 27923 ind 27923
__local_15:
; gsym_addr t 25984 a 27961 ind 27961
__local_14:
; gsym_addr t 25184 a 27999 ind 27999
__local_9:
; gsym_addr t 19130 a 28037 ind 28037
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objCollidMap
; add sp, #2
pla
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #1
ldx #1
lda.b tcc__r1
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 28892 ind 28892
; gsym_addr t 0 a 28931 ind 28931
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 29021 ind 29021
; cmp op 0x95 inv 1 v 243 r 29021
; cmp ne
bne +
; gsym_addr t 0 a 29111 ind 29111
brl __local_18
+
; gtst finished; t 29021
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariowalk
; add sp, #1
tsa
clc
adc #1
tas
; gjmp_addr 0 at 29535
jmp.w __local_19
; gsym_addr t 29575 a 0 ind 29575
__local_18:
; gsym_addr t 29021 a 29609 ind 29609
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #4
ldx #1
lda.b tcc__r1
sec
sbc #4
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 30152 ind 30152
; gsym_addr t 0 a 30191 ind 30191
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 30281 ind 30281
; cmp op 0x95 inv 1 v 243 r 30281
; cmp ne
bne +
; gsym_addr t 0 a 30371 ind 30371
brl __local_20
+
; gtst finished; t 30281
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariofall
; add sp, #1
tsa
clc
adc #1
tas
; gjmp_addr 0 at 30795
jmp.w __local_21
; gsym_addr t 30835 a 0 ind 30835
__local_20:
; gsym_addr t 30281 a 30869 ind 30869
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x6)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #46
sta.b tcc__r0
; load 1
; type 16 reg 0x100 extra 0x94
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r1, #2
ldx #1
lda.b tcc__r1
sec
sbc #2
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 31412 ind 31412
; gsym_addr t 0 a 31451 ind 31451
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 31541 ind 31541
; cmp op 0x95 inv 1 v 243 r 31541
; cmp ne
bne +
; gsym_addr t 0 a 31631 ind 31631
brl __local_22
+
; gtst finished; t 31541
; ldpush before load type 0x11 reg 0x1f2
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush1 (type 0x11 reg 0x0) tcc__r0
sep #$20
lda.b tcc__r0
pha
rep #$20
; call r 0x2f0
jsr.l mariojump
; add sp, #1
tsa
clc
adc #1
tas
__local_22:
; gsym_addr t 31541 a 32055 ind 32055
__local_21:
; gsym_addr t 30835 a 32093 ind 32093
__local_19:
; gsym_addr t 29575 a 32131 ind 32131
; load 0
; type 17 reg 0x1f2 extra 0x0
; ld1 [sp,3],tcc__r0
; stack adjust: fc + disp - loc 5
lda.w #0
sep #$20
lda 3 + __marioupdate_locals + 1,s
rep #$20
sta.b tcc__r0
; ldpush before load type 0x10 reg 0x0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l objUpdateXY
; add sp, #2
pla
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioox + 0], tcc__r0
lda.l marioox + 0
sta.b tcc__r0
lda.l marioox + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [mariox,0]
lda.b tcc__r1
sta.l mariox + 0
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [mariooy + 0], tcc__r0
lda.l mariooy + 0
sta.b tcc__r0
lda.l mariooy + 0 + 2
sta.b tcc__r0h
; load 1
; type 16 reg 0x100 extra 0x0
; ld2 [tcc__r0,0],tcc__r1
lda.b [tcc__r0]
sta.b tcc__r1
; store r 0x1 fr 0x3f0 ft 0x10 fc 0x0
; st2 tcc__r1, [marioy,0]
lda.b tcc__r1
sta.l marioy + 0
; load 0
; type 164 reg 0x2f0 extra 0x0
; ld544 #oamMemory + 0, tcc__r0 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oamMemory
sta.b tcc__r0h
lda.w #oamMemory + 0
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0x495060
; ld2 [sprnum + 0], tcc__r1
lda.l sprnum + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r1 (0x1), tcc__r0 (0x0) (fr type 0xa4 c 0 r type 0x6)
; length xxy 544 vtop->type 0xa4
clc
lda.b tcc__r0
adc.b tcc__r1
sta.b tcc__r0
; load 1
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [mariox + 0], tcc__r1
lda.l mariox + 0
sta.b tcc__r1
; load 2
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [x_pos + 0], tcc__r2
lda.l x_pos + 0
sta.b tcc__r2
; gen_opi len 2 op -
; sbc tcc__r2 (0x2), tcc__r1 (0x1) (fr type 0x10 c 0 r type 0x11)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r1
sbc.b tcc__r2
sta.b tcc__r1
; store r 0x1 fr 0x5100 ft 0x11 fc 0x0
; st1 tcc__r1, [tcc__r0,0]
sep #$20
lda.b tcc__r1
sta.b [tcc__r0]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [sprnum + 0], tcc__r0
lda.l sprnum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld544 #oamMemory + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oamMemory
sta.b tcc__r1h
lda.w #oamMemory + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x6)
; length xxy 544 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [marioy + 0], tcc__r0
lda.l marioy + 0
sta.b tcc__r0
; load 2
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [y_pos + 0], tcc__r2
lda.l y_pos + 0
sta.b tcc__r2
; gen_opi len 2 op -
; sbc tcc__r2 (0x2), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x11)
; length xxy 2 vtop->type 0x10
sec
lda.b tcc__r0
sbc.b tcc__r2
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [sprnum + 0], tcc__r0
lda.l sprnum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
inc.b tcc__r0
inc.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld544 #oamMemory + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oamMemory
sta.b tcc__r1h
lda.w #oamMemory + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x6)
; length xxy 544 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r0
lda.l marioobj + 0
sta.b tcc__r0
lda.l marioobj + 0 + 2
sta.b tcc__r0h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x4 c 0 r type 0x11)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r0
adc.w #14
sta.b tcc__r0
; load 2
; type 17 reg 0x100 extra 0x0
; ld1 [tcc__r0,0],tcc__r2
lda.w #0
sep #$20
lda.b [tcc__r0]
rep #$20
sta.b tcc__r2
; store r 0x2 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r2, [tcc__r1,0]
sep #$20
lda.b tcc__r2
sta.b [tcc__r1]
rep #$20
; load 0
; type 16 reg 0x3f0 extra 0xffffffff
; ld2 [sprnum + 0], tcc__r0
lda.l sprnum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0xa4)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #3
sta.b tcc__r0
; load 1
; type 164 reg 0x2f0 extra 0x0
; ld544 #oamMemory + 0, tcc__r1 (type 0xa4)
; FISHY! length <> PTR_SIZE! (may be an array)
lda.w #:oamMemory
sta.b tcc__r1h
lda.w #oamMemory + 0
sta.b tcc__r1
; gen_opi len 2 op +
; adc tcc__r0 (0x0), tcc__r1 (0x1) (fr type 0xa4 c 0 r type 0x6)
; length xxy 544 vtop->type 0xa4
clc
lda.b tcc__r1
adc.b tcc__r0
sta.b tcc__r1
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [marioflp + 0], tcc__r0
lda.w #0
sep #$20
lda.l marioflp + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 
; shl tcc__r0, #6
lda.b tcc__r0
ldy.w #6
-
asl a
dey
bne -
+
sta.b tcc__r0
; gen_opi len 2 op |
; ora tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x0 c 0 r type 0x11)
; length xxy 2 vtop->type 0x0
; nop
lda.b tcc__r0
ora.w #48
sta.b tcc__r0
; load 2
; type 4 reg 0x3f0 extra 0x0
; ld4 [marioobj + 0], tcc__r2
lda.l marioobj + 0
sta.b tcc__r2
lda.l marioobj + 0 + 2
sta.b tcc__r2h
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r2 (0x2) (fr type 0x4 c 0 r type 0x0)
; length xxy 4 vtop->type 0x4
clc
lda.b tcc__r2
adc.w #14
sta.b tcc__r2
; load 3
; type 16 reg 0x102 extra 0xffffffff
; ld2 [tcc__r2,0],tcc__r3
lda.b [tcc__r2]
sta.b tcc__r3
; gen_opi len 2 op 0xcd
; shr tcc__r3, #8
lda.b tcc__r3
xba
and #$00ff
sta.b tcc__r3
; gen_opi len 2 op &
; and tcc__r240 (0xf0), tcc__r3 (0x3) (fr type 0x10 c 0 r type 0x0)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r3
and.w #1
sta.b tcc__r3
; gen_opi len 2 op |
; ora tcc__r3 (0x3), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x11)
; length xxy 2 vtop->type 0x10
; nop
lda.b tcc__r0
ora.b tcc__r3
sta.b tcc__r0
; store r 0x0 fr 0x5101 ft 0x11 fc 0x0
; st1 tcc__r0, [tcc__r1,0]
sep #$20
lda.b tcc__r0
sta.b [tcc__r1]
rep #$20
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [sprnum + 0], tcc__r0
lda.l sprnum + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l oamSetEx
; add sp, #4
tsa
clc
adc #4
tas
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [sprnum + 0], tcc__r0
lda.l sprnum + 0
sta.b tcc__r0
; gen_opi len 2 op +
; adc tcc__r240 (0xf0), tcc__r0 (0x0) (fr type 0x10 c 0 r type 0x90)
; length xxy 2 vtop->type 0x10
clc
lda.b tcc__r0
adc.w #4
sta.b tcc__r0
; store r 0x0 fr 0x3f0 ft 0x90 fc 0x0
; st2 tcc__r0, [sprnum,0]
lda.b tcc__r0
sta.l sprnum + 0
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [marioy + 0], tcc__r0
lda.l marioy + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; ldpush before load type 0x10 reg 0x3f0
; load 0
; type 16 reg 0x3f0 extra 0x0
; ld2 [mariox + 0], tcc__r0
lda.l mariox + 0
sta.b tcc__r0
; ldpush2 (type 0x10 reg 0x0) tcc__r0
pei (tcc__r0)
; call r 0x2f0
jsr.l mapUpdateCamera
; add sp, #4
tsa
clc
adc #4
tas
; gsym_addr t 0 a 39433 ind 39433
; add sp, #__marioupdate_locals
.ifgr __marioupdate_locals 0
tsa
clc
adc #__marioupdate_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ram.data" APPENDTO "globram.data"

sprTiles dsb 4

.ENDS

.SECTION ".data" APPENDTO "glob.data"

.db $0,$2,$4,$6
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.7: .db $6d,$61,$72,$69,$6f,$69,$6e,$69,$74,$20,$25,$64,$20,$25,$64,$a,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
pad0 dsb 2
marioid dsb 2
marioobj dsb 4
marioox dsb 4
mariooy dsb 4
marioxv dsb 4
marioyv dsb 4
mariox dsb 2
marioy dsb 2
mariofidx dsb 1
marioflp dsb 1
flip dsb 1
.ENDS
