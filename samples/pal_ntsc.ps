.include "hdr.asm"
.accu 16
.index 16
.16bit
.define __main_locals 0

.SECTION ".text_0x0" SUPERFREE

main:
; sub sp,#__main_locals
.ifgr __main_locals 0
tsa
sec
sbc #__main_locals
tas
.endif
; call r 0x2f0
jsr.l consoleInit
; push4 imm r 0x52f0
pea.w :snesfont
pea.w snesfont + 0
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; call r 0x2f0
jsr.l consoleInitText
; add sp, #6
tsa
clc
adc #6
tas
; push1 imm r 0xf0
sep #$20
lda #0
pha
rep #$20
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l setMode
; add sp, #2
pla
; push1 imm r 0xf0
sep #$20
lda #1
pha
rep #$20
; call r 0x2f0
jsr.l bgSetDisable
; add sp, #1
tsa
clc
adc #1
tas
; push1 imm r 0xf0
sep #$20
lda #2
pha
rep #$20
; call r 0x2f0
jsr.l bgSetDisable
; add sp, #1
tsa
clc
adc #1
tas
; push4 imm r 0x12f0
pea.w :tccs_L.7
pea.w tccs_L.7 + 0
; push2 imm r 0xf0
pea.w 10
; push2 imm r 0xf0
pea.w 10
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; load 0
; type 17 reg 0x53f0 extra 0x0
; ld1 [snes_50hz + 0], tcc__r0
lda.w #0
sep #$20
lda.l snes_50hz + 0
rep #$20
sta.b tcc__r0
; gen_opi len 2 op 0x94
; cmpr(n)eq tcc__r0, #1
ldx #1
lda.b tcc__r0
sec
sbc #1
tay
beq +
dex
+
stx.b tcc__r5
; gtst inv 1 t 0 v 5 r 1170 ind 1170
; gsym_addr t 0 a 1207 ind 1207
; ERROR no jump found to patch
; tcc__r5 to compare reg
lda.b tcc__r5 ; DON'T OPTIMIZE
; gtst inv 1 t 0 v 243 r 1326 ind 1326
; cmp op 0x95 inv 1 v 243 r 1326
; cmp ne
bne +
; gsym_addr t 0 a 1413 ind 1413
; ERROR no jump found to patch
brl __local_0
+
; gtst finished; t 1326
; push4 imm r 0x12f0
pea.w :tccs_L.8
pea.w tccs_L.8 + 0
; push2 imm r 0xf0
pea.w 14
; push2 imm r 0xf0
pea.w 5
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
; gjmp_addr 0 at 1696
jmp.w __local_1
; gsym_addr t 1734 a 0 ind 1734
__local_0:
; gsym_addr t 1326 a 1766 ind 1766
; push4 imm r 0x12f0
pea.w :tccs_L.9
pea.w tccs_L.9 + 0
; push2 imm r 0xf0
pea.w 14
; push2 imm r 0xf0
pea.w 5
; call r 0x2f0
jsr.l consoleDrawText
; add sp, #8
tsa
clc
adc #8
tas
__local_1:
; gsym_addr t 1734 a 1981 ind 1981
; call r 0x2f0
jsr.l setScreenOn
__local_2:
; gtst inv 1 t 0 v 240 r 2049 ind 2049
; uncond jump: nop
; gtst finished; t 0
; call r 0x2f0
jsr.l WaitForVBlank
; gjmp_addr 2049 at 2163
jmp.w __local_2
; gsym_addr t 2204 a 2049 ind 2204
; gsym_addr t 0 a 2239 ind 2239
; gsym_addr t 0 a 2049 ind 2271
; load 0
; type 0 reg 0xf0 extra 0x0
; ld2 #0,tcc__r0
lda.w #0
sta.b tcc__r0
; gjmp_addr 0 at 2380
jmp.w __local_3
; gsym_addr t 2418 a 0 ind 2418
__local_3:
; gsym_addr t 2418 a 2450 ind 2450
; add sp, #__main_locals
.ifgr __main_locals 0
tsa
clc
adc #__main_locals
tas
.endif
rtl
.ENDS
.RAMSECTION "ram.data" APPENDTO "globram.data"
__local_dummy.data dsb 1

.ENDS

.SECTION ".data" APPENDTO "glob.data"

__local_dummy.data: .db 0
.ENDS

.SECTION ".rodata" SUPERFREE

tccs_L.7: .db $48,$65,$6c,$6c,$6f,$20,$57,$6f,$72,$6c,$64,$20,$21,$0
tccs_L.8: .db $59,$4f,$55,$20,$55,$53,$45,$20,$41,$20,$50,$41,$4c,$20,$43,$4f,$4e,$53,$4f,$4c,$45,$0
tccs_L.9: .db $59,$4f,$55,$20,$55,$53,$45,$20,$41,$20,$4e,$54,$53,$43,$20,$43,$4f,$4e,$53,$4f,$4c,$45,$0
.ENDS

.RAMSECTION ".bss" BANK $7e SLOT 2
__local_dummybss dsb 1
.ENDS
